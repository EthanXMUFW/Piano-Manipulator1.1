%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Cover design with cartoon robots.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 12/28/2020
%%BoundingBox: 0 0 3700 2000
%%HiResBoundingBox: 0 0 3700 2000
%%CropBox: 0 0 3700 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:tiff="http://ns.adobe.com/tiff/1.0/">
         <tiff:XResolution>720000/10000</tiff:XResolution>
         <tiff:YResolution>720000/10000</tiff:YResolution>
         <tiff:ResolutionUnit>2</tiff:ResolutionUnit>
         <tiff:Compression>6</tiff:Compression>
         <tiff:JPEGInterchangeFormat>306</tiff:JPEGInterchangeFormat>
         <tiff:JPEGInterchangeFormatLength>8984</tiff:JPEGInterchangeFormatLength>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:ModifyDate>2020-12-28T12:54:29+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2020-12-28T12:54:29+02:00</xmp:CreateDate>
         <xmp:MetadataDate>2020-12-28T12:54:29+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A5/plo+o6taaXAyrc3j+n&#xA;EXqFBoTViATTbwze5MghGy6CMCWaf8qc8z/8tNl/wcv/AFSzD/lHH3H8fFPhlr/lTvmb/lpsv+Dl&#xA;/wCqWH+UIdx/HxRwFr/lT/mb/lpsv+Dl/wCqWP8AKEO4/j4rwu/5VD5l/wCWmz/4OX/qlh/Pw7j+&#xA;Piimv+VReZP+Wmz/AODl/wCqWP5+HcUU0fyk8yf8tNn/AMHL/wBU8P56HcULT+U3mMf8fFn/AMHL&#xA;/wBU8fz0O4rbR/KjzF/y0Wn/AAcv/VPD+dh3FHE0fyq8wj/j4tP+Dl/6p4fzkPNHGFp/KzzB/wAt&#xA;Fp/wcn/VPH83HzR4gaP5X+YP+Wi0/wCDk/6p4fzUfNHiho/ljr4/3fa/8HJ/1Tw/mo+aPGDR/LPX&#xA;h/u+1/4OT/qnj+Zj5o8cLT+Wuu/7/tf+Dk/6p4fzEUfmI+bR/LfXP9/23/Byf9U8PjxR+Zj5tH8u&#xA;db/3/bf8FJ/zRj44X81Hza/5V3rf+/7b/gpP+aMPjBH5uPm7/lXet/7/ALb/AIKT/mjHxgv5uPm7&#xA;/lXet/7/ALb/AIKT/mjHxgv5uPm7/lXet/7/ALb/AIKT/mjHxgv5uPm7/lXet/7/ALb/AIKT/mjH&#xA;xgv5uPm7/lXet/7/ALb/AIKT/mjHxgv5uPm7/lXet/7/ALb/AIKT/mjHxgv5uPm7/lXet/7/ALb/&#xA;AIKT/mjHxgv5uPm7/lXet/7/ALb/AIKT/mjHxgv5uPm7/lXet/7/ALb/AIKT/mjHxgv5uPm7/lXe&#xA;t/7/ALb/AIKT/mjHxgv5uPm7/lXet/7/ALb/AIKT/mjHxgv5uPm7/lXet/7/ALb/AIKT/mjHxgv5&#xA;uPm7/lXet/7/ALb/AIKT/mjHxgv5uPmx2+s5bO7ltZSrSQsUYrUrUeFQMsBsW5EZWLRHkv8A8mFo&#xA;f/MQP+INmPq/7suTi5PpEjNAzIWkYWJCXtrOjC9Nib+2F6KA2plT1d+nwV5fhk+CVXWyKRZGBiQs&#xA;IwsSFpGFiQsK5K2JCmVwgsCFhXJAsSFhXJWxIUyuStgQsK5IFiQplclbAhYVw2xIWFckCxIUyuSB&#xA;YELCuStiQtwodih2KuxV2KuxV2KuxV2KuxV2KuxV2KvJfMv/AB37/wD4zNmXj+kO2w/QFnkr/wAm&#xA;Hof/ADED/iDZTrP7subhfSZGc82EJP5tu7yy8sateWdfrdvaTywEdQ6xkhvo65biAMgD3opinlj8&#xA;ufJN95OsWnsY7ua/t47i4v2JNw0siBnYS15r8ROwPzzIyaiYmd+SklJLe78w6XfXmiNrLXGmWBK2&#xA;txI4S4VEBLrI21eHQNX7umYWs1mA45b1k5ULvi6U7TS9l6kZsU+C8UqJJAMeHrd8tvj3KsPmq8gh&#xA;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&#xA;7/yX9x5u/wCscf8Ataf8Pj+/8l/ceb//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:exif="http://ns.adobe.com/exif/1.0/">
         <exif:ColorSpace>65535</exif:ColorSpace>
         <exif:PixelXDimension>887</exif:PixelXDimension>
         <exif:PixelYDimension>718</exif:PixelYDimension>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Cover design with cartoon robots</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Cover design with cartoon robots. Machines, cyborgs, electronic assistants vector illustrations with text Robotics and machinery club concept for poster, website or webpage background</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>banner</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>geometric</rdf:li>
               <rdf:li>abstract</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>template</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>trendy</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>colorful</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>symbol</rdf:li>
               <rdf:li>advertising</rdf:li>
               <rdf:li>promotion</rdf:li>
               <rdf:li>marketing</rdf:li>
               <rdf:li>text</rdf:li>
               <rdf:li>sample</rdf:li>
               <rdf:li>lettering</rdf:li>
               <rdf:li>flyer</rdf:li>
               <rdf:li>cover</rdf:li>
               <rdf:li>website</rdf:li>
               <rdf:li>webpage</rdf:li>
               <rdf:li>robot</rdf:li>
               <rdf:li>robotics</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>machine</rdf:li>
               <rdf:li>cyborg</rdf:li>
               <rdf:li>artificial</rdf:li>
               <rdf:li>intelligence</rdf:li>
               <rdf:li>machinery</rdf:li>
               <rdf:li>assistant</rdf:li>
               <rdf:li>orange</rdf:li>
               <rdf:li>blue</rdf:li>
               <rdf:li>pale</rdf:li>
               <rdf:li>waving</rdf:li>
               <rdf:li>hello</rdf:li>
               <rdf:li>welcome</rdf:li>
               <rdf:li>innovation</rdf:li>
               <rdf:li>club</rdf:li>
               <rdf:li>school</rdf:li>
               <rdf:li>show</rdf:li>
               <rdf:li>exhibition</rdf:li>
               <rdf:li>cyber</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:C691C901FB48EB11974CB3F47EB7D812</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:C691C901FB48EB11974CB3F47EB7D812</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:ade557ca-2ab7-f447-a46b-27289bc03a98</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:77a52af4-0c31-ad45-bd4c-b7310d703178</stRef:instanceID>
            <stRef:documentID>xmp.did:c147e31c-03f1-1545-90d2-0b5908e30fc2</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:ade557ca-2ab7-f447-a46b-27289bc03a98</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ade557ca-2ab7-f447-a46b-27289bc03a98</stEvt:instanceID>
                  <stEvt:when>2020-10-16T15:47:07+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7b293937-eef0-364c-801a-9c146942a412</stEvt:instanceID>
                  <stEvt:when>2020-10-18T19:42:24+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7f6c6298-26ea-1746-8b2f-1542d9f3a43f</stEvt:instanceID>
                  <stEvt:when>2020-10-29T15:29:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:dcbe1d94-291c-fb41-998b-c71561d74d25</stEvt:instanceID>
                  <stEvt:when>2020-11-15T13:29:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9c4c9baa-ad72-a545-a7a4-2196696cf833</stEvt:instanceID>
                  <stEvt:when>2020-11-20T22:57:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c147e31c-03f1-1545-90d2-0b5908e30fc2</stEvt:instanceID>
                  <stEvt:when>2020-11-22T11:30:26+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:77a52af4-0c31-ad45-bd4c-b7310d703178</stEvt:instanceID>
                  <stEvt:when>2020-12-07T22:09:28+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C691C901FB48EB11974CB3F47EB7D812</stEvt:instanceID>
                  <stEvt:when>2020-12-28T12:54:29+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:CreatorSubTool>AIRobin</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3700.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=191 G=97 B=85</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>191</xmpG:red>
                           <xmpG:green>97</xmpG:green>
                           <xmpG:blue>85</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=216 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>216</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=235 G=173 B=132</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>235</xmpG:red>
                           <xmpG:green>173</xmpG:green>
                           <xmpG:blue>132</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=139 B=147</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>147</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=112 G=189 B=200</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>112</xmpG:red>
                           <xmpG:green>189</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=215 G=85 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>215</xmpG:red>
                           <xmpG:green>85</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=235 G=213 B=218</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>235</xmpG:red>
                           <xmpG:green>213</xmpG:green>
                           <xmpG:blue>218</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=196 G=32 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>196</xmpG:red>
                           <xmpG:green>32</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=33 G=33 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>33</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=201 G=71 B=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>201</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>70</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=246 G=117 B=88</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>117</xmpG:green>
                           <xmpG:blue>88</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=229 G=182 B=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>182</xmpG:green>
                           <xmpG:blue>70</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=254 G=215 B=110</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>254</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>110</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=181 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=148 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>148</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=238 G=99 B=81</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>238</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>81</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=124 B=106</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>106</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=157 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=97 B=78</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>97</xmpG:green>
                           <xmpG:blue>78</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=185 G=87 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>185</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=60 B=47</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>60</xmpG:green>
                           <xmpG:blue>47</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=226 G=160 B=133</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>226</xmpG:red>
                           <xmpG:green>160</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=242 B=236</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>236</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=222 B=193</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>222</xmpG:green>
                           <xmpG:blue>193</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=185 G=87 B=65 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>185</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=246 G=117 B=88 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>117</xmpG:green>
                           <xmpG:blue>88</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=142 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=240 G=186 B=91</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>240</xmpG:red>
                           <xmpG:green>186</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=180 B=38</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>38</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=214 B=110</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>214</xmpG:green>
                           <xmpG:blue>110</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=196 G=69 B=76</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>196</xmpG:red>
                           <xmpG:green>69</xmpG:green>
                           <xmpG:blue>76</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=90 B=94</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>94</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=229 G=96 B=75</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>96</xmpG:green>
                           <xmpG:blue>75</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=246 G=117 B=88 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>117</xmpG:green>
                           <xmpG:blue>88</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=227 G=181 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>227</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=214 B=110 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>214</xmpG:green>
                           <xmpG:blue>110</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=32 G=180 B=151</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>32</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>151</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=126 G=235 B=214</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>126</xmpG:red>
                           <xmpG:green>235</xmpG:green>
                           <xmpG:blue>214</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=181 B=237 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=148 B=221 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>148</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TOYO 0176</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>210</xmpG:green>
                           <xmpG:blue>127</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3700 2000 li
3700 0 li
cp
clp
3700 2000 mo
0 2000 li
0 0 li
3700 0 li
3700 2000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.133333 .337255 .490196 rgb
f
26.8443 1961.24 mo
3541.84 1961.24 li
3541.84 111.235 li
26.8443 111.235 li
26.8443 1961.24 li
f
28.2418 1960.46 mo
3543.24 1960.46 li
3543.24 110.464 li
28.2418 110.464 li
28.2418 1960.46 li
.133333 .333333 .486275 rgb
f
29.6384 1959.69 mo
3544.64 1959.69 li
3544.64 109.693 li
29.6384 109.693 li
29.6384 1959.69 li
.129412 .329412 .482353 rgb
f
31.035 1958.92 mo
3546.03 1958.92 li
3546.03 108.922 li
31.035 108.922 li
31.035 1958.92 li
.129412 .32549 .478431 rgb
f
32.4326 1958.15 mo
3547.43 1958.15 li
3547.43 108.152 li
32.4326 108.152 li
32.4326 1958.15 li
.12549 .321569 .47451 rgb
f
33.8292 1957.38 mo
3548.83 1957.38 li
3548.83 107.38 li
33.8292 107.38 li
33.8292 1957.38 li
.12549 .317647 .470588 rgb
f
35.2258 1956.61 mo
3550.23 1956.61 li
3550.23 106.609 li
35.2258 106.609 li
35.2258 1956.61 li
.12549 .313726 .466667 rgb
f
36.6233 1955.84 mo
3551.62 1955.84 li
3551.62 105.839 li
36.6233 105.839 li
36.6233 1955.84 li
.121569 .309804 .462745 rgb
f
38.0199 1955.07 mo
3553.02 1955.07 li
3553.02 105.067 li
38.0199 105.067 li
38.0199 1955.07 li
.121569 .305882 .462745 rgb
f
39.4165 1954.3 mo
3554.42 1954.3 li
3554.42 104.296 li
39.4165 104.296 li
39.4165 1954.3 li
.117647 .301961 .458824 rgb
f
40.8141 1953.52 mo
3555.81 1953.52 li
3555.81 103.526 li
40.8141 103.526 li
40.8141 1953.52 li
.117647 .298039 .454902 rgb
f
42.2107 1952.75 mo
3557.21 1952.75 li
3557.21 102.754 li
42.2107 102.754 li
42.2107 1952.75 li
.117647 .294118 .45098 rgb
f
43.6073 1951.98 mo
3558.61 1951.98 li
3558.61 101.984 li
43.6073 101.984 li
43.6073 1951.98 li
.113725 .290196 .447059 rgb
f
45.0049 1951.21 mo
3560 1951.21 li
3560 101.212 li
45.0049 101.212 li
45.0049 1951.21 li
.113725 .286275 .443137 rgb
f
46.4014 1950.44 mo
3561.4 1950.44 li
3561.4 100.441 li
46.4014 100.441 li
46.4014 1950.44 li
.109804 .282353 .439216 rgb
f
47.798 1949.67 mo
3562.8 1949.67 li
3562.8 99.6707 li
47.798 99.6707 li
47.798 1949.67 li
.109804 .278431 .435294 rgb
f
49.1956 1948.9 mo
3564.2 1948.9 li
3564.2 98.8991 li
49.1956 98.8991 li
49.1956 1948.9 li
.109804 .27451 .431373 rgb
f
50.5922 1948.13 mo
3565.59 1948.13 li
3565.59 98.1284 li
50.5922 98.1284 li
50.5922 1948.13 li
.105882 .270588 .427451 rgb
f
51.9888 1947.36 mo
3566.99 1947.36 li
3566.99 97.3578 li
51.9888 97.3578 li
51.9888 1947.36 li
.105882 .266667 .423529 rgb
f
53.3864 1946.59 mo
3568.39 1946.59 li
3568.39 96.5872 li
53.3864 96.5872 li
53.3864 1946.59 li
.101961 .262745 .419608 rgb
f
54.783 1945.82 mo
3569.78 1945.82 li
3569.78 95.8165 li
54.783 95.8165 li
54.783 1945.82 li
.101961 .258824 .415686 rgb
f
56.1805 1945.04 mo
3571.18 1945.04 li
3571.18 95.0449 li
56.1805 95.0449 li
56.1805 1945.04 li
.101961 .254902 .411765 rgb
f
57.5771 1944.27 mo
3572.58 1944.27 li
3572.58 94.2743 li
57.5771 94.2743 li
57.5771 1944.27 li
.0980392 .25098 .407843 rgb
f
58.9737 1943.5 mo
3573.97 1943.5 li
3573.97 93.5027 li
58.9737 93.5027 li
58.9737 1943.5 li
.0980392 .247059 .403922 rgb
f
60.3703 1942.73 mo
3575.37 1942.73 li
3575.37 92.732 li
60.3703 92.732 li
60.3703 1942.73 li
.0941176 .247059 .403922 rgb
f
61.7679 1941.96 mo
3576.77 1941.96 li
3576.77 91.9614 li
61.7679 91.9614 li
61.7679 1941.96 li
.0941176 .243137 .4 rgb
f
63.1645 1941.19 mo
3578.16 1941.19 li
3578.16 91.1908 li
63.1645 91.1908 li
63.1645 1941.19 li
.0901961 .239216 .396078 rgb
f
64.5611 1940.42 mo
3579.56 1940.42 li
3579.56 90.4191 li
64.5611 90.4191 li
64.5611 1940.42 li
.0901961 .235294 .392157 rgb
f
65.9586 1939.65 mo
3580.96 1939.65 li
3580.96 89.6485 li
65.9586 89.6485 li
65.9586 1939.65 li
.0901961 .231373 .388235 rgb
f
67.3552 1938.88 mo
3582.36 1938.88 li
3582.36 88.8769 li
67.3552 88.8769 li
67.3552 1938.88 li
.0862745 .227451 .384314 rgb
f
68.7528 1938.11 mo
3583.75 1938.11 li
3583.75 88.1063 li
68.7528 88.1063 li
68.7528 1938.11 li
.0862745 .223529 .380392 rgb
f
70.1494 1937.33 mo
3585.15 1937.33 li
3585.15 87.3346 li
70.1494 87.3346 li
70.1494 1937.33 li
.0823529 .219608 .376471 rgb
f
71.546 1936.56 mo
3586.55 1936.56 li
3586.55 86.564 li
71.546 86.564 li
71.546 1936.56 li
.0823529 .215686 .372549 rgb
f
72.9426 1935.79 mo
3587.94 1935.79 li
3587.94 85.7943 li
72.9426 85.7943 li
72.9426 1935.79 li
.0823529 .211765 .368627 rgb
f
74.3401 1935.02 mo
3589.34 1935.02 li
3589.34 85.0227 li
74.3401 85.0227 li
74.3401 1935.02 li
.0784314 .207843 .364706 rgb
f
75.7367 1934.25 mo
3590.74 1934.25 li
3590.74 84.2521 li
75.7367 84.2521 li
75.7367 1934.25 li
.0784314 .203922 .360784 rgb
f
77.1333 1933.48 mo
3592.13 1933.48 li
3592.13 83.4805 li
77.1333 83.4805 li
77.1333 1933.48 li
.0745098 .2 .356863 rgb
f
78.5309 1932.71 mo
3593.53 1932.71 li
3593.53 82.7098 li
78.5309 82.7098 li
78.5309 1932.71 li
.0745098 .196078 .352941 rgb
f
79.9275 1931.94 mo
3594.93 1931.94 li
3594.93 81.9382 li
79.9275 81.9382 li
79.9275 1931.94 li
.0745098 .192157 .34902 rgb
f
81.3251 1931.17 mo
3596.32 1931.17 li
3596.32 81.1676 li
81.3251 81.1676 li
81.3251 1931.17 li
.0705882 .188235 .345098 rgb
f
82.7216 1930.4 mo
3597.72 1930.4 li
3597.72 80.397 li
82.7216 80.397 li
82.7216 1930.4 li
.0705882 .184314 .345098 rgb
f
84.1182 1929.63 mo
3599.12 1929.63 li
3599.12 79.6263 li
84.1182 79.6263 li
84.1182 1929.63 li
.0666667 .180392 .341176 rgb
f
85.5158 1928.85 mo
3600.52 1928.85 li
3600.52 78.8547 li
85.5158 78.8547 li
85.5158 1928.85 li
.0666667 .176471 .337255 rgb
f
86.9124 1928.08 mo
3601.91 1928.08 li
3601.91 78.0841 li
86.9124 78.0841 li
86.9124 1928.08 li
.0666667 .172549 .333333 rgb
f
88.309 1927.31 mo
3603.31 1927.31 li
3603.31 77.3124 li
88.309 77.3124 li
88.309 1927.31 li
.0627451 .168627 .329412 rgb
f
89.7056 1926.54 mo
3604.71 1926.54 li
3604.71 76.5418 li
89.7056 76.5418 li
89.7056 1926.54 li
.0627451 .164706 .32549 rgb
f
91.1032 1925.77 mo
3606.1 1925.77 li
3606.1 75.7702 li
91.1032 75.7702 li
91.1032 1925.77 li
.0588235 .160784 .321569 rgb
f
92.4998 1925 mo
3607.5 1925 li
3607.5 74.9996 li
92.4998 74.9996 li
92.4998 1925 li
.0588235 .156863 .317647 rgb
f
gsave
92.4998 1925 mo
3607.5 1925 li
3607.5 74.9996 li
92.4998 74.9996 li
92.4998 1925 li
clp
3607.5 1925 mo
3606.1 1925 li
3210.55 1925 li
3162.19 1743.58 3051.06 1475.47 3051.06 1475.47 cv
3030.78 1466.09 3011.2 1457.93 2992.23 1450.88 cv
2950.34 1412.21 2899.97 1367.96 2865.45 1341.67 cv
2856.11 1334.56 2845 1331.09 2834.05 1331.09 cv
2819.02 1331.09 2804.32 1337.64 2795.07 1350.29 cv
2738 1242.05 li
2712.02 1192.79 2666.58 1162.87 2624.57 1162.87 cv
2613.28 1162.87 2602.24 1165.03 2591.88 1169.55 cv
2587.79 1162.23 2578.25 1158.63 2565.81 1158.63 cv
2553.01 1158.63 2537.14 1162.44 2520.98 1169.95 cv
2513.9 1156.51 li
2495.04 1159.64 li
2531.05 1125.26 li
2497.06 1124.59 li
2489.33 1109.92 li
2500.6 1102.17 2504.53 1087.04 2497.99 1074.64 cv
2493.09 1065.34 2483.6 1060.03 2473.77 1060.03 cv
2469.47 1060.03 2465.11 1061.05 2461.04 1063.2 cv
2447.68 1070.24 2442.56 1086.79 2449.61 1100.15 cv
2454.51 1109.45 2464 1114.75 2473.83 1114.75 cv
2476.45 1114.75 2479.11 1114.37 2481.7 1113.59 cv
2491.91 1132.95 li
2510.37 1133.31 li
2469.36 1172.47 li
2509.26 1165.86 li
2513.41 1173.73 li
2479.46 1191.88 2458.88 1219.46 2467.35 1235.62 cv
2424.66 1265.09 2415.44 1334.07 2447.65 1395.15 cv
2512.68 1518.47 li
2512.61 1518.35 2512.54 1518.22 2512.48 1518.1 cv
2536.52 1563.69 li
2521.44 1585.19 2508.64 1607.45 2497.79 1629.28 cv
2497.79 1629.28 2497.79 1629.29 2497.8 1629.29 cv
2454.68 1716.12 2442.64 1796.3 2442.64 1796.3 cv
2473.1 1841.69 2504.55 1884.77 2535.77 1925 cv
2223.14 1925 li
2147.19 1494 2256.86 790.177 2298.49 552.333 cv
2313.29 564.449 li
2319.01 563.88 2322.21 563.56 2327.92 562.989 cv
2328.67 562.075 li
2334.34 555.15 li
2333.97 554.85 li
2338.44 555.014 2342.35 555.086 2345.77 555.086 cv
2367.66 555.086 2369.39 552.169 2369.39 552.169 cv
2369.39 552.169 2365.06 539.315 2352.01 532.079 cv
2352.67 530.64 li
2353.83 531.299 2355 532.007 2356.17 532.763 cv
2356.68 533.18 li
2356.75 533.135 li
2358.92 534.568 2361.1 536.165 2363.24 537.918 cv
2366.73 530.324 li
2370.49 533.407 li
2393.64 516.843 li
2394.44 517.396 2395.25 517.947 2396.06 518.5 cv
2396.06 518.5 li
2396.06 518.5 li
2398.21 516.897 2400.32 515.257 2402.38 513.581 cv
2404.86 515.297 2407.35 517.011 2409.87 518.728 cv
2412.58 516.703 2415.22 514.617 2417.8 512.476 cv
2419.1 513.538 li
2446.97 498.489 li
2463.53 510.352 li
2463.77 512.418 2464.81 514.426 2466.59 515.88 cv
2468.17 517.178 2470.08 517.814 2471.94 517.814 cv
2474.23 517.814 2476.46 516.859 2477.99 514.999 cv
2480.75 511.622 2480.13 506.541 2476.6 503.651 cv
2475.01 502.354 2473.11 501.72 2471.25 501.72 cv
2469.52 501.72 2467.83 502.263 2466.45 503.327 cv
2451.75 490.748 li
2459.2 472.704 li
2454.96 469.991 li
2458.77 463.898 2462.25 457.535 2465.39 450.895 cv
2463.39 449.057 2461.38 447.234 2459.38 445.407 cv
2480.9 412.184 2473.48 366.165 2441.27 337.589 cv
2441 337.357 li
2440.15 336.611 2439.29 335.871 2438.41 335.149 cv
2421.46 321.275 2401.18 314.46 2381.49 314.46 cv
2379.66 314.46 2377.83 314.519 2376.02 314.636 cv
2373.24 314.367 2370.47 314.232 2367.71 314.231 cv
2367.7 314.231 2367.69 314.231 2367.68 314.231 cv
2367.68 314.231 li
2367.68 314.231 li
2367.67 314.231 2367.66 314.231 2367.65 314.231 cv
2347.01 314.237 2327.02 321.721 2312.13 336.398 cv
2311.64 336.042 2311.16 335.689 2310.67 335.333 cv
2310.67 335.333 li
2301.4 341.694 2293.53 348.312 2286.66 355.237 cv
2286.4 355.411 li
2271.16 343.492 li
2272.76 340.236 2271.89 336.105 2268.84 333.606 cv
2267.25 332.307 2265.35 331.672 2263.48 331.672 cv
2261.19 331.672 2258.96 332.627 2257.44 334.487 cv
2254.67 337.864 2255.3 342.944 2258.83 345.835 cv
2260.41 347.133 2262.32 347.768 2264.18 347.768 cv
2264.41 347.768 2264.63 347.758 2264.85 347.74 cv
2279.76 361.63 li
2279.26 363.24 li
2268.61 375.623 2260.51 388.98 2252.98 403.566 cv
2255.06 405.472 2257.11 407.343 2259.13 409.186 cv
2246.67 443.139 li
2253.2 448.481 li
2249.94 450.855 li
2246.62 449.74 2244.36 449.454 2244.36 449.454 cv
2244.36 449.454 2240.97 452.521 2248.85 485.184 cv
2243.19 492.106 li
2242.44 493.023 li
2242.79 496.559 2243.05 499.134 2243.33 501.936 cv
2177.02 531.809 2067.82 582.102 1933.58 648.027 cv
1906.05 532.984 li
236.834 612.126 li
264.089 1187.21 li
315.765 1187.81 li
373.844 1636.78 li
431.679 1637.99 li
345.387 1734.86 282.906 1831.44 254.621 1925 cv
92.4998 1925 li
92.4998 74.9996 li
3607.5 74.9996 li
3607.5 1381.01 li
3578.72 1357.29 li
3578.72 1357.29 li
3497.4 1290.29 li
3392.08 1418.11 li
3607.5 1595.61 li
3607.5 1925 li
2773.78 1054.85 mo
2760.84 1068.17 2753.14 1088.07 2749.64 1111.67 cv
2743.94 1139.12 2799.42 1158.19 2849.93 1165.96 cv
2856.13 1166.91 2862.34 1167.38 2868.5 1167.38 cv
2904.35 1167.38 2938.7 1151.55 2962.13 1123.54 cv
3014.92 1060.45 3082.83 964.947 3144.9 889.613 cv
3214.81 804.769 3136.33 739.326 3127.09 725.243 cv
3117.7 710.931 3108.07 705.334 3098.57 705.334 cv
3077.24 705.334 3056.53 733.575 3040.55 754.798 cv
2948 678.542 li
2941.89 673.5 2934.49 671.043 2927.13 671.043 cv
2917.66 671.043 2908.26 675.121 2901.76 683.004 cv
2688.4 941.936 li
2676.86 955.938 2678.86 976.642 2692.86 988.18 cv
2773.78 1054.85 li
511.347 437.336 mo
511.347 437.336 li
540.737 480.491 584.786 502.236 625.375 502.237 cv
627.355 502.237 629.328 502.185 631.29 502.082 cv
631.299 502.081 631.305 502.081 631.313 502.08 cv
631.363 502.078 631.412 502.075 631.461 502.072 cv
631.47 502.072 631.489 502.071 631.497 502.07 cv
631.546 502.068 631.593 502.065 631.642 502.062 cv
631.651 502.062 631.667 502.061 631.676 502.061 cv
631.782 502.055 631.887 502.049 631.993 502.042 cv
631.993 502.042 li
641.681 501.469 651.104 499.631 660.02 496.52 cv
660.02 496.522 li
660.922 496.205 661.82 495.876 662.713 495.536 cv
662.713 495.536 li
677.921 489.721 691.519 480.118 702.206 466.7 cv
746.502 409.542 754.385 330.176 729.096 291.654 cv
717.716 274.96 695.007 262.155 667.21 254.65 cv
667.211 254.65 667.214 254.65 667.215 254.65 cv
667.215 254.65 li
667.215 254.65 li
657.537 252.037 647.239 250.067 636.592 248.798 cv
636.587 248.798 636.584 248.797 636.58 248.797 cv
636.097 248.739 635.613 248.683 635.128 248.629 cv
635.115 248.627 635.106 248.626 635.093 248.625 cv
634.807 248.593 634.518 248.561 634.233 248.529 cv
634.22 248.528 634.208 248.527 634.195 248.525 cv
633.907 248.494 633.621 248.463 633.332 248.433 cv
633.323 248.432 633.309 248.431 633.301 248.43 cv
632.815 248.379 632.33 248.33 631.843 248.282 cv
631.839 248.281 631.826 248.28 631.822 248.28 cv
631.533 248.251 631.242 248.223 630.952 248.196 cv
630.939 248.194 630.924 248.193 630.911 248.192 cv
623.441 247.485 615.82 247.122 608.143 247.122 cv
588.148 247.122 567.756 249.584 548.513 254.863 cv
548.513 254.863 li
548.043 254.999 547.575 255.138 547.11 255.28 cv
479.942 275.77 462.104 361.051 510.474 435.995 cv
510.545 436.106 510.615 436.213 510.687 436.324 cv
510.837 436.556 510.985 436.783 511.136 437.014 cv
511.206 437.121 511.277 437.229 511.347 437.336 cv
2326.01 531.236 mo
2317.48 524.266 li
2318.07 524.206 2318.68 524.177 2319.31 524.177 cv
2319.43 524.177 2319.54 524.178 2319.66 524.18 cv
2324.17 527.871 li
2325.02 526.828 2326.12 526.028 2327.41 525.461 cv
2329.15 525.965 2330.95 526.615 2332.8 527.403 cv
2329.01 527.704 2326.96 529.186 2326.01 531.236 cv
level3{
gsave
clp
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.32549 .737255 .721569 ]
/C1 [.32549 .737255 .721569 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.32549 .737255 .721569 ]
/C1 [.564706 .807843 .709804 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.564706 .807843 .709804 ]
/C1 [.996078 .913725 .729412 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.996078 .913725 .729412 ]
/C1 [.996078 .913725 .729412 ]
/N 1 
>>
]
/Bounds [.218947 .403598 .839551 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;cHat=BSg3
?!^lH@Uit]B4u$qCi401EH?5EGBeCZI!pHoJV&N.L51VCMiEaXOHG]iPa.Q$R$jD4S=Q7DTV8*TUnsrd
W2ZetXKAY/Yd(L?['d?O\@K2_]Y2%n^VI\&_o0O6a2lBFbKS5Vcd:(fe'uq!f@\d1gYCWAhr*JQj5f=a
kNM0qlg4$,n*ol<oCV_Lp\=R\qu$Elrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
~>
<~]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(nj]tM.o
^V@P!^qde&_SX1-_o'F2`Pog9`lH-?aN2HEai_cKbKJ)Qbg"DWcHa_\cd0q`d*U.ddF$@hdaHRle'ldp
e'umseCE+"e^i=&f%8O*f@\a.f\+s2g"P06g=k<9gY:N=gt^`Ah;-rEhVR/Ihr!AMi8ESQiSieUio8tX
j5]1\jQ,C`jlPUdk2tghkND$lkih6pl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hs
~>
<~\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@8rV\$riU
\$riU\$riU[^NWQ[^NWQ[^NWQ[^NWQ[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*HO
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ\$riU\$riU\$riU\$riU\$riU\$riV\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y
\@K/\\[f8]\[f8]\[f8]\[f8]\[f8^]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
2363.24 537.918 mo
2361.1 536.165 2358.92 534.568 2356.75 533.135 cv
2386.44 511.882 li
2388.83 513.537 2391.23 515.19 2393.64 516.843 cv
2370.49 533.407 li
2366.73 530.324 li
2363.24 537.918 li
2356.17 532.763 mo
2355 532.007 2353.83 531.299 2352.67 530.64 cv
2352.92 530.096 li
2356.17 532.763 li
2324.17 527.871 mo
2319.66 524.18 li
2322.01 524.218 2324.62 524.654 2327.41 525.461 cv
2326.12 526.028 2325.02 526.828 2324.17 527.871 cv
2409.87 518.728 mo
2407.35 517.011 2404.86 515.297 2402.38 513.581 cv
2423.46 496.436 2439.85 475.466 2451.58 450.667 cv
2449.58 448.83 2447.58 446.999 2445.57 445.174 cv
2453.81 432.457 2457.81 417.866 2457.8 403.094 cv
2457.78 378.299 2446.47 353.003 2424.97 335.224 cv
2424.95 335.206 2424.93 335.188 2424.9 335.17 cv
2424.87 335.139 2424.83 335.109 2424.79 335.078 cv
2424.73 335.025 2424.66 334.973 2424.6 334.921 cv
2424.6 334.921 li
2410.03 322.998 2393.02 316.288 2376.02 314.636 cv
2377.83 314.519 2379.66 314.46 2381.49 314.46 cv
2401.18 314.46 2421.46 321.275 2438.41 335.149 cv
2439.29 335.871 2440.15 336.611 2441 337.357 cv
2441.27 337.589 li
2473.48 366.165 2480.9 412.184 2459.38 445.407 cv
2461.38 447.234 2463.39 449.057 2465.39 450.895 cv
2462.25 457.535 2458.77 463.898 2454.96 469.991 cv
2459.2 472.704 li
2451.75 490.748 li
2466.45 503.327 li
2467.83 502.263 2469.52 501.72 2471.25 501.72 cv
2473.11 501.72 2475.01 502.354 2476.6 503.651 cv
2480.13 506.541 2480.75 511.622 2477.99 514.999 cv
2476.46 516.859 2474.23 517.814 2471.94 517.814 cv
2470.08 517.814 2468.17 517.178 2466.59 515.88 cv
2464.81 514.426 2463.77 512.418 2463.53 510.352 cv
2446.97 498.489 li
2419.1 513.538 li
2417.8 512.476 li
2415.22 514.617 2412.58 516.703 2409.87 518.728 cv
2279.26 363.24 mo
2279.76 361.63 li
2264.85 347.74 li
2264.63 347.758 2264.41 347.768 2264.18 347.768 cv
2262.32 347.768 2260.41 347.133 2258.83 345.835 cv
2255.3 342.944 2254.67 337.864 2257.44 334.487 cv
2258.96 332.627 2261.19 331.672 2263.48 331.672 cv
2265.35 331.672 2267.25 332.307 2268.84 333.606 cv
2271.89 336.105 2272.76 340.236 2271.16 343.492 cv
2286.4 355.411 li
2286.66 355.237 li
2284.06 357.859 2281.6 360.526 2279.26 363.24 cv
level3{
gsave
clp
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.317647 .713725 .698039 ]
/C1 [.317647 .713725 .698039 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.317647 .713725 .698039 ]
/C1 [.486274 .764706 .690196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.486274 .764706 .690196 ]
/C1 [.788235 .839216 .701961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.788235 .839216 .701961 ]
/C1 [.788235 .839216 .701961 ]
/N 1 
>>
]
/Bounds [.218947 .403598 .839551 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f1+h<)lt#
=BSg2>?kH??XR;O@q9+]AnPdkC27X&DJjB3EH6,BF`qtRG^4U^I!pElIt*!"JV&N-KS>/8LPUbCMMd=N
NK&sZO-#KdP*;)oQ'IZ%R$a;1R[]h;SXuFFTV8'RUSFW]V5C/gW2ZesX/rD)Y-+t4Yd(L>Za@-J[^W`U
\[f;`]=bhk^;%J!_8=(,`5KX7`lH0AaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HD
~>
<~[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C*EM[C3NP\$riU
\@B&Z\[f8^]"5Jb]=Y_g]Y(qk]tM.o^;%Ft^VIY#^qmk'_SX1,_o'C0_o'F2`5KU4`Pog8`Q#p;`l?$=
a2c6@a2l?CaN2HEaiVZHai_cKb0%lMbKJ)PbKS2Sbfn;Uc-=MXcHa_\cHab^cd0q`d*U.dd*U1fdF$@h
daHRldaHUne'ldpeC<!teC<%!e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#
~>
<~Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=
Z*CR=Z*CR=Z*CR=Z*CR=Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
Yct@9Yct@9Yct@9Yd(I<Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CU?ZEgdAZEgdAZEgdA
ZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdA
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
2313.29 564.449 mo
2298.49 552.333 li
2300.43 541.285 2302.21 531.258 2303.82 522.295 cv
2310.36 527.643 li
2311.97 525.675 2314.43 524.572 2317.48 524.266 cv
2326.01 531.236 li
2326.96 529.186 2329.01 527.704 2332.8 527.403 cv
2338.18 529.701 2343.92 533.18 2349.43 537.69 cv
2352.01 532.079 li
2365.06 539.315 2369.39 552.169 2369.39 552.169 cv
2369.39 552.169 2367.66 555.086 2345.77 555.086 cv
2342.35 555.086 2338.44 555.014 2333.97 554.85 cv
2334.34 555.15 li
2328.67 562.075 li
2327.92 562.989 li
2322.21 563.56 2319.01 563.88 2313.29 564.449 cv
2243.33 501.936 mo
2243.05 499.134 2242.79 496.559 2242.44 493.023 cv
2243.19 492.106 li
2248.85 485.184 li
2240.97 452.521 2244.36 449.454 2244.36 449.454 cv
2244.36 449.454 2246.62 449.74 2249.94 450.855 cv
2246.45 453.4 li
2262.09 466.201 2269.96 482.46 2264.02 489.714 cv
2266.34 491.614 li
2259.38 494.719 2251.68 498.173 2243.33 501.936 cv
level3{
gsave
clp
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
2223.14 1925 mo
254.621 1925 li
282.906 1831.44 345.387 1734.86 431.679 1637.99 cv
1934.93 1669.24 li
2066.73 1208.21 li
2067.65 1208.22 li
2067.23 1206.47 li
2067.7 1204.83 li
2066.84 1204.82 li
1933.58 648.027 li
2067.82 582.102 2177.02 531.809 2243.33 501.936 cv
2243.5 503.662 2243.68 505.474 2243.9 507.65 cv
2298.49 552.333 li
2256.86 790.177 2147.19 1494 2223.14 1925 cv
level3{
gsave
clp
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.635294 .835294 .701961 ]
/C1 [.635294 .835294 .701961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.635294 .835294 .701961 ]
/C1 [.741176 .866667 .698039 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.741176 .866667 .698039 ]
/C1 [.929412 .909804 .705882 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .909804 .705882 ]
/C1 [.929412 .909804 .705882 ]
/N 1 
>>
]
/Bounds [.218947 .403598 .839551 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTq\<WUnji`
VPg>jW2ZbrX/i>'Xf\b0YHY79Z*L^B['[6K[^W`U\@K/]]=Y_g]tM.o^V@P!^qmk(_SX4.`5KX6`Q#p<
a2l?CaiV]JbKJ)Qbg"DXcHab^d*U1fdF-Ile'umse^`7%f@SX,f\+s3g=k<9gt^`Ah;7#Ghr*GNiSieU
j5]4]jQ5Lck3(pjkih9qlK[[#lg4!)m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
~>
<~eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teCE+"e^`7%
f%/F'f@SX+f@S[-f\"j/g"G'3g"G*5g=k97gY:K;gY:N=gt^]?h;-oCh;-oCh;-rEhVR,GhVR,Ghr!>K
hr!>Khr!AMi8EPOi8EPOiSibSiSibSiSibTio8tWio8tWioB(Zj5]1[j5]1\jQ,C_jQ,C_jQ5LbjlPUc
jlPUdk2tggk2tggk3(pjkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
~>
<~ZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdA
ZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdA
ZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZEgdAZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
2298.49 552.333 mo
2243.9 507.65 li
2243.68 505.474 2243.5 503.662 2243.33 501.936 cv
2251.68 498.173 2259.38 494.719 2266.34 491.614 cv
2303.82 522.295 li
2302.21 531.258 2300.43 541.285 2298.49 552.333 cv
level3{
gsave
clp
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.631373 .823529 .690196 ]
/C1 [.631373 .823529 .690196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.631373 .823529 .690196 ]
/C1 [.705882 .847059 .686274 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.705882 .847059 .686274 ]
/C1 [.839216 .878431 .694118 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.839216 .878431 .694118 ]
/C1 [.839216 .878431 .694118 ]
/N 1 
>>
]
/Bounds [.218947 .403598 .839551 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV8'RU8"EX
Unjf_V5C,fVl-JlWMuksWiN2$XK8P+Xfeh1YHP17Z*CR>ZEpmD['[3J[C*HO[^NZS\%&rX\[f8]]"5Jb
]=Y_g]Y2"l]tV4p^V@P!^qde&_84"*_Sa:/`5KU4`Pog9`l?'>a2l?CaN;QGb0%lMbKJ)Qbfn>Vc-FV[
cd0q`d*U.edF$CjdaHUne'umse^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#
~>
<~dF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF-IkdaHRl
e'ldpe'ldpeC<!teC<!te^`4#e^`4#f%/F'f%/F'f@SX+f@SX+f\"j/f\"j/f\"j/f\"m1g"G'3g"G'3
g"G'3g=k97g=k97g=k97g=k<9gY:K;gY:K;gY:K;gt^]?gt^]?gt^]?gt^`Ah;-oCh;-oCh;-oChVR,G
hVR,GhVR,GhV[5Jhr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>K
~>
<~YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5
YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5
YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
2310.36 527.643 mo
2264.02 489.714 li
2269.96 482.46 2262.09 466.201 2246.45 453.4 cv
2267.59 438.006 li
2360.34 513.922 li
2349.43 537.69 li
2333.79 524.888 2316.3 520.39 2310.36 527.643 cv
.0588235 .156863 .317647 rgb
f
2355.58 551.941 mo
2355.58 551.941 2347.99 529.437 2322.66 527.22 cv
2316.46 526.677 2313.42 528.375 2312.2 531.008 cv
2259.36 487.82 li
2261.9 486.161 2263.12 482.824 2261.29 476.606 cv
2254.12 452.214 2230.55 449.227 2230.55 449.227 cv
2230.55 449.227 2227.16 452.292 2235.04 484.956 cv
2319.67 554.604 li
2353.25 555.881 2355.58 551.941 2355.58 551.941 cv
cp
.160784 .380392 .509804 rgb
f
2356.68 533.18 mo
2246.67 443.139 li
2264.93 393.397 li
2398.84 503.006 li
2356.68 533.18 li
f
2440.61 451.97 mo
2412.48 486.349 2359.69 489.679 2322.71 459.411 cv
2285.73 429.144 2278.56 376.74 2306.7 342.361 cv
2334.83 307.983 2387.62 304.653 2424.6 334.921 cv
2461.58 365.188 2468.75 417.592 2440.61 451.97 cv
.996078 .968627 .796078 rgb
f
2328.71 360.381 mo
2354 329.492 2399.18 323.687 2434.91 344.784 cv
2431.78 341.3 2428.35 337.992 2424.6 334.921 cv
2387.62 304.653 2334.83 307.983 2306.7 342.361 cv
2278.56 376.737 2285.73 429.144 2322.71 459.411 cv
2326.46 462.481 2330.38 465.189 2334.42 467.57 cv
2306.67 436.708 2303.43 391.273 2328.71 360.381 cv
.972549 .847059 .694118 rgb
f
2326.07 455.306 mo
2291.41 426.94 2284.56 377.78 2310.8 345.721 cv
2337.04 313.663 2386.58 310.659 2421.24 339.026 cv
2455.9 367.393 2462.75 416.552 2436.51 448.611 cv
2410.27 480.67 2360.73 483.673 2326.07 455.306 cv
2424.6 334.921 mo
2387.62 304.653 2334.83 307.983 2306.7 342.361 cv
2278.56 376.737 2285.73 429.144 2322.71 459.411 cv
2359.69 489.679 2412.48 486.347 2440.61 451.97 cv
2468.75 417.592 2461.58 365.188 2424.6 334.921 cv
.160784 .380392 .509804 rgb
f
2302.5 358.482 mo
2288.8 344.311 li
2272.59 355.184 li
2246.98 335.147 li
2244.4 341.324 li
2265.95 361.402 li
2256.7 391.698 li
2267.48 400.518 li
2284.98 379.139 li
2287.59 375.95 li
2287.88 376.337 li
2302.5 358.482 li
cp
.678431 .0666667 .137255 rgb
f
2256.42 344.727 mo
2253.65 348.103 2248.55 348.498 2245.02 345.606 cv
2241.49 342.717 2240.86 337.635 2243.63 334.259 cv
2246.39 330.881 2251.5 330.488 2255.03 333.378 cv
2258.56 336.269 2259.18 341.349 2256.42 344.727 cv
cp
f
2428.79 461.854 mo
2445.39 472.476 li
2437.94 490.52 li
2462.64 511.666 li
2457.1 515.408 li
2433.16 498.261 li
2405.29 513.31 li
2394.51 504.49 li
2412.01 483.11 li
2414.62 479.922 li
2414.18 479.708 li
2428.79 461.854 li
cp
f
2451.39 504.304 mo
2448.62 507.681 2449.25 512.762 2452.78 515.651 cv
2456.31 518.542 2461.41 518.147 2464.18 514.771 cv
2466.94 511.393 2466.32 506.313 2462.79 503.423 cv
2459.25 500.533 2454.15 500.926 2451.39 504.304 cv
cp
f
2396.06 518.5 mo
2396.06 518.5 li
2396.06 518.5 2389.79 513.456 2379.73 505.29 cv
2401.03 484.438 2419.56 461.305 2435.29 435.898 cv
2437.4 437.777 2439.5 439.668 2441.59 441.558 cv
2442.92 442.762 2444.25 443.965 2445.57 445.174 cv
2447.58 446.999 2449.58 448.83 2451.58 450.667 cv
2439.85 475.466 2423.46 496.436 2402.38 513.581 cv
2400.32 515.257 2398.21 516.897 2396.06 518.5 cv
2271.94 415.624 mo
2266.64 411.028 2261.73 406.695 2257.32 402.735 cv
2270.3 375.276 2287.69 353.912 2310.67 335.333 cv
2310.67 335.333 li
2310.67 335.333 li
2311.16 335.689 2311.64 336.042 2312.13 336.398 cv
2312.13 336.398 li
2313.58 337.453 2315.03 338.515 2316.48 339.574 cv
2320.45 342.49 2324.42 345.425 2328.36 348.376 cv
2306.84 368.571 2288.03 390.989 2271.94 415.624 cv
level3{
gsave
clp
[189.637 66.791 -66.791 189.637 2258.54 393.521 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.678431 .0666667 .137255 ]
/C1 [.678431 .0666667 .137255 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.678431 .0666667 .137255 ]
/C1 [.529412 .0470588 .121569 ]
/N 1 
>>
]
/Bounds [.00837989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[189.637 66.791 -66.791 189.637 2258.54 393.521 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Xf\_,XK8M)XK/D&X/i;%WiE)!WiE(uWMukrWMlboW2QYnVl-GjVl-GiVP^5fVPU,cV5:#bUnjf^Unjf]
USFTZUS=KWU8"BVTqS0RTqS0QTV.sNTV%jKT:_aJSt;OFSt;OESXl=BSXl:@S=H+>S"#n:S"#n9R[T\6
R[TY4R@0J2R$a8.R$a8-Q^=&*Q^=#(QBmi&Q'IW"Q'IW!Pa%DsPa%AqPEV2oP*1ukP*1ujOcbcgOcb`e
OH>QcO,o?_O,o?^NfK-[NfK*YNK&pWN/W^SN/W^RMi3LOMi3IMMMd:KM2@(GM2@(FLkpkCLkphALPLY?
~>
<~&J5Td&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.]9^%hB0]%hB0]
%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY
%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
%1NaU%1NaU%1NaU%1N^S$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
<~,9nEW+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ0R+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P
+X%sN+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL
+<M[I+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
2257.32 402.735 mo
2270.3 375.276 2287.69 353.912 2310.67 335.333 cv
2281.88 355.097 2266.52 377.345 2252.98 403.566 cv
2314.97 460.422 2352.83 488.974 2396.06 518.5 cv
2396.06 518.5 2301.07 442.087 2257.32 402.735 cv
.0588235 .156863 .317647 rgb
f
2369.3 515.112 mo
2331.34 489.705 2296.16 460.911 2263.76 428.728 cv
2265.74 425.402 2267.77 422.117 2269.84 418.868 cv
2270.53 417.783 2271.23 416.701 2271.94 415.624 cv
2288.03 390.989 2306.84 368.571 2328.36 348.376 cv
2329.93 346.908 2331.5 345.454 2333.1 344.009 cv
2335.53 345.637 2337.95 347.28 2340.36 348.936 cv
2375.55 373.121 2408.31 400.272 2438.64 430.393 cv
2437.54 432.24 2436.42 434.074 2435.29 435.898 cv
2419.56 461.305 2401.03 484.438 2379.73 505.29 cv
2379.35 505.66 2378.97 506.027 2378.59 506.396 cv
2375.55 509.347 2372.45 512.252 2369.3 515.112 cv
2323.18 481.486 mo
2333.43 489.609 2343.91 497.451 2354.62 505.013 cv
2364.73 494.031 2374.56 482.817 2384.1 471.371 cv
2389.17 465.342 2394.13 459.229 2398.99 453.025 cv
2408.11 441.477 2416.96 429.704 2425.52 417.703 cv
2416.35 409.046 2406.96 400.65 2397.37 392.514 cv
2397.34 392.489 2397.3 392.462 2397.28 392.437 cv
2397.14 392.323 2397.01 392.21 2396.87 392.096 cv
2381.23 378.857 2365.02 366.308 2348.26 354.446 cv
2322.16 381.587 2298.5 410.707 2277.29 441.809 cv
2291.91 455.584 2307.07 468.701 2322.77 481.158 cv
2322.79 481.172 2322.81 481.188 2322.83 481.202 cv
2322.94 481.296 2323.07 481.392 2323.18 481.486 cv
level3{
gsave
clp
[116.666 -142.23 142.23 116.666 2271.85 526.291 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.678431 .0666667 .137255 ]
/C1 [.678431 .0666667 .137255 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.678431 .0666667 .137255 ]
/C1 [.905882 .45098 .0666667 ]
/N 1 
>>
]
/Bounds [.00837989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[116.666 -142.23 142.23 116.666 2271.85 526.291 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Xf\_-Xf\_.Y-+q2YHP.5Yct@9Z*CR=Z*L[@ZEpmDZa@*H['[6K[C*HO[^NZS\$riV\@B&Z\[f8]]"5Ja
]=Y\e]Y(ni]Y2"l]tV4p^;%Ft^V@S"^qde&_83t)_SX1-_o'C1`5KU4`Pog8`l?$<a2c6@a2l?CaN;QG
aiV]Jb0%oNbKJ,Rbfn;Uc-=MYcHa_]cd0q`d*U.ddF$@hdF-IkdaQ[oe'umseC<%!e^`7%f%/I)f@SX,
f\"j0g"G'3g=k97gY:K;gt^]?gtgfBh;7#FhV[5Jhr!AMi8ESQiSibTio8tXj5]1\jQ,C_jlPUck2tgg
~>
<~&J5Te&J>]h',)&o'GV>t()@]&(Dmu,)&X>2)B0V8*#ot>*Zc@E+!2UJ+X&!Q+sS<W,U=Z^,pjrc-RU;j
-n-Sp.Olr!.kE5'/M/S-0/"t40JG491,:U@1GgpF2)R9M2E*QR3&ioY3BB2_4$,Pe4?Yhk5!D1q5X7S#
5s[h(6UO4/6q'O57Rfj;7n?0A8P)NH8kVfN9MA/T9hnGZ:JXe`;,L1g;GpFl<)cgs<E<.$='&I*=BSd0
>$>-7>?kE<?!UcC?=.&I?smDO@U`eV@q0%[AS#FbAnPahBP;'nBkhBtCMRa&Ci+$+DJjB2DfBZ8EH-#>
~>
<~,9nEW+sJ3T+sJ3T+sJ3T+sA*Q+X&!P+X&!P+X&!O+<VdL+<VdL+<VdL+<M[I+!2RH+!2RH+!2RG*Zc@D
*Zc@D*Zc@D*ZZ7A*??.@*??.@*??.?*#oq<*#oq<*#oq<*#fh9)]K_8)]K_8)]K_7)B'M4)B'M4)B'M4
)B'J2)&X;0)&X;0)&X;0(`4),(`4),(`4),(`4&*(Ddl((Ddl((Ddl(()@Z$()@Z$()@Z$()@W"'bqGu
'bqGu'bqGu'GM5q'GM5q'GM5q'GM2o',)#m',)#m',)#m&eYfi&eYfi&eYfi&eYcg&J5Te&J5Te&J5Te
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
2323.18 481.486 mo
2323.07 481.392 2322.94 481.296 2322.83 481.202 cv
2322.95 481.297 2323.06 481.391 2323.18 481.486 cv
2322.77 481.158 mo
2307.07 468.701 2291.91 455.584 2277.29 441.809 cv
2298.5 410.707 2322.16 381.587 2348.26 354.446 cv
2365.02 366.308 2381.23 378.857 2396.87 392.096 cv
2387.88 384.489 2378.71 377.109 2369.34 369.956 cv
2366.81 372.703 2364.28 375.467 2361.78 378.244 cv
2351.22 369.595 li
2348.84 367.652 2345.98 366.706 2343.13 366.706 cv
2339.43 366.706 2335.76 368.305 2333.24 371.391 cv
2317.79 390.269 li
2313.32 395.729 2314.12 403.779 2319.58 408.248 cv
2329.38 416.269 li
2318.07 430.315 2307.17 444.7 2296.7 459.427 cv
2305.22 466.881 2313.91 474.124 2322.77 481.158 cv
2384.1 471.371 mo
2389.14 465.32 2394.11 459.205 2398.99 453.025 cv
2394.13 459.229 2389.17 465.342 2384.1 471.371 cv
2397.37 392.514 mo
2397.34 392.488 2397.31 392.462 2397.28 392.437 cv
2397.3 392.462 2397.34 392.489 2397.37 392.514 cv
level3{
gsave
clp
[-161.862 -94.7649 94.7649 -161.862 2494.22 513.293 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-161.862 -94.7649 94.7649 -161.862 2494.22 513.293 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
2354.62 505.013 mo
2343.91 497.451 2333.43 489.609 2323.18 481.486 cv
2333.28 489.487 2343.6 497.215 2354.14 504.671 cv
2364.51 493.885 2374.5 482.784 2384.1 471.371 cv
2374.56 482.817 2364.73 494.031 2354.62 505.013 cv
2322.83 481.202 mo
2322.81 481.188 2322.79 481.172 2322.77 481.158 cv
2322.79 481.173 2322.81 481.187 2322.83 481.202 cv
2398.99 453.025 mo
2408.07 441.425 2416.77 429.519 2425.1 417.308 cv
2416.06 408.791 2406.82 400.527 2397.37 392.514 cv
2406.96 400.65 2416.35 409.046 2425.52 417.703 cv
2416.96 429.704 2408.11 441.477 2398.99 453.025 cv
2397.28 392.437 mo
2397.14 392.323 2397.01 392.209 2396.87 392.096 cv
2397.01 392.21 2397.14 392.323 2397.28 392.437 cv
level3{
gsave
clp
[116.666 -142.23 142.23 116.666 2271.85 526.291 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.631373 .0588235 .133333 ]
/C1 [.631373 .0588235 .133333 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.631373 .0588235 .133333 ]
/C1 [.784314 .321569 .0862745 ]
/N 1 
>>
]
/Bounds [.00837989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[116.666 -142.23 142.23 116.666 2271.85 526.291 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~TV.sOTqS0RTq\9UU8"BVUSFTZUSFW\Unjf^UnsoaV5:#cVP^5fVP^8hVl-GjW2QYnW2QYoWMukrWN)tu
WiE)!X/i;%X/i>'XK8M)XKAV,Xf\_.Y-+q1Y-+t3YHP.5Yct@9Yct@:Z*CR=Z*L[@ZEgdAZa7!EZa7$G
['[3I['d<L[C*EN[^NWQ[^NZS\$riU\@B&Y\@B&Z\[f8]\[oA`]"5Ja]=Y\e]=Y_g]Y(ni]Y2"l]tM+n
^:q=q^:q@s^V@Ou^qdb$^qdb%_83t(_8=(+_SX1,_o'C0_o'F2`5KU4`5T^7`Pog9`l?$<`l?'>a2c6@
~>
<~%LrsZ%hB3_&.fEc&J5Wg&eYik',)&o'GV>t'c%Q#()Ic'(Dmu+(`=2/)B'M4)]K_8*#oq<*??.A*Zc@E
+!2RI+<VdM+X&!Q+sJ6V,9nHZ,U=Z^,palb-71)f-R^Ak-n-So.4Qes.P!#".kE5&/M/P+/hSb/0/"t3
0JG180ekC<1,:U@1G^gD1c.$H2)R9M2E!KQ2`E]U3&ioY3B9,]3]fDb4$5Vf4?Yhj4[)%n5!M7r5X7S"
5s[e&6:+"*6UO4/6psF377BX77Rfj;7n6'?84Z<D8P)NH8kM`L91qrP9MA/T9hnGY:/=Y]:Jaka:f1(e
~>
<~+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL+<M[I+!2RH+!2RH+!2RH+!2RH
+!2OF*Zc@D*Zc@D*Zc@D*Zc@D*Zc@C*??.@*??.@*??.@*??.@*??.@*#oq<*#oq<*#oq<*#oq<*#oq<
*#on:)]K_8)]K_8)]K_8)]K_8)]K_7)B'M4)B'M4)B'M4)B'M4)B'M4)&X;0)&X;0)&X;0)&X;0)&X;0
)&O2-(`4),(`4),(`4),(`4),(`4&*(Ddl((Ddl((Ddl((Ddl((Ddl'()@Z$()@Z$()@Z$()@Z$()@Z$
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
2354.14 504.671 mo
2343.6 497.215 2333.28 489.487 2323.18 481.486 cv
2323.06 481.391 2322.95 481.297 2322.83 481.202 cv
2322.81 481.187 2322.79 481.173 2322.77 481.158 cv
2313.91 474.124 2305.22 466.881 2296.7 459.427 cv
2307.17 444.7 2318.07 430.315 2329.38 416.269 cv
2377.25 455.445 li
2379.62 457.389 2382.49 458.335 2385.33 458.335 cv
2389.03 458.335 2392.7 456.737 2395.23 453.651 cv
2410.68 434.775 li
2415.15 429.313 2414.34 421.263 2408.88 416.794 cv
2361.78 378.244 li
2364.28 375.467 2366.81 372.703 2369.34 369.956 cv
2378.71 377.109 2387.88 384.489 2396.87 392.096 cv
2397.01 392.209 2397.14 392.323 2397.28 392.437 cv
2397.31 392.462 2397.34 392.488 2397.37 392.514 cv
2406.82 400.527 2416.06 408.791 2425.1 417.308 cv
2416.77 429.519 2408.07 441.425 2398.99 453.025 cv
2394.11 459.205 2389.14 465.32 2384.1 471.371 cv
2374.5 482.784 2364.51 493.885 2354.14 504.671 cv
level3{
gsave
clp
[-161.862 -94.7649 94.7649 -161.862 2494.22 513.293 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-161.862 -94.7649 94.7649 -161.862 2494.22 513.293 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
2317.79 390.269 mo
2333.24 371.391 li
2337.71 365.93 2345.76 365.127 2351.22 369.595 cv
2408.88 416.794 li
2414.34 421.263 2415.15 429.313 2410.68 434.775 cv
2395.23 453.651 li
2390.76 459.111 2382.71 459.915 2377.25 455.445 cv
2319.58 408.248 li
2314.12 403.779 2313.32 395.729 2317.79 390.269 cv
.160784 .380392 .509804 rgb
f
2390.92 437.549 mo
2389.08 436.042 2388.82 433.312 2390.35 431.451 cv
2391.87 429.59 2394.6 429.303 2396.44 430.81 cv
2398.28 432.317 2398.54 435.047 2397.02 436.908 cv
2395.49 438.769 2392.77 439.056 2390.92 437.549 cv
cp
.678431 .0666667 .137255 rgb
f
2355.77 432.607 mo
2346.93 425.372 2345.69 412.263 2353 403.328 cv
2360.31 394.395 2373.41 393.019 2382.25 400.256 cv
2391.09 407.491 2392.33 420.599 2385.02 429.533 cv
2377.7 438.467 2364.61 439.843 2355.77 432.607 cv
.0588235 .156863 .317647 rgb
f
2357.3 430.736 mo
2349.48 424.336 2348.39 412.745 2354.85 404.844 cv
2361.32 396.944 2372.9 395.724 2380.72 402.125 cv
2388.54 408.525 2389.63 420.119 2383.17 428.018 cv
2376.7 435.92 2365.12 437.137 2357.3 430.736 cv
.219608 .568627 .545098 rgb
f
2360.24 427.151 mo
2354.38 422.356 2353.56 413.669 2358.4 407.748 cv
2363.25 401.828 2371.93 400.915 2377.79 405.711 cv
2383.64 410.506 2384.46 419.195 2379.62 425.114 cv
2374.77 431.035 2366.1 431.946 2360.24 427.151 cv
.298039 .776471 .745098 rgb
f
2374 432.255 mo
2372.39 432.255 2370.78 431.723 2369.44 430.627 cv
2369.28 430.499 2369.13 430.365 2368.99 430.226 cv
2372.95 430.19 2376.89 428.445 2379.62 425.114 cv
2380.19 424.415 2380.68 423.678 2381.1 422.913 cv
2381.72 425.131 2381.28 427.618 2379.7 429.548 cv
2378.24 431.33 2376.12 432.255 2374 432.255 cv
.662745 .815686 .803922 rgb
f
2368.99 430.226 mo
2366.3 427.627 2366.03 423.332 2368.47 420.357 cv
2369.92 418.576 2372.04 417.651 2374.16 417.651 cv
2375.77 417.651 2377.39 418.184 2378.73 419.279 cv
2379.92 420.253 2380.71 421.531 2381.1 422.913 cv
2380.68 423.678 2380.19 424.415 2379.62 425.114 cv
2376.89 428.445 2372.95 430.19 2368.99 430.226 cv
.698039 .901961 .890196 rgb
f
2299.49 564.221 mo
2230.09 507.422 li
2229.52 501.711 2229.2 498.509 2228.63 492.795 cv
2235.04 484.956 li
2320.53 554.922 li
2314.11 562.762 li
2308.4 563.333 2305.2 563.652 2299.49 564.221 cv
cp
.298039 .776471 .745098 rgb
f
2229.45 491.944 mo
2229.38 491.878 li
2228.63 492.795 li
2228.79 494.462 li
2312.45 562.927 li
2314.11 562.762 li
2314.86 561.847 li
2229.45 491.944 li
cp
.0588235 .156863 .317647 rgb
f
2215.66 490.067 mo
2203.82 495.373 2192.17 500.471 2179.3 499.092 cv
2171.63 498.271 2166.78 495.155 2166.91 495.207 cv
2165.11 494.175 2166.75 491.453 2168.51 492.604 cv
2171.8 494.771 2175.63 496.146 2179.61 496.819 cv
2191.97 498.918 2203.91 494.501 2215.66 490.067 cv
cp
.878431 .909804 .686275 rgb
f
2313.39 578.995 mo
2305.23 648.387 2316.52 665.935 2309.63 666.499 cv
2308.24 666.613 2307.01 665.546 2306.97 664.105 cv
2306.29 635.534 2308.45 606.979 2313.39 578.995 cv
cp
f
2215.66 505.013 mo
2148.97 525.857 2137.55 543.316 2134.23 537.258 cv
2133.56 536.036 2134.03 534.474 2135.33 533.852 cv
2161.14 521.578 2188.1 511.912 2215.66 505.013 cv
cp
f
2319.43 573.059 mo
2319.71 597.605 2328.38 623.745 2345.25 641.834 cv
2347.42 644.166 2343.77 647.382 2341.72 644.917 cv
2325.71 625.438 2318.15 598.452 2319.43 573.059 cv
cp
f
1927.75 1644.45 mo
1927.75 1644.45 li
cp
1 1 1 rgb
f
2727.1 868.077 mo
2716.92 880.434 li
2659.88 833.435 li
2595.01 874.154 li
2638.02 775.779 li
2605.52 788.639 li
2544.89 738.679 li
2555.07 726.322 li
2608.41 770.276 li
2668.25 746.599 li
2630.5 832.976 li
2661.15 813.733 li
2727.1 868.077 li
cp
.219608 .568627 .545098 rgb
f
2787.02 896.753 mo
2756.53 933.76 li
2679.27 870.101 li
2709.76 833.094 li
2787.02 896.753 li
cp
.0392157 .117647 .239216 rgb
f
2551.29 688.62 mo
2566.08 700.805 2568.18 722.673 2556 737.461 cv
2543.81 752.25 2521.95 754.355 2507.16 742.17 cv
2492.37 729.984 2490.26 708.119 2502.44 693.331 cv
2514.63 678.542 2536.5 676.434 2551.29 688.62 cv
cp
f
2541.89 694.769 mo
2552.12 703.191 2553.57 718.303 2545.15 728.522 cv
2536.73 738.743 2521.62 740.197 2511.4 731.775 cv
2501.18 723.353 2499.72 708.246 2508.14 698.025 cv
2516.56 687.806 2531.67 686.347 2541.89 694.769 cv
cp
.678431 .0666667 .137255 rgb
f
2532.94 693.583 mo
2537.63 697.444 2538.7 703.899 2535.33 707.987 cv
2531.95 712.081 2525.42 712.262 2520.73 708.401 cv
2516.04 704.538 2514.97 698.09 2518.35 693.996 cv
2521.72 689.908 2528.25 689.72 2532.94 693.583 cv
cp
1 .752941 .752941 rgb
f
3408.13 561.41 mo
3477.24 602.093 3493.76 696.909 3482.04 771.725 cv
3407.39 760.061 li
3444.72 765.894 li
3407.38 760.154 li
3411.21 734.775 3413.4 662.354 3378.02 632.383 cv
3348.72 607.62 3296.52 617.398 3257.86 630 cv
3234.43 558.154 li
3306.37 534.706 3364.66 535.822 3408.13 561.41 cv
cp
.678431 .0666667 .137255 rgb
f
3752.08 1500.15 mo
3646.76 1627.96 li
3392.08 1418.11 li
3497.4 1290.29 li
3752.08 1500.15 li
f
3475.85 1487.13 mo
3392.08 1418.11 li
3497.4 1290.29 li
3578.72 1357.29 li
3526.98 1405.35 3493.81 1455.48 3475.85 1487.13 cv
.588235 .0509804 .109804 rgb
f
3503.13 867.531 mo
3442.03 952.781 3374.53 872.461 3317.64 851.762 cv
3297.03 844.26 3272.82 822.322 3270.07 788.813 cv
3270.9 770.148 3283.03 759.013 3297.5 750.746 cv
3353.19 718.934 3410.37 722.45 3468.05 745.06 cv
3473.4 747.158 3478.95 748.747 3484.29 750.869 cv
3512.72 762.163 3520.66 774.854 3517.68 804.847 cv
3515.55 826.345 3512.51 847.688 3503.13 867.531 cv
cp
.219608 .568627 .545098 rgb
f
3370.3 793.75 mo
3500.9 864.334 3543.55 872.927 3652.27 980.46 cv
3707.61 1035.2 3721.09 1096.96 3674.44 1158.61 cv
3623.31 1226.16 3414.89 1502.81 3361.7 1573.84 cv
3344.17 1597.24 3312.34 1619.99 3285.77 1622.52 cv
3229.32 1627.9 3180.33 1614.6 3125.83 1601.58 cv
3048.25 1583.05 3029.11 1487.18 2971.44 1449.84 cv
2922.13 1417.92 2883.28 1372.46 2833.04 1341.64 cv
2804.06 1309.89 2825.51 1292.06 2921.18 1156.5 cv
2973.29 1105.85 3048.83 989.035 3133.56 898.78 cv
3154.04 876.967 3201.7 801.769 3256.4 778.611 cv
3304.06 758.431 3360.01 788.183 3370.3 793.75 cv
cp
.988235 .494118 .160784 rgb
f
3125.83 1601.58 mo
3180.33 1614.6 3229.32 1627.9 3285.77 1622.52 cv
3312.34 1619.99 3344.17 1597.24 3361.7 1573.84 cv
3414.89 1502.81 3623.31 1226.16 3674.44 1158.61 cv
3678.46 1153.3 3682.02 1147.99 3685.16 1142.68 cv
3324.58 1511.05 2987.81 1378.03 2834.2 1281.24 cv
2816.44 1311.28 2817.31 1324.41 2833.04 1341.64 cv
2883.28 1372.46 2922.13 1417.92 2971.44 1449.84 cv
3029.11 1487.18 3048.25 1583.05 3125.83 1601.58 cv
cp
.905882 .45098 .0666667 rgb
f
2773.78 1054.85 mo
2692.86 988.18 li
2678.86 976.642 2676.86 955.938 2688.4 941.936 cv
2901.76 683.004 li
2908.26 675.121 2917.66 671.043 2927.13 671.043 cv
2934.49 671.043 2941.89 673.5 2948 678.542 cv
3040.55 754.798 li
3040.55 754.798 li
3039.94 754.299 li
3032.04 747.788 3023.68 742.212 3014.99 737.552 cv
3011.78 741.866 3008.76 745.815 3005.96 749.062 cv
2990.12 767.42 2982.39 783.301 3000.43 807.754 cv
3012.68 824.346 3006.9 838.896 3001.25 853.076 cv
2981.01 903.835 2950.61 947.958 2919.85 991.999 cv
2902.93 1016.21 2881.17 1027.39 2853.85 1027.39 cv
2843.08 1027.39 2831.46 1025.66 2818.92 1022.3 cv
2807.93 1019.36 2798.05 1017.97 2789.22 1017.97 cv
2774.54 1017.97 2762.74 1021.81 2753.48 1028.72 cv
2759.35 1037.86 2766.27 1046.48 2774.24 1054.38 cv
2774.08 1054.54 2773.93 1054.69 2773.78 1054.85 cv
level3{
gsave
clp
[99.6171 -460.576 460.576 99.6171 2855.74 1136.96 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.984314 .690196 .231373 ]
/C1 [.984314 .690196 .231373 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.984314 .690196 .231373 ]
/C1 [.980392 .576471 .141176 ]
/N 1 
>>
]
/Bounds [.00837989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[99.6171 -460.576 460.576 99.6171 2855.74 1136.96 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qtp9eqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~Yct@8YHP.5YHP.4Y-+q1Y-+q1Xf\_-Xf\_-XfSV*XK8M)XK8J'X/i;%X/i8#WiE)!WiE(uWMukrWMukr
W2QYnW2QYnW2HPkVl-GjVl$>gVP^5fVP^2dV5:#bV5:#aUnjf^Unjf^USFTZUSFTZU8"BVU8"BVU7n9S
TqS0RTqS-PTV.sNTV.sMT:_aJT:_aISt;OFSt;OFSXl=BSXl=BSXc4?S=H+>S=H(<S"#n:S"#k8R[T\6
R[T\5R@0J2R@0J2R$a8.R$a8.R$X/+Q^=&*Q^3r'QBmi&QBmf$Q'IW"Q'IW!Pa%DsPa%DsPEV2oPEV2o
~>
<~4$,Mb3]];_3]];_3]]8]3B9)[3B9)[3B/uX3&ilW3&ilW2`EZS2`EZS2`EZR2E!HO2E!HO2E!EM2)R6K
2)R6K2)I-H1c.$G1c.$G1G^gC1G^gC1G^gB1,:U?1,:U?1,:R=0ekC;0ekC;0eb:80JG170JG170/"t3
0/"t30/"t2/hSb//hSb//hS_-/M/P+/M/P+/M&G(/1`>'/1`>'.k<,#.k<,#.k<,".Olnt.Olnt.Olkr
.4H\p.4H\p.4?Sm-n$Jl-n$Jl-RU8h-RU8h-RU8g-71&d-71&d-71#b,pai`,pai`,pX`],U=W\,U=W\
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
2774.24 1054.38 mo
2766.27 1046.48 2759.35 1037.86 2753.48 1028.72 cv
2762.74 1021.81 2774.54 1017.97 2789.22 1017.97 cv
2798.05 1017.97 2807.93 1019.36 2818.92 1022.3 cv
2831.46 1025.66 2843.08 1027.39 2853.85 1027.39 cv
2881.17 1027.39 2902.93 1016.21 2919.85 991.999 cv
2950.61 947.958 2981.01 903.835 3001.25 853.076 cv
3006.9 838.896 3012.68 824.346 3000.43 807.754 cv
2982.39 783.301 2990.12 767.42 3005.96 749.062 cv
3008.76 745.815 3011.78 741.866 3014.99 737.552 cv
3023.68 742.212 3032.04 747.788 3039.94 754.299 cv
3040.55 754.798 li
3036.63 760 3032.99 764.783 3029.7 768.623 cv
3013.92 787.035 3005.71 802.522 3020.34 824.155 cv
3030.26 838.831 3023.92 852.921 3017.72 866.651 cv
2995.55 915.817 2964.62 959.502 2933.36 1003.13 cv
2914.44 1029.54 2891.34 1041.55 2863 1041.55 cv
2855.46 1041.55 2847.54 1040.7 2839.24 1039.05 cv
2832.01 1037.6 2825.28 1036.91 2819.01 1036.91 cv
2799.95 1036.91 2785.23 1043.31 2774.24 1054.38 cv
level3{
gsave
clp
[99.6171 -460.576 460.576 99.6171 2855.74 1136.96 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.937255 .545098 .129412 ]
/C1 [.937255 .545098 .129412 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.937255 .545098 .129412 ]
/C1 [.933333 .498039 .0941176 ]
/N 1 
>>
]
/Bounds [.00837989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[99.6171 -460.576 460.576 99.6171 2855.74 1136.96 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
238 <~MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KM2@(GM2@(GM2@(GM2@(GM2@(GM26tDLkpkCLkpkCLkpkCLkpkC
LkphALPLY?LPLY?LPLY?LPLY?LPLY>L5(G;L5(G;L5(G;L5(G;L5(G;KnY57KnY57KnY57KnY57KnY57
KnY25KS5#3KS5#3KS5#3KS5#3KS5#2K7ef/K7ef/K7ef/K7ef/K7ef/JqAT+JqAT+JqAT+JqAT+JqAT+
Jq8K(JUrB'JUrB'JUrB'JUrB'JUr?%J:N0#J:N0#J:N0#J:N0#J:N0"It)rtIt)rtIt)rtIt)rtIt)rt
~>
<~+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdK+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RG*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@C*??.@*??.@*??.@*??.@*??.@*??.@*??.?*#oq<*#oq<*#oq<
*#oq<*#oq<*#oq<*#oq<)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)B'M4)B'M4)B'M4)B'M4)B'M4
)B'M4)B'M4)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0(`4),(`4),(`4),(`4),(`4),(`4),(`4),
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
3127.09 725.243 mo
3136.33 739.326 3214.81 804.769 3144.9 889.613 cv
3082.83 964.947 3014.92 1060.45 2962.13 1123.54 cv
2934.67 1156.36 2892.23 1172.46 2849.93 1165.96 cv
2799.42 1158.19 2743.94 1139.12 2749.64 1111.67 cv
2757.1 1061.38 2783.59 1027.94 2839.24 1039.05 cv
2878.74 1046.93 2909.4 1036.57 2933.36 1003.13 cv
2964.62 959.502 2995.55 915.817 3017.72 866.651 cv
3023.92 852.921 3030.26 838.831 3020.34 824.155 cv
3005.71 802.522 3013.92 787.035 3029.7 768.623 cv
3052.4 742.144 3091.44 670.916 3127.09 725.243 cv
.219608 .568627 .545098 rgb
f
3557.59 1674.03 mo
3557.91 1676.37 3558.23 1678.71 3558.55 1681.05 cv
3556.45 1681.26 li
3556.33 1678.89 3556.21 1676.53 3556.08 1674.16 cv
3557.59 1674.03 li
cp
.596078 .866667 .729412 rgb
f
3558.55 1681.05 mo
3558.7 1682.38 3559.11 1684.83 3558.95 1684.86 cv
3555.26 1685.75 3556.26 1683.22 3556.46 1681.25 cv
3558.55 1681.05 li
cp
f
3630.37 1869.98 mo
3630.37 1869.98 3654.72 1893.11 3829.05 1917.6 cv
3829.05 1917.6 3828.38 1874.28 3825.88 1860.11 cv
3820.14 1827.56 3800.32 1775.62 3729.96 1769.12 cv
3602.26 1757.32 3630.37 1869.98 3630.37 1869.98 cv
cp
.678431 .0666667 .137255 rgb
f
2750.95 493.288 mo
2749.51 482.361 li
2847.36 469.494 li
2848.8 480.425 li
2750.95 493.288 li
cp
.305882 .662745 .643137 rgb
f
2721.2 512.952 mo
2714.17 499.67 2712.33 485.705 2715.69 471.058 cv
2733.72 464.708 2752.27 462.27 2771.33 463.741 cv
2778.37 477.023 2780.2 490.989 2776.84 505.636 cv
2758.81 511.982 2740.26 514.421 2721.2 512.952 cv
cp
.219608 .568627 .545098 rgb
f
2791.68 503.684 mo
2783.98 490.49 2782.15 476.525 2786.18 461.788 cv
2806.6 455.13 2827.54 452.377 2848.99 453.534 cv
2856.69 466.728 2858.52 480.688 2854.5 495.425 cv
2834.07 502.089 2813.13 504.841 2791.68 503.684 cv
cp
f
2821.65 488.621 mo
2804.56 490.869 2790.11 488.212 2789.38 482.675 cv
2788.66 477.148 2801.93 470.84 2819.02 468.593 cv
2836.11 466.345 2850.56 469.006 2851.29 474.539 cv
2852.01 480.069 2838.75 486.374 2821.65 488.621 cv
cp
.305882 .662745 .643137 rgb
f
2767.08 413.549 mo
2767.06 402.525 li
2865.75 402.317 li
2865.77 413.341 li
2767.08 413.549 li
cp
f
2711.26 429.288 mo
2705.04 415.214 2705.01 401.13 2711.16 387.034 cv
2733.24 383.042 2755.31 382.992 2777.4 386.887 cv
2783.62 400.961 2783.65 415.044 2777.5 429.143 cv
2755.42 433.135 2733.34 433.18 2711.26 429.288 cv
cp
.219608 .568627 .545098 rgb
f
2797.29 315.175 mo
2803.9 306.352 li
2882.89 365.528 li
2876.28 374.345 li
2797.29 315.175 li
cp
.305882 .662745 .643137 rgb
f
2762.09 308.693 mo
2766.34 294.278 2774.79 283.006 2787.42 274.873 cv
2804.76 282.939 2819.73 294.156 2832.34 308.524 cv
2828.08 322.937 2819.64 334.21 2807 342.343 cv
2789.67 334.282 2774.7 323.065 2762.09 308.693 cv
cp
.219608 .568627 .545098 rgb
f
2816.92 350.627 mo
2820.77 335.345 2829.49 323.704 2843.07 315.715 cv
2862.9 325.483 2880.28 338.504 2895.22 354.786 cv
2891.37 370.068 2882.65 381.704 2869.07 389.698 cv
2849.25 379.93 2831.86 366.904 2816.92 350.627 cv
cp
f
2795.21 429.117 mo
2788.3 415.04 2788.27 400.947 2795.11 386.844 cv
2819.67 382.842 2844.24 382.793 2868.81 386.685 cv
2875.72 400.761 2875.75 414.854 2868.91 428.957 cv
2844.35 432.955 2819.78 433.01 2795.21 429.117 cv
cp
f
2833.03 422.593 mo
2815.78 422.631 2801.79 418.136 2801.77 412.556 cv
2801.76 406.974 2815.73 402.423 2832.98 402.385 cv
2850.24 402.346 2864.22 406.841 2864.24 412.423 cv
2864.25 418.003 2850.28 422.56 2833.03 422.593 cv
cp
.305882 .662745 .643137 rgb
f
2744.35 418.188 mo
2727.11 418.225 2713.13 413.735 2713.11 408.153 cv
2713.1 402.579 2727.07 398.026 2744.31 397.987 cv
2761.55 397.95 2775.54 402.441 2775.55 408.023 cv
2775.56 413.598 2761.59 418.15 2744.35 418.188 cv
cp
f
2790.63 318.708 mo
2778.22 309.413 2770.87 298.259 2774.21 293.796 cv
2777.56 289.333 2790.33 293.247 2802.74 302.542 cv
2815.14 311.837 2822.49 322.991 2819.14 327.454 cv
2815.8 331.923 2803.03 328.007 2790.63 318.708 cv
cp
f
2841.22 361.196 mo
2829.82 352.658 2823.3 342.115 2826.64 337.652 cv
2829.99 333.188 2841.94 336.487 2853.33 345.026 cv
2864.73 353.565 2871.25 364.104 2867.91 368.572 cv
2864.57 373.035 2852.62 369.731 2841.22 361.196 cv
cp
f
2747.94 498.304 mo
2732.89 500.844 2719.93 498.45 2719 492.945 cv
2718.07 487.445 2729.53 480.928 2744.58 478.385 cv
2759.64 475.846 2772.6 478.243 2773.53 483.742 cv
2774.46 489.248 2763.01 495.765 2747.94 498.304 cv
cp
f
3042.43 457.264 mo
3047.93 436.33 3049.96 418.719 3046.97 417.934 cv
2955.6 393.936 li
2935.7 469.749 li
3027.06 493.747 li
3030.05 494.529 3036.93 478.2 3042.43 457.264 cv
cp
.529412 .0470588 .121569 rgb
f
2989.98 402.967 mo
2955.6 393.936 li
2935.7 469.749 li
3027.06 493.747 li
3029.83 494.474 3035.96 480.456 3041.22 461.696 cv
3041.22 461.692 li
3014.19 442.334 2998.52 419.356 2989.98 402.967 cv
cp
.678431 .0666667 .137255 rgb
f
2835.87 501.122 mo
2844.06 512.207 2856.11 521.17 2868.9 524.531 cv
2908.26 534.87 2952.04 498.054 2966.69 442.296 cv
2981.33 386.542 2961.29 332.96 2921.93 322.621 cv
2909.14 319.26 2895.65 321.747 2883.08 327.379 cv
2835.87 501.122 li
cp
.529412 .0470588 .121569 rgb
f
2955.41 440.107 mo
2955.41 440.107 2962.57 373.101 2931.6 368.004 cv
2900.63 362.907 2858.14 447.872 2865.7 480.488 cv
2873.26 513.108 2934.02 539.502 2955.41 440.107 cv
cp
.678431 .0666667 .137255 rgb
f
2967.05 506.863 mo
2984.39 470.415 2998.57 432.599 3009.47 393.739 cv
3015.33 372.863 3037.98 360.842 3061.35 366.706 cv
3159 391.211 3256.65 415.716 3354.31 440.222 cv
3378.86 446.382 3394.61 469.779 3388.76 491.796 cv
3371.3 557.572 3347.38 621.36 3317.28 682.396 cv
3307.2 702.829 3279.95 710.099 3257.41 698.601 cv
3167.72 652.843 3078.04 607.09 2988.35 561.337 cv
2966.89 550.385 2957.74 526.439 2967.05 506.863 cv
cp
.152941 .490196 .478431 rgb
f
3931.49 1622.54 mo
3800.77 1781.17 li
3747.23 1737.05 3668.05 1744.69 3623.93 1798.23 cv
3493.82 1661.62 li
3755.45 1344.1 li
3914.42 1445.7 li
3870.31 1499.24 3877.95 1578.42 3931.49 1622.54 cv
cp
f
3399.94 1091.31 mo
3335.62 1160.99 3278.02 1236.59 3227.91 1317.11 cv
3214.26 1339.03 3185.59 1346.79 3163.1 1333.92 cv
3135.73 1318.06 3108.36 1302.19 3080.99 1286.33 cv
3058.52 1273.47 3052.15 1242.35 3067.69 1217.4 cv
3124.07 1126.8 3188.89 1041.71 3261.28 963.306 cv
3281.22 941.698 3312.9 939.572 3331.26 957.828 cv
3353.82 980.005 3376.39 1002.18 3398.95 1024.36 cv
3417.33 1042.62 3417.46 1072.32 3399.94 1091.31 cv
cp
.984314 .690196 .231373 rgb
f
3379.64 1096.43 mo
3323.48 1158.69 3272.58 1225.5 3227.46 1296.17 cv
3215.15 1315.43 3189.83 1321.96 3170.26 1310.35 cv
3146.47 1296.06 3122.66 1281.77 3098.86 1267.47 cv
3079.31 1255.88 3074.09 1228.62 3087.87 1207.05 cv
3137.91 1128.66 3194.37 1054.56 3256.65 985.506 cv
3273.79 966.498 3301.46 964.305 3317.83 980.063 cv
3337.93 999.218 3358.02 1018.37 3378.12 1037.53 cv
3394.51 1053.3 3394.93 1079.46 3379.64 1096.43 cv
cp
.298039 .776471 .745098 rgb
f
3329.92 1026.67 mo
3307.67 1050.77 3286.17 1075.54 3265.46 1100.95 cv
3250.36 1097.94 3235.18 1095.11 3219.94 1092.46 cv
3237.08 1119.17 3254.64 1145.51 3272.62 1171.45 cv
3234.8 1153.32 3196.63 1135.78 3158.12 1118.83 cv
3169.99 1142.47 3182.27 1165.78 3194.93 1188.74 cv
3174.64 1217.54 3155.29 1247.01 3136.93 1277.12 cv
3135.49 1279.49 3136.12 1282.5 3138.33 1283.83 cv
3140.55 1285.18 3143.5 1284.36 3144.93 1282 cv
3164.31 1250.25 3184.78 1219.21 3206.3 1188.92 cv
3197.41 1172.73 3188.71 1156.37 3180.21 1139.84 cv
3220.99 1157.87 3261.38 1176.56 3301.38 1195.91 cv
3280.67 1166.56 3260.5 1136.7 3240.88 1106.34 cv
3250.23 1108.04 3259.55 1109.81 3268.85 1111.65 cv
3290.63 1084.72 3313.29 1058.5 3336.81 1033.03 cv
3338.67 1031.02 3338.65 1027.95 3336.75 1026.19 cv
3334.86 1024.42 3331.8 1024.63 3329.92 1026.67 cv
cp
.678431 .0666667 .137255 rgb
f
2843.61 898.92 mo
2854.01 907.489 2855.49 922.863 2846.92 933.259 cv
2838.36 943.654 2822.98 945.141 2812.58 936.572 cv
2802.19 928.006 2800.7 912.629 2809.27 902.233 cv
2817.84 891.838 2833.21 890.354 2843.61 898.92 cv
cp
.0392157 .117647 .239216 rgb
f
2839.87 903.453 mo
2847.77 909.958 2848.9 921.631 2842.39 929.527 cv
2835.89 937.419 2824.21 938.544 2816.32 932.038 cv
2808.43 925.534 2807.3 913.86 2813.8 905.969 cv
2820.31 898.073 2831.98 896.95 2839.87 903.453 cv
cp
.298039 .776471 .745098 rgb
f
2926.87 797.883 mo
2937.26 806.451 2938.75 821.824 2930.18 832.219 cv
2921.61 842.619 2906.24 844.103 2895.84 835.534 cv
2885.44 826.968 2883.96 811.594 2892.53 801.193 cv
2901.09 790.798 2916.47 789.316 2926.87 797.883 cv
cp
.0392157 .117647 .239216 rgb
f
2923.13 802.415 mo
2931.03 808.92 2932.16 820.592 2925.65 828.487 cv
2919.14 836.385 2907.47 837.511 2899.57 831.005 cv
2891.68 824.502 2890.55 812.826 2897.06 804.929 cv
2903.57 797.033 2915.24 795.912 2923.13 802.415 cv
cp
.298039 .776471 .745098 rgb
f
3019.22 491.28 mo
3019.22 491.28 3248.6 633.954 3275.03 616.281 cv
3301.46 598.609 3333.22 512.168 3320.22 484.358 cv
3307.22 456.549 3058.67 441.144 3037.89 442.03 cv
3017.1 442.916 3018.77 480.661 3019.22 491.28 cv
cp
.305882 .662745 .643137 rgb
f
2925.51 1125.2 mo
2925.51 1125.2 3080.66 894.584 3083.53 856.545 cv
3086.4 818.506 3051.2 800.728 3060.31 789.665 cv
3069.43 778.598 3083.91 750.951 3099.2 749.478 cv
3099.4 749.459 3099.6 749.449 3099.81 749.449 cv
3115.6 749.449 3156.94 804.474 3117.67 871.202 cv
3077.87 938.814 2925.51 1125.2 2925.51 1125.2 cv
.556863 .752941 .741176 rgb
f
2542.9 884.492 mo
2540.84 856.939 2538.79 829.386 2536.73 801.831 cv
2535.91 790.894 2518.99 792.548 2519.8 803.466 cv
2521.86 831.02 2523.91 858.571 2525.96 886.123 cv
2526.78 897.059 2543.71 895.416 2542.9 884.492 cv
cp
.678431 .0666667 .137255 rgb
f
2458.37 850.033 mo
2469.43 822.131 2482.21 795.113 2496.77 768.874 cv
2502.07 759.312 2486.52 752.402 2481.24 761.932 cv
2466.67 788.175 2453.9 815.188 2442.84 843.091 cv
2438.83 853.225 2454.32 860.249 2458.37 850.033 cv
cp
f
2399.2 749.056 mo
2419.3 742.104 2439.93 737.806 2461.14 736.094 cv
2468.06 735.538 2467.02 724.815 2460.1 725.373 cv
2438.02 727.152 2416.42 731.705 2395.48 738.944 cv
2388.91 741.215 2392.65 751.319 2399.2 749.056 cv
cp
f
2453.64 632.296 mo
2463.02 644.896 2472.4 657.497 2481.78 670.1 cv
2486.48 676.415 2497.29 670.331 2492.53 663.94 cv
2483.15 651.337 2473.77 638.737 2464.39 626.137 cv
2459.69 619.822 2448.88 625.903 2453.64 632.296 cv
cp
f
2550.65 649.439 mo
2554.24 623.717 2557.84 598.001 2561.43 572.282 cv
2562.7 563.249 2548.69 560.938 2547.42 570.018 cv
2543.83 595.738 2540.23 621.454 2536.64 647.173 cv
2535.37 656.205 2549.38 658.518 2550.65 649.439 cv
cp
f
2653.29 614.866 mo
2661.26 607.399 2648.06 596.655 2640.16 604.049 cv
2617.13 625.646 2595.26 648.31 2574.51 672.109 cv
2567.31 680.367 2580.45 691.174 2587.64 682.925 cv
2608.35 659.173 2630.21 636.5 2653.29 614.866 cv
cp
f
2617.47 730.546 mo
2647.43 725.693 2677.38 720.846 2707.33 715.997 cv
2718.1 714.25 2716.52 697.309 2705.69 699.065 cv
2675.74 703.915 2645.8 708.768 2615.84 713.62 cv
2605.08 715.361 2606.65 732.3 2617.47 730.546 cv
cp
f
3405.17 1947.16 mo
3417.04 1927.38 3428.96 1912.71 3431.79 1914.41 cv
3518.13 1966.23 li
3475.13 2037.87 li
3388.79 1986.05 li
3385.96 1984.36 3393.29 1966.94 3405.17 1947.16 cv
cp
f
3485.64 1946.73 mo
3518.13 1966.23 li
3475.13 2037.87 li
3388.79 1986.05 li
3386.17 1984.48 3392.3 1969.36 3402.68 1951.38 cv
3437.58 1957.58 3466.78 1952.43 3485.64 1946.73 cv
cp
.529412 .0470588 .121569 rgb
f
3698.31 2050.78 mo
3704.35 2040.7 li
3614.15 1986.56 li
3608.11 1996.64 li
3698.31 2050.78 li
cp
.305882 .662745 .643137 rgb
f
3525.53 2137.38 mo
3510.97 2139.39 3495.17 2136.88 3483.08 2129.62 cv
3445.88 2107.29 3441.36 2046.48 3472.99 1993.79 cv
3504.61 1941.1 3560.4 1916.49 3597.6 1938.82 cv
3609.69 1946.07 3617.84 1958.21 3622.9 1971.99 cv
3525.53 2137.38 li
cp
.529412 .0470588 .121569 rgb
f
3653.79 2043.86 mo
3666.9 2034.21 3674.63 2021.34 3676.97 2005.23 cv
3659.91 1990.08 3640.67 1978.54 3619.28 1970.61 cv
3606.17 1980.25 3598.44 1993.12 3596.1 2009.22 cv
3613.16 2024.37 3632.39 2035.92 3653.79 2043.86 cv
cp
.219608 .568627 .545098 rgb
f
3113.92 1826.13 mo
3144.27 1751.51 li
3053.13 1714.43 3024.48 1553.7 3021.13 1494.9 cv
2940.7 1499.34 li
2941.29 1510.04 2956.83 1762.21 3113.92 1826.13 cv
cp
.678431 .0666667 .137255 rgb
f
3113.92 1826.13 mo
3002.55 1780.82 2962.33 1640.91 2948.14 1559.47 cv
3000.71 1683.24 3060.53 1761.99 3119.72 1811.87 cv
3113.92 1826.13 li
cp
.529412 .0470588 .121569 rgb
f
3387.45 2011.85 mo
3407.18 1972.4 3429.91 1934.54 3455.43 1898.58 cv
3469.15 1879.25 3465.62 1852.64 3446.93 1837.96 cv
3368.84 1776.61 3290.74 1715.27 3212.64 1653.92 cv
3193.01 1638.5 3164.4 1642.22 3149.74 1662.33 cv
3105.93 1722.4 3067.6 1786.27 3035.19 1853.18 cv
3024.34 1875.58 3034.52 1902.57 3057.36 1912.64 cv
3148.22 1952.71 3239.09 1992.78 3329.96 2032.85 cv
3351.7 2042.44 3376.85 2033.04 3387.45 2011.85 cv
cp
.305882 .662745 .643137 rgb
f
3088.05 1755.42 mo
3202.22 1952.26 3358.21 1950.84 3417.3 1957.21 cv
3406.7 1975.05 3396.74 1993.27 3387.45 2011.85 cv
3376.85 2033.04 3351.7 2042.44 3329.96 2032.85 cv
3239.09 1992.78 3148.22 1952.71 3057.36 1912.64 cv
3034.52 1902.57 3024.34 1875.58 3035.19 1853.18 cv
3051.35 1819.81 3068.99 1787.19 3088.05 1755.42 cv
cp
.219608 .568627 .545098 rgb
f
2865.45 1341.67 mo
2927.98 1389.29 3042.5 1495.84 3064.44 1521.4 cv
3035.51 1556.24 2990.74 1609.67 2953.12 1636.75 cv
2927.71 1655.05 2920.63 1653.88 2897.97 1631.62 cv
2865.55 1599.8 2842.4 1562.35 2820.42 1523.53 cv
2797.05 1482.24 2786.1 1437.47 2783.53 1390.63 cv
2782.85 1378.12 2786.05 1365.61 2792.11 1354.88 cv
2806.72 1329.01 2841.81 1323.66 2865.45 1341.67 cv
.152941 .490196 .478431 rgb
f
2534.95 1196.44 mo
2527.47 1200.38 li
2509.26 1165.86 li
2469.36 1172.47 li
2510.37 1133.31 li
2491.91 1132.95 li
2472.56 1096.25 li
2480.04 1092.3 li
2497.06 1124.59 li
2531.05 1125.26 li
2495.04 1159.64 li
2513.9 1156.51 li
2534.95 1196.44 li
.0392157 .117647 .239216 rgb
f
2497.99 1074.64 mo
2505.04 1088 2499.92 1104.54 2486.56 1111.59 cv
2473.2 1118.64 2456.66 1113.52 2449.61 1100.15 cv
2442.56 1086.79 2447.68 1070.24 2461.04 1063.2 cv
2474.4 1056.15 2490.95 1061.28 2497.99 1074.64 cv
.372549 .521569 .188235 rgb
f
2592.07 1169.9 mo
2600.65 1186.17 2579.69 1214.08 2545.25 1232.24 cv
2510.82 1250.4 2475.95 1251.93 2467.37 1235.66 cv
2458.79 1219.39 2479.75 1191.48 2514.18 1173.32 cv
2548.62 1155.16 2583.49 1153.63 2592.07 1169.9 cv
.0392157 .117647 .239216 rgb
f
3131.05 1593.03 mo
3133.38 1579.1 3149.15 1572.11 3161.1 1579.63 cv
3178.61 1590.66 3202.61 1608.13 3221.98 1631.01 cv
3256.87 1672.2 3285.17 1725.84 3285.17 1725.84 cv
3278.51 1744.52 li
3278.51 1744.52 3181.12 1631.57 3147.16 1638.83 cv
3126.55 1643.24 3127.29 1615.51 3131.05 1593.03 cv
cp
.0588235 .156863 .317647 rgb
f
3106.92 1542.86 mo
3148.31 1554.09 li
3160.08 1822.23 li
3123.82 1820.74 li
3106.92 1542.86 li
cp
.980392 .576471 .141176 rgb
f
3045.18 1497.96 mo
3114.47 1526.86 li
3160.08 1822.23 li
3116.27 1820.43 li
3045.18 1497.96 li
cp
.827451 .364706 .0666667 rgb
f
2464.71 1903.8 mo
2464.71 1903.8 2454.56 1957.64 2467.55 2009.84 cv
2480.53 2062.04 2507.55 2116.32 2507.55 2116.32 cv
2526.71 2122.03 li
2526.71 2122.03 2492.14 1977.54 2518.12 1954.7 cv
2544.09 1931.86 2464.71 1903.8 2464.71 1903.8 cv
cp
.0588235 .156863 .317647 rgb
f
2463.63 1865.88 mo
2448.34 1905.58 li
2660.01 2073.34 li
2680.21 2043.5 li
2463.63 1865.88 li
cp
.980392 .576471 .141176 rgb
f
2463.49 1790.05 mo
2446.13 1862.46 li
2660.01 2073.34 li
2684.42 2037.29 li
2463.49 1790.05 li
cp
.905882 .45098 .0666667 rgb
f
3210.55 1925 mo
3120.01 1925 li
3021.16 1696.53 2901.18 1444.07 2901.18 1444.07 cv
2892.14 1435.56 2883.31 1427.46 2874.65 1419.67 cv
2910.82 1425.06 2949.96 1435.18 2992.23 1450.88 cv
3011.2 1457.93 3030.78 1466.09 3051.06 1475.47 cv
3051.06 1475.47 3162.19 1743.58 3210.55 1925 cv
2668.8 1925 mo
2535.77 1925 li
2504.55 1884.77 2473.1 1841.69 2442.64 1796.3 cv
2442.64 1796.3 2454.68 1716.12 2497.8 1629.29 cv
2499.79 1645.34 2501.39 1654.89 2501.39 1654.89 cv
2558.19 1751.17 2615.07 1842.18 2668.8 1925 cv
2857.06 1417.39 mo
2857.04 1417.39 li
2857.06 1417.39 2857.03 1417.39 2857.06 1417.39 cv
2856.68 1417.35 mo
2856.65 1417.34 2856.61 1417.34 2856.58 1417.34 cv
2856.63 1417.34 2856.63 1417.34 2856.68 1417.35 cv
2856.25 1417.3 mo
2856.21 1417.3 2856.16 1417.29 2856.12 1417.29 cv
2856.17 1417.29 2856.2 1417.3 2856.25 1417.3 cv
2855.8 1417.25 mo
2855.77 1417.25 2855.72 1417.24 2855.68 1417.24 cv
2855.73 1417.24 2855.75 1417.25 2855.8 1417.25 cv
2854.6 1417.13 mo
2854.57 1417.12 2854.53 1417.12 2854.49 1417.11 cv
2854.54 1417.12 2854.56 1417.12 2854.6 1417.13 cv
2854.22 1417.09 mo
2854.14 1417.08 2854.1 1417.07 2854.03 1417.07 cv
2854.1 1417.07 2854.14 1417.08 2854.22 1417.09 cv
2853.77 1417.04 mo
2853.7 1417.03 2853.63 1417.03 2853.56 1417.02 cv
2853.63 1417.03 2853.7 1417.03 2853.77 1417.04 cv
2853.32 1416.99 mo
2853.25 1416.99 2853.16 1416.98 2853.09 1416.97 cv
2853.19 1416.98 2853.22 1416.98 2853.32 1416.99 cv
2852.86 1416.95 mo
2852.76 1416.94 2852.68 1416.93 2852.58 1416.92 cv
2852.66 1416.93 2852.79 1416.94 2852.86 1416.95 cv
2852.41 1416.9 mo
2852.26 1416.89 2852.11 1416.87 2851.97 1416.86 cv
2852.11 1416.87 2852.26 1416.89 2852.41 1416.9 cv
2851.79 1416.84 mo
2851.69 1416.83 2851.6 1416.82 2851.5 1416.81 cv
2851.6 1416.82 2851.69 1416.83 2851.79 1416.84 cv
2851.3 1416.79 mo
2851.22 1416.79 2851.13 1416.78 2851.04 1416.77 cv
2851.11 1416.78 2851.23 1416.79 2851.3 1416.79 cv
2850.84 1416.75 mo
2850.76 1416.74 2850.64 1416.73 2850.55 1416.72 cv
2850.65 1416.73 2850.75 1416.74 2850.84 1416.75 cv
2850.39 1416.71 mo
2850.27 1416.7 2850.17 1416.69 2850.06 1416.68 cv
2850.16 1416.69 2850.29 1416.7 2850.39 1416.71 cv
2849.92 1416.66 mo
2849.79 1416.65 2849.62 1416.64 2849.48 1416.62 cv
2849.63 1416.64 2849.78 1416.65 2849.92 1416.66 cv
2849.46 1416.62 mo
2849.3 1416.61 2849.16 1416.59 2849 1416.58 cv
2849.15 1416.59 2849.31 1416.61 2849.46 1416.62 cv
2848.85 1416.57 mo
2848.76 1416.56 2848.64 1416.55 2848.54 1416.54 cv
2848.64 1416.55 2848.75 1416.56 2848.85 1416.57 cv
2848.37 1416.52 mo
2848.27 1416.51 2848.17 1416.5 2848.07 1416.49 cv
2848.17 1416.5 2848.27 1416.51 2848.37 1416.52 cv
2847.89 1416.48 mo
2847.8 1416.47 2847.7 1416.46 2847.6 1416.45 cv
2847.7 1416.46 2847.8 1416.47 2847.89 1416.48 cv
2847.43 1416.44 mo
2847.31 1416.43 2847.22 1416.42 2847.09 1416.41 cv
2847.22 1416.42 2847.31 1416.43 2847.43 1416.44 cv
2846.97 1416.4 mo
2846.83 1416.39 2846.66 1416.37 2846.51 1416.36 cv
2846.68 1416.37 2846.8 1416.38 2846.97 1416.4 cv
2846.45 1416.35 mo
2846.31 1416.34 2846.19 1416.33 2846.06 1416.32 cv
2846.2 1416.33 2846.3 1416.34 2846.45 1416.35 cv
2845.9 1416.31 mo
2845.8 1416.3 2845.69 1416.29 2845.59 1416.28 cv
2845.69 1416.29 2845.8 1416.3 2845.9 1416.31 cv
2845.42 1416.27 mo
2845.32 1416.26 2845.24 1416.25 2845.14 1416.24 cv
2845.24 1416.25 2845.32 1416.26 2845.42 1416.27 cv
2844.95 1416.23 mo
2844.86 1416.22 2844.77 1416.21 2844.67 1416.21 cv
2844.77 1416.21 2844.86 1416.22 2844.95 1416.23 cv
2844.49 1416.19 mo
2844.39 1416.18 2844.27 1416.17 2844.17 1416.17 cv
2844.27 1416.17 2844.39 1416.18 2844.49 1416.19 cv
2844.02 1416.15 mo
2843.88 1416.14 2843.74 1416.13 2843.59 1416.12 cv
2843.74 1416.13 2843.88 1416.14 2844.02 1416.15 cv
2843.41 1416.11 mo
2843.32 1416.1 2843.24 1416.09 2843.14 1416.09 cv
2843.22 1416.09 2843.34 1416.1 2843.41 1416.11 cv
2842.93 1416.07 mo
2842.84 1416.06 2842.77 1416.06 2842.69 1416.05 cv
2842.78 1416.06 2842.83 1416.06 2842.93 1416.07 cv
2842.48 1416.03 mo
2842.4 1416.03 2842.32 1416.02 2842.24 1416.02 cv
2842.32 1416.02 2842.4 1416.03 2842.48 1416.03 cv
2842.01 1416 mo
2841.95 1415.99 2841.87 1415.99 2841.81 1415.98 cv
2841.88 1415.99 2841.93 1415.99 2842.01 1416 cv
2841.55 1415.97 mo
2841.52 1415.96 2841.5 1415.96 2841.46 1415.96 cv
2841.49 1415.96 2841.53 1415.96 2841.55 1415.97 cv
2840.82 1415.91 mo
2840.78 1415.91 2840.75 1415.91 2840.7 1415.9 cv
2840.75 1415.91 2840.78 1415.91 2840.82 1415.91 cv
2840.41 1415.88 mo
2840.36 1415.88 2840.31 1415.88 2840.27 1415.87 cv
2840.31 1415.88 2840.36 1415.88 2840.41 1415.88 cv
2839.97 1415.85 mo
2839.92 1415.85 2839.88 1415.85 2839.83 1415.84 cv
2839.88 1415.85 2839.92 1415.85 2839.97 1415.85 cv
2839.51 1415.82 mo
2839.48 1415.82 2839.46 1415.82 2839.42 1415.81 cv
2839.45 1415.82 2839.49 1415.82 2839.51 1415.82 cv
level3{
gsave
clp
[-1500.9 -2977.72 2977.72 -1500.9 3350.75 2833.99 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .45098 .0666667 ]
/C1 [.905882 .45098 .0666667 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .45098 .0666667 ]
/C1 [.678431 .0666667 .137255 ]
/N 1 
>>
]
/Bounds [.00837989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1500.9 -2977.72 2977.72 -1500.9 3350.75 2833.99 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kND$jk2tgfjlPUbjQ,C_j5]1[io8tWio/kTiS`YPi8<GLhr!;IhVR)Eh;-lAgt^]>gY:K:g=k97g"G'3
f\"j/f@SX+f@JO(f%&=$e^W*ueC;sre'landaHRkdF$@gd*U.ccd0q`cHa_\c-=MXbfn;Tbfe2QbK@uM
b0%iJaiVWFaN2EBa2c6?`l?$;`Pog7`5KU4_o'C0_SX1,_SO()_8*k%^q[Y!^V@Ls^:q:o]tM(k]Y(nh
]=Y\d]"5Ja\[f8]\@B&Y\$riU\$i`R[^ENN[C!<J['[0GZa6sCZEgd@Z*CR<Yct@8YHP.5Y-+q1Xf\_-
~>
<~F)uDCEcH)=E,]`6Df0H1D/F**Chmg$C2.HsBkV0mB4kggAS#F`A7T1[@U`eT@:3JN?XI,G?<piB>[1K;
>?Y35=]nj/=BAR)<`W4#<)cgq;c?Rl;,L1e:esk_:/4MX9h\5S91qlL8kDTF84Z6@7n,s:77BU46UO4-
6:*t(5X7S!5<_7p4Ztqj4?GVd3]]8]3B/uW2`EWQ2Dm?K1c.!E1,:U>0ek@90/"t2/hJY,/1`>&.k3"u
.4HYn-mpAi-71#b,pX`\,9nBV+X&!O+<VaJ*Zc@C*?6%=)]K_7)AsD1(`4&*(D[c%'bqDs'GD,m&eYcg
~>
<~&J5Te&J5Te&J5Te&J5Te&J>]h&eYfi&eYfi&eYfj',)#m',)#m',)#m',2,p'GM5q'GM5q'GM5r'bqGu
'bqGu'bqGu'c%Q#()@Z$()@Z$()@Z%(Ddl((Ddl((Ddl((Dmu+(`4),(`4),(`4)-)&X;0)&X;0)&X;0
)&X>2)B'M4)B'M4)B'M4)]K_8)]K_8)]K_8)]Kb:*#oq<*#oq<*#oq<*??.@*??.@*??.@*??1B*Zc@D
*Zc@D*Zc@D+!2RH+!2RH+!2RH+!2UJ+<VdL+<VdL+<VdL+X&!P+X&!P+X&!P+X&$R+sJ3T+sJ3T+sJ3T
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
3120.01 1925 mo
2668.8 1925 li
2615.07 1842.18 2558.19 1751.17 2501.39 1654.89 cv
2501.39 1654.89 2499.79 1645.34 2497.8 1629.29 cv
2497.79 1629.29 2497.79 1629.28 2497.79 1629.28 cv
2508.64 1607.45 2521.44 1585.19 2536.52 1563.69 cv
2545.99 1581.66 li
2575.4 1637.42 2632.36 1669.26 2691.3 1669.26 cv
2717.11 1669.26 2743.3 1663.15 2767.72 1650.27 cv
2823.47 1620.88 2855.31 1563.93 2855.32 1505 cv
2855.33 1479.18 2849.23 1452.98 2836.34 1428.55 cv
2836.34 1428.55 li
2829.33 1415.25 li
2832.66 1415.39 2836.03 1415.58 2839.42 1415.81 cv
2839.46 1415.82 2839.48 1415.82 2839.51 1415.82 cv
2839.61 1415.83 2839.73 1415.84 2839.83 1415.84 cv
2839.88 1415.85 2839.92 1415.85 2839.97 1415.85 cv
2840.07 1415.86 2840.17 1415.87 2840.27 1415.87 cv
2840.31 1415.88 2840.36 1415.88 2840.41 1415.88 cv
2840.5 1415.89 2840.61 1415.9 2840.7 1415.9 cv
2840.75 1415.91 2840.78 1415.91 2840.82 1415.91 cv
2841.03 1415.93 2841.26 1415.94 2841.46 1415.96 cv
2841.5 1415.96 2841.52 1415.96 2841.55 1415.97 cv
2841.64 1415.97 2841.72 1415.98 2841.81 1415.98 cv
2841.87 1415.99 2841.95 1415.99 2842.01 1416 cv
2842.09 1416.01 2842.16 1416.01 2842.24 1416.02 cv
2842.32 1416.02 2842.4 1416.03 2842.48 1416.03 cv
2842.55 1416.04 2842.61 1416.04 2842.69 1416.05 cv
2842.77 1416.06 2842.84 1416.06 2842.93 1416.07 cv
2842.99 1416.07 2843.08 1416.08 2843.14 1416.09 cv
2843.24 1416.09 2843.32 1416.1 2843.41 1416.11 cv
2843.47 1416.11 2843.53 1416.12 2843.59 1416.12 cv
2843.74 1416.13 2843.88 1416.14 2844.02 1416.15 cv
2844.07 1416.16 2844.12 1416.16 2844.17 1416.17 cv
2844.27 1416.17 2844.39 1416.18 2844.49 1416.19 cv
2844.55 1416.2 2844.61 1416.2 2844.67 1416.21 cv
2844.77 1416.21 2844.86 1416.22 2844.95 1416.23 cv
2845.01 1416.23 2845.08 1416.24 2845.14 1416.24 cv
2845.24 1416.25 2845.32 1416.26 2845.42 1416.27 cv
2845.48 1416.27 2845.53 1416.28 2845.59 1416.28 cv
2845.69 1416.29 2845.8 1416.3 2845.9 1416.31 cv
2845.95 1416.31 2846.01 1416.32 2846.06 1416.32 cv
2846.19 1416.33 2846.31 1416.34 2846.45 1416.35 cv
2846.47 1416.36 2846.49 1416.36 2846.51 1416.36 cv
2846.66 1416.37 2846.83 1416.39 2846.97 1416.4 cv
2847.01 1416.4 2847.06 1416.41 2847.09 1416.41 cv
2847.22 1416.42 2847.31 1416.43 2847.43 1416.44 cv
2847.48 1416.44 2847.56 1416.45 2847.6 1416.45 cv
2847.7 1416.46 2847.8 1416.47 2847.89 1416.48 cv
2847.96 1416.48 2848.01 1416.49 2848.07 1416.49 cv
2848.17 1416.5 2848.27 1416.51 2848.37 1416.52 cv
2848.43 1416.53 2848.48 1416.53 2848.54 1416.54 cv
2848.64 1416.55 2848.76 1416.56 2848.85 1416.57 cv
2848.9 1416.57 2848.95 1416.57 2849 1416.58 cv
2849.16 1416.59 2849.3 1416.61 2849.46 1416.62 cv
2849.47 1416.62 2849.47 1416.62 2849.48 1416.62 cv
2849.62 1416.64 2849.79 1416.65 2849.92 1416.66 cv
2849.97 1416.67 2850.01 1416.67 2850.06 1416.68 cv
2850.17 1416.69 2850.27 1416.7 2850.39 1416.71 cv
2850.45 1416.71 2850.49 1416.72 2850.55 1416.72 cv
2850.64 1416.73 2850.76 1416.74 2850.84 1416.75 cv
2850.92 1416.76 2850.97 1416.76 2851.04 1416.77 cv
2851.13 1416.78 2851.22 1416.79 2851.3 1416.79 cv
2851.36 1416.8 2851.44 1416.81 2851.5 1416.81 cv
2851.6 1416.82 2851.69 1416.83 2851.79 1416.84 cv
2851.85 1416.85 2851.9 1416.85 2851.97 1416.86 cv
2852.11 1416.87 2852.26 1416.89 2852.41 1416.9 cv
2852.46 1416.91 2852.53 1416.92 2852.58 1416.92 cv
2852.68 1416.93 2852.76 1416.94 2852.86 1416.95 cv
2852.94 1416.96 2853.01 1416.96 2853.09 1416.97 cv
2853.16 1416.98 2853.25 1416.99 2853.32 1416.99 cv
2853.41 1417 2853.47 1417.01 2853.56 1417.02 cv
2853.63 1417.03 2853.7 1417.03 2853.77 1417.04 cv
2853.85 1417.05 2853.95 1417.06 2854.03 1417.07 cv
2854.1 1417.07 2854.14 1417.08 2854.22 1417.09 cv
2854.3 1417.09 2854.4 1417.11 2854.49 1417.11 cv
2854.53 1417.12 2854.57 1417.12 2854.6 1417.13 cv
2854.96 1417.16 2855.32 1417.2 2855.68 1417.24 cv
2855.72 1417.24 2855.77 1417.25 2855.8 1417.25 cv
2855.91 1417.26 2856.01 1417.27 2856.12 1417.29 cv
2856.16 1417.29 2856.21 1417.3 2856.25 1417.3 cv
2856.36 1417.31 2856.46 1417.32 2856.58 1417.34 cv
2856.61 1417.34 2856.65 1417.34 2856.68 1417.35 cv
2856.81 1417.36 2856.92 1417.37 2857.04 1417.39 cv
2857.06 1417.39 li
2862.84 1418.02 2868.71 1418.78 2874.65 1419.67 cv
2874.65 1419.67 li
2883.31 1427.46 2892.14 1435.56 2901.18 1444.07 cv
2901.18 1444.07 3021.16 1696.53 3120.01 1925 cv
level3{
gsave
clp
[-524.89 -959.138 959.138 -524.89 3197.4 2456.04 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.984314 .690196 .231373 ]
/C1 [.678431 .0666667 .137255 ]
/N 2.11001 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-524.89 -959.138 959.138 -524.89 3197.4 2456.04 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Xf\b/YHY79ZEggC['d<M[^WcV\[f;`]=bei]tV7r^qde&_SX4.`5T^8`lH-@aN;QHb0.uPbg"DXcHjh`
d*U1fdaHUneC<%!e^i='f@\a.g"G*5g=tB;gt^`AhVR,Hhr!AMiSibTio9"Yj5f:^jlPUdk2tjikNM-n
kiq?rlK[["lg*m'm-O*+mHs</mdBN3n*f`7nF5r:naZ/>nac8Ao(2JEoCMSGo^qeJo_%nMp%A"Op@e4R
p@e7Tp\4FVp\4IXq"XXZq"XX[q>'j^q>'j^q>'j^qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~&/#Wj()If+)]Tk?+<_pS,pjuf.P!&%/h\q71GgsI3&s#]4?Ykm5X@b*77Kd<8P2WL9hnJ\;,U=l<E<1'
=^#$7?!^iE?t!MSA7]@cB4u!oCM[g(DJsK6EH6,BF`hkOG^+L[H[C-gI=?ZrJ:W<(K7no3L5(J>Ll$tG
Mi3OQNK0$[O-#HcP*2#mPa%GuQBml(R$a;0R[T_8S"-">SXuFET:_dLTV8'QU8"EXUSO]]V5:#cVP^5g
Vl-JlW2Q\pWMuntWiE)"X/i;%XK8M)XK8P+Xf\_-Y-+q1Y-+q1Y-5%4YHP.5YHP.5YHP.5YHP.5YHP.5
~>
<~,9nEX,9nHZ,U=W],pai`-71&d-71)f-RU8i-n$Jl-n-So.4H\q.Olnt.P!#".k<,#/1`>'/1`A)/M/P+
/M8Y./hSb/0/"t30/"t30JG170JG180ekC;0ekC;1,:U?1,:U?1G^gC1G^gC1G^jE1c.$G1c.$G2)R6K
2)R6K2)R6L2E!HO2E!HO2E!HP2`EZS2`EZS2`EZS2`NcV3&ilW3&ilW3&ilW3&ioY3B9)[3B9)[3B9)[
3B9)[3B9)[3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
3275.38 1675.67 mo
3307.37 1699.14 li
3307.37 1699.14 3419.03 1686.12 3532.79 1890.59 cv
3532.79 1890.59 3537.47 2003.03 3341.14 2016.19 cv
3341.14 2016.19 3246.52 1839.76 3260.37 1770.13 cv
3237.66 1755.67 li
3237.66 1755.67 3244.54 1690.4 3275.38 1675.67 cv
cp
level3{
gsave
clp
[-398.245 312.32 -312.32 -398.245 3539.22 1699.15 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-398.245 312.32 -312.32 -398.245 3539.22 1699.15 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
3281.95 1734.87 mo
3249.4 1708.67 li
3240.26 1731.07 3237.66 1755.67 3237.66 1755.67 cv
3260.37 1770.13 li
3246.52 1839.76 3341.14 2016.19 3341.14 2016.19 cv
3396.56 2012.47 3435.96 2000.84 3463.97 1986.07 cv
3380.07 1945.39 3281.95 1734.87 3281.95 1734.87 cv
cp
level3{
gsave
clp
[108.544 -57.2292 57.2292 108.544 3274.87 1890.51 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[108.544 -57.2292 57.2292 108.544 3274.87 1890.51 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
3373.2 1751.42 mo
3375.64 1756.04 3373.86 1761.76 3369.24 1764.2 cv
3364.63 1766.63 3358.91 1764.87 3356.47 1760.24 cv
3354.04 1755.63 3355.81 1749.9 3360.42 1747.47 cv
3365.04 1745.04 3370.77 1746.81 3373.2 1751.42 cv
cp
.984314 .690196 .231373 rgb
f
3409.24 1790.54 mo
3411 1793.87 3409.72 1798 3406.39 1799.75 cv
3403.06 1801.51 3398.94 1800.23 3397.18 1796.9 cv
3395.43 1793.57 3396.71 1789.45 3400.03 1787.7 cv
3403.36 1785.94 3407.49 1787.21 3409.24 1790.54 cv
cp
f
3435.67 1836.01 mo
3436.83 1838.21 3435.99 1840.92 3433.79 1842.08 cv
3431.59 1843.24 3428.88 1842.4 3427.72 1840.2 cv
3426.56 1838.01 3427.4 1835.29 3429.6 1834.13 cv
3431.8 1832.97 3434.51 1833.82 3435.67 1836.01 cv
cp
f
3462.48 1873.33 mo
3463.57 1875.41 3462.77 1877.97 3460.71 1879.06 cv
3458.64 1880.15 3456.07 1879.36 3454.98 1877.29 cv
3453.89 1875.22 3454.68 1872.65 3456.75 1871.56 cv
3458.82 1870.47 3461.38 1871.27 3462.48 1873.33 cv
cp
f
3545.21 1867.61 mo
3593.85 1965.26 li
3593.85 1965.26 3606.69 2003.04 3531.26 2048.09 cv
3455.85 2093.14 3371.52 2091.56 3371.52 2091.56 cv
3317.95 2005.57 li
3317.95 2005.57 3465.67 2021.81 3545.21 1867.61 cv
cp
level3{
gsave
clp
[526.207 -271.043 271.043 526.207 3290.2 2085.91 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[526.207 -271.043 271.043 526.207 3290.2 2085.91 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
3593.85 1965.26 mo
3545.21 1867.61 li
3524.09 1908.55 3498.17 1937.48 3471.47 1957.89 cv
3472.61 1960.15 3473.76 1962.41 3474.96 1964.67 cv
3492.24 1997.45 3512.44 2025.68 3532.82 2047.14 cv
3606.47 2002.51 3593.85 1965.26 3593.85 1965.26 cv
cp
level3{
gsave
clp
[-494.969 -40.9647 40.9647 -494.969 3851.18 1983.21 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-494.969 -40.9647 40.9647 -494.969 3851.18 1983.21 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
3601.33 1980.29 mo
3645.23 2176.28 li
3619.2 2188.71 li
3551.86 2053.49 li
3551.86 2053.49 3594.35 2015.38 3601.33 1980.29 cv
cp
.160784 .380392 .509804 rgb
f
2734.02 1833.96 mo
2924.1 1733.73 li
3023.02 2003.69 li
2899.88 2068.62 li
2734.02 1833.96 li
cp
.0588235 .156863 .317647 rgb
f
2900.33 2066.79 mo
2844.17 1987.09 2795.74 1918.15 2734.02 1833.96 cv
2787.53 1912.51 2840.14 1987 2899.45 2070.45 cv
2958.28 2038.9 2975.44 2029.86 3023.02 2003.69 cv
3002.31 2014.15 2919.43 2056.73 2900.33 2066.79 cv
cp
.109804 .0901961 .0745098 rgb
f
2759.2 1841.19 mo
2903.31 2049.63 li
3002.68 1997.22 li
2916.97 1758.25 li
2759.2 1841.19 li
cp
level3{
gsave
clp
[-251.86 -481.33 481.33 -251.86 3021 2149.28 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.984314 .690196 .231373 ]
/C1 [.905882 .45098 .0666667 ]
/N 2.11001 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-251.86 -481.33 481.33 -251.86 3021 2149.28 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kND$kkND$lkih6okiq?rl07HtlK[["lK[^$lg*m&lg4!)m-O**mHs<.mHs<.mdBN2mdBN2n*f`6n*f`6
nF5r:nF5r:naZ/>naZ/>nac8Ao()ABo()ACoCMSFoCMSFoCV\Io^qeJo^qeJp%A"Np%A"Np%A"Np@e4R
p@e4Rp@e4Rp@n=Up\4FVp\4FVp\4FVq"XXZq"XXZq"XXZq"XXZq"XX[q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j_qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~F)uGFFEM_LG'A.TG^4R\H@(!dI!pEkIXZcrJ:N3%JV&K+K7no2KnY89LPLY@Ll$tFMMd:LMi<URNK&sY
NfT6^OH>QdOcbfiP*;)nPa%DtQ'IZ$QC!r)R$a8/R@0J3R[T_8S"#q<S=Q4ASXuFEStDXIT:hjMTV8'Q
Tq\9UU8+KYUSFW\Unjf_V5:#bVP^5fVPg>iVl-GkW2QYnW2ZbqWMuksWiE)!WiE,#X/i;%X/i>'XK8M)
XK8M*Xf\_-Xf\_-Xf\b/Y-+q1Y-+q1Y-+q1YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5
~>
<~&.oKe&eYik',2,p'bqH!()@Z%(Ddo*(`=2/)B'M5)]K_9*#ot>*??1B*ZlIG+!;[K+<_mO+sJ3T,9nEX
,U=W\,pai`-71&d-RU8h-R^Ak-n-So.4H_r.Olr!.k<,$/1`>'/M/P+/M/S-/hSb00/"t30/,(60JG18
0ekC;0etL>1,:U?1G^gC1G^gD1c.$G1c.$H2)R6K2)R6L2E!HO2E!HO2E*QR2`EZS2`EZT3&ilW3&ilW
3&ilW3B9)[3B9)[3B9)[3B9)[3BB2^3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
2861.41 1821.87 mo
2864.62 1827.94 2862.28 1835.47 2856.21 1838.68 cv
2850.13 1841.88 2842.6 1839.55 2839.39 1833.47 cv
2836.19 1827.4 2838.52 1819.87 2844.6 1816.67 cv
2850.68 1813.46 2858.2 1815.79 2861.41 1821.87 cv
cp
.0392157 .117647 .239216 rgb
f
2885.33 1873.3 mo
2887.8 1878 2886 1883.81 2881.31 1886.28 cv
2876.62 1888.76 2870.8 1886.96 2868.33 1882.27 cv
2865.86 1877.57 2867.65 1871.76 2872.35 1869.29 cv
2877.04 1866.81 2882.85 1868.61 2885.33 1873.3 cv
cp
f
2907.11 1914.61 mo
2909.58 1919.3 2907.78 1925.11 2903.09 1927.59 cv
2898.4 1930.06 2892.59 1928.27 2890.11 1923.57 cv
2887.64 1918.88 2889.44 1913.07 2894.13 1910.6 cv
2898.82 1908.12 2904.63 1909.92 2907.11 1914.61 cv
cp
f
2936.77 1970.87 mo
2939.25 1975.56 2937.45 1981.38 2932.76 1983.85 cv
2928.07 1986.33 2922.25 1984.53 2919.78 1979.83 cv
2917.3 1975.14 2919.1 1969.33 2923.8 1966.85 cv
2928.49 1964.38 2934.3 1966.18 2936.77 1970.87 cv
cp
f
2815.16 1847.82 mo
2818.01 1853.22 2815.94 1859.91 2810.54 1862.76 cv
2805.14 1865.6 2798.46 1863.53 2795.61 1858.13 cv
2792.76 1852.73 2794.83 1846.05 2800.23 1843.2 cv
2805.63 1840.35 2812.32 1842.42 2815.16 1847.82 cv
cp
.678431 .0666667 .137255 rgb
f
2906.9 1799.44 mo
2909.75 1804.84 2907.68 1811.53 2902.28 1814.38 cv
2896.88 1817.23 2890.19 1815.16 2887.35 1809.76 cv
2884.5 1804.36 2886.57 1797.67 2891.97 1794.82 cv
2897.37 1791.98 2904.05 1794.04 2906.9 1799.44 cv
cp
.372549 .521569 .188235 rgb
f
2586.72 1172.04 mo
2475.33 1230.78 li
2425.91 1256.84 2413.52 1330.43 2447.65 1395.15 cv
2545.99 1581.66 li
2588.27 1661.84 2687.54 1692.55 2767.72 1650.27 cv
2847.9 1608 2878.62 1508.73 2836.34 1428.55 cv
2738 1242.05 li
2703.87 1177.33 2636.13 1145.98 2586.72 1172.04 cv
.290196 .478431 .619608 rgb
f
2536.52 1563.69 mo
2512.48 1518.1 li
2512.54 1518.22 2512.61 1518.35 2512.68 1518.47 cv
2536.52 1563.69 li
2536.52 1563.69 li
level3{
gsave
clp
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,[G43?#1clCa<;&,[G43?#1clCa<;&,[G43?#1clCa<;&,[G43?#1clCa<;&,[G43?#1clCa<;&,[G43
?#1clCa<;&,[G43?#1clCa<;&,[G43?#1clCa<;&,[G43?#1clCa<;&,[G43?#1clCa<;&,[G43?#1cl
Ca<;&,[G43?#1clCa<;&,[G43?#1clCa<;&,[G43?#1clCa<;&,[G43?#1clCa<;&,[G43?#1clCa<;&
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,[G44?#1fnCaED(-=1L8?>LuqCaWP*-XLU;?>M#rCai\,.UHp@?Yh3!Cb&k/.pm*C?Yh9#Cb/q0/7<9G
?u.E&CbB.4/n&QK@;IT*CbK450O\cP@;IZ,Cb]@711=uS@;I`/CboO:1Lb/W@Vdl1Cc,[<2.CAZ@r+&5
Cc5d>2e6_`A8F59CcGsA3+QhcA8F8:CcZ*C3b3%fA8=8;CHH*C4Cr:jASXD>CHZ6E4_8CmASXJACHc?G
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~5%\RqAnsYDCI)QJ6>(($B59kICIDfO7;$F*BP^.OCe&/T88)g2Bl$@TCeADX95/39Bl$IXCe\Y\:24T@
C2?[\Cf"n`;/9uGCMZmaCf>.d<,?ANCi!-gCfY@g=)DbUD/<<kCftUk>&A([DJWNpCg:jo?#FIbDerd!
CgV*s?uKjiDf&p$D.7F#@rQ9qE,B0*D.[d)AoV[#EG]B/D.ms,Bl\'*Ec,W4DJX?2D/sN2Ec,c9DJsT6
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7
F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;
DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6Df]f7F)Go;DJsT6
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.218947 .403598 .839551 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,:"N\-71&e
-n-Sp.P!#"/1iG+/h\n40etL>1GgpG2)[BP2`NfX3]]>a4?Pbi5!M7s5X@\&6:+%,6psF277B[97n?0A
84cEG91qoN9MJ5V:/4P[:Janc;,L4h;cH^r<E3%"<``@(=BJ^/>$>*6>?kE=?=$rE?XI2K?t!JQ@UinY
AS#FaAnG[gB4tsmBk_9sCi!p(D/F0.DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0DJj?0
~>
<~>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[:W@?!U`A
?!UcC?=$rF?XR8L?smAM?t!JP@:<SR@UinX@q0"Y@q9+\A7T7_AS#FaAS,OdAnGXeAnG[gB4kjiB4tsl
BP;'mBP;*oBk_9qBk_9rC2.KuC2.O"CMR^$CMR^%Ci!p(Ci!p(D/F-,D/F--DJj?0DJj?0DJj?1Df9Q4
E,]c8E,]c9EH,u<EH,u<EH,u<EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@
~>
<~CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$
CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$C2.KuC2.KuC2.KuC2.KuC2.O"CMR^$CMR^$CMR^$
CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMRa&Ci!p(Ci!p(
Ci!p(Ci!p(Ci!p)D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
2691.3 1669.26 mo
2632.36 1669.26 2575.4 1637.42 2545.99 1581.66 cv
2536.52 1563.69 li
2536.52 1563.69 li
2545.99 1581.66 li
2575.4 1637.42 2632.36 1669.25 2691.3 1669.26 cv
2717.11 1669.26 2743.3 1663.15 2767.72 1650.27 cv
2823.47 1620.88 2855.31 1563.93 2855.32 1505 cv
2855.31 1563.93 2823.47 1620.88 2767.72 1650.27 cv
2743.3 1663.15 2717.11 1669.26 2691.3 1669.26 cv
level3{
gsave
clp
[-524.89 -959.138 959.138 -524.89 3197.4 2456.04 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~D-%s!=!MQ`,AgL,D-%s!<[2H^,AgI+D,qlu<?l?\,AgF)D,hcr<$H-X,&C1%Cf2Hm;BfjR,&0t!C/?*h
:EjOL+_a[pBhT[`9He(B+D==hB1X4Y80DM6+D+%bAOIVO6Q]i*+(IPX@m;&E4W\#o*aq,O?o]983#u?`
*F:QB>r!C*0H==N**Xs5=t1Fn.2l;8)H\:(=!JVa+;n0#),hLl;]6KN(Dp!a(Jkb\:Cn:9%2MVF'h\iJ
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-524.89 -959.138 959.138 -524.89 3197.4 2456.04 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~8kVfM92&#Q9MJ5V:/=Y]:Jaka:f1(e;,U:i;GpCj;H$Ln<)lpu<E<.$<``@(='&I)='/R,=BSd0=^#!4
>$>-7>?b?;>[1N=>[1Q??!UcC?=$rE?=$uG?XI2K?smAM?smDO@:<VS@U`eU@U`hW@q0%[A7T4]A7T7_
AS#FaAS#FbAnGXeAnGXfB4kjiB4kjiB4kjjBP;'mBP;'nBk_9qBk_9qBk_9qBk_9qBk_9rC2.L!CMR^$
CMR^$CMR^$CMR^$Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(Ci!p(
~>
<~#RLeE$4@4M$k3[W%hK<c&ebom'GV>u()If))&aD4)]Th<*?H7D+!;^M+sS<X,UF`_,pjrd-n-So.4Qet
.k</&/hSe10/#"50ekF=1G^jE1c.'J2E*TT3&ioY3]]>a4$,Pe4?Pbi5!D1q5<hCu5s[h(6:+%,6UO70
6psF377BX77Ros>84Z9B84Z9C8P2TJ91qoN91qoO9MJ5V:/4PZ:/4P[:JXb_:f'tc;,L1f;,L1f;,L1g
;GpCj;c?Un;c?Un<)cgr<)cgr<)cgr<)cgr<E3%!<E3%!<E3%!<E3%!<`W7%<`W7%<`W7%<`W7%<`W7%
~>
<~'GM5q'GV>t'bqGu'bqGu'c%Q#()Ic'(Ddl((Ddl((Dmu+(`4),(`=2/)&X;0)&X;0)&X;0)&X;0)&aD3
)B'P6)]K_8)]K_8)]K_8)]Kb:*#oq<*#ot>*??.@*??.@*??.@*??1B*Zc@D*Zc@D*Zc@D*Zc@D*ZcCF
+!2RH+!2RH+!2RH+!2RH+!2RH+!2RI+<VdL+<VdL+<VdL+<VdM+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P
+X&!P+X&!P+X&!P+X&!P+X&!P+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
2829.33 1415.25 mo
2829.33 1415.25 li
2802.92 1365.17 li
2802.89 1365.11 2802.86 1365.06 2802.83 1365 cv
2829.33 1415.25 li
.0666667 .243137 .282353 rgb
f
2691.3 1669.26 mo
2632.36 1669.25 2575.4 1637.42 2545.99 1581.66 cv
2536.52 1563.69 li
2512.68 1518.47 li
2542.14 1574.01 2598.97 1605.7 2657.79 1605.7 cv
2683.59 1605.7 2709.79 1599.59 2734.21 1586.72 cv
2814.32 1544.47 2845.06 1445.31 2802.92 1365.17 cv
2829.33 1415.25 li
2836.34 1428.55 li
2849.23 1452.98 2855.33 1479.18 2855.32 1505 cv
2855.31 1563.93 2823.47 1620.88 2767.72 1650.27 cv
2743.3 1663.15 2717.11 1669.26 2691.3 1669.26 cv
.12549 .235294 .364706 rgb
f
2709.31 1545.26 mo
2693.89 1545.26 2677.44 1540.82 2660.97 1532.53 cv
2675.64 1524.8 li
2682.14 1521.37 2684.64 1513.31 2681.21 1506.8 cv
2585.47 1325.25 li
2583.08 1320.72 2578.46 1318.14 2573.68 1318.14 cv
2571.58 1318.14 2569.46 1318.64 2567.48 1319.68 cv
2532.19 1338.29 li
2524.4 1282.99 2538.44 1235.84 2573.21 1217.5 cv
2583.22 1212.22 2594.24 1209.71 2605.83 1209.71 cv
2655.33 1209.71 2715.38 1255.5 2753.13 1327.09 cv
2799.73 1415.45 2794.71 1509.64 2741.93 1537.47 cv
2731.92 1542.75 2720.9 1545.26 2709.31 1545.26 cv
.25098 .423529 .564706 rgb
f
2591.69 1567.34 mo
2586.9 1567.34 2582.28 1564.75 2579.9 1560.23 cv
2484.16 1378.67 li
2480.73 1372.17 2483.22 1364.11 2489.73 1360.68 cv
2532.19 1338.29 li
2567.48 1319.68 li
2569.46 1318.64 2571.58 1318.14 2573.68 1318.14 cv
2578.46 1318.14 2583.08 1320.72 2585.47 1325.25 cv
2681.21 1506.8 li
2684.64 1513.31 2682.14 1521.37 2675.64 1524.8 cv
2660.97 1532.53 li
2597.89 1565.8 li
2595.91 1566.84 2593.78 1567.34 2591.69 1567.34 cv
2576.07 1382.02 mo
2572 1382.02 2567.91 1382.55 2563.92 1383.64 cv
2529.37 1393.1 2516.63 1434.26 2539.8 1461.58 cv
2548.79 1472.18 2562.26 1478.15 2575.93 1478.15 cv
2580.01 1478.15 2584.1 1477.62 2588.1 1476.52 cv
2622.64 1467.07 2635.39 1425.91 2612.22 1398.59 cv
2603.22 1387.98 2589.75 1382.02 2576.07 1382.02 cv
level3{
gsave
clp
[101.325 -53.4228 53.4228 101.325 2532.02 1469.45 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[101.325 -53.4228 53.4228 101.325 2532.02 1469.45 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
2724.36 1292.65 mo
2747.58 1320.01 2734.82 1361.26 2700.21 1370.73 cv
2682.76 1375.5 2663.51 1369.55 2651.82 1355.75 cv
2628.6 1328.38 2641.37 1287.14 2675.98 1277.67 cv
2693.42 1272.9 2712.67 1278.85 2724.36 1292.65 cv
cp
.0392157 .117647 .239216 rgb
f
2719.21 1300.84 mo
2735.02 1322.21 2725.7 1352.35 2700.57 1361.05 cv
2684.91 1366.47 2666.83 1360.88 2656.98 1347.56 cv
2641.16 1326.19 2650.49 1296.04 2675.61 1287.35 cv
2691.27 1281.93 2709.35 1287.52 2719.21 1300.84 cv
cp
.298039 .776471 .745098 rgb
f
2687.19 1307.36 mo
2697.75 1319.35 2692.04 1337.78 2676.55 1341.71 cv
2669.28 1343.56 2661.19 1341.05 2656.23 1335.42 cv
2645.67 1323.43 2651.37 1305 2666.86 1301.07 cv
2674.14 1299.22 2682.22 1301.72 2687.19 1307.36 cv
cp
.160784 .380392 .509804 rgb
f
2548.21 1365.28 mo
2550.79 1370.16 2548.92 1376.2 2544.04 1378.77 cv
2539.16 1381.34 2533.13 1379.47 2530.55 1374.59 cv
2527.98 1369.72 2529.85 1363.68 2534.73 1361.1 cv
2539.6 1358.53 2545.64 1360.4 2548.21 1365.28 cv
cp
.984314 .690196 .231373 rgb
f
2612.22 1398.59 mo
2635.39 1425.91 2622.64 1467.07 2588.1 1476.52 cv
2570.69 1481.29 2551.47 1475.34 2539.8 1461.58 cv
2516.63 1434.26 2529.37 1393.1 2563.92 1383.64 cv
2581.33 1378.88 2600.54 1384.83 2612.22 1398.59 cv
.0392157 .117647 .239216 rgb
f
2613.51 1410.31 mo
2624.43 1431.02 2616.49 1456.66 2595.78 1467.58 cv
2575.07 1478.5 2549.43 1470.57 2538.51 1449.86 cv
2527.59 1429.15 2535.52 1403.5 2556.23 1392.58 cv
2576.94 1381.66 2602.59 1389.6 2613.51 1410.31 cv
.298039 .776471 .745098 rgb
f
2598.14 1404.35 mo
2612.33 1422.16 2604.28 1448.18 2582.51 1454.87 cv
2570.41 1458.59 2556.67 1454.33 2548.79 1444.43 cv
2534.6 1426.62 2542.65 1400.6 2564.42 1393.92 cv
2576.52 1390.2 2590.26 1394.45 2598.14 1404.35 cv
.160784 .380392 .509804 rgb
f
2541.9 1420.76 mo
2537.82 1412.6 2540.99 1402.64 2549.1 1398.36 cv
2551.6 1397.05 2554.28 1396.42 2556.93 1396.42 cv
2557.39 1396.42 2557.85 1396.44 2558.3 1396.48 cv
2548.87 1401.6 2543.06 1410.82 2541.9 1420.76 cv
.678431 .882353 .870588 rgb
f
2556.95 1430.05 mo
2550.92 1430.05 2545.08 1426.79 2542.07 1421.08 cv
2542.01 1420.98 2541.96 1420.87 2541.9 1420.76 cv
2543.06 1410.82 2548.87 1401.6 2558.3 1396.48 cv
2563.84 1396.93 2569.03 1400.12 2571.81 1405.4 cv
2576.14 1413.61 2573 1423.78 2564.78 1428.11 cv
2562.28 1429.43 2559.6 1430.05 2556.95 1430.05 cv
.619608 .713725 .768627 rgb
f
2476.53 1095.26 mo
2471.05 1095.26 2465.74 1092.29 2463.01 1087.11 cv
2459.07 1079.65 2461.94 1070.41 2469.39 1066.48 cv
2471.67 1065.28 2474.1 1064.71 2476.5 1064.71 cv
2481.99 1064.71 2487.29 1067.67 2490.02 1072.86 cv
2493.96 1080.32 2491.1 1089.56 2483.64 1093.49 cv
2481.37 1094.69 2478.93 1095.26 2476.53 1095.26 cv
.541176 .72549 .482353 rgb
f
grestore
1934.93 1669.24 mo
373.844 1636.78 li
315.688 1187.21 li
2067.7 1204.83 li
1934.93 1669.24 li
1 .721569 .337255 rgb
f
2067.65 1208.22 mo
2067.65 1208.22 li
955.749 582.941 li
240.106 616.872 li
264.089 1187.21 li
236.834 612.126 li
1906.05 532.984 li
1933.58 648.027 li
2066.84 1204.82 li
2067.23 1206.47 li
2067.65 1208.22 li
level3{
gsave
clp
[1830.82 0 0 1830.82 236.833 870.602 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1830.82 0 0 1830.82 236.833 870.602 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
2067.65 1208.22 mo
2066.73 1208.21 li
315.765 1187.81 li
264.089 1187.21 li
240.106 616.872 li
955.749 582.941 li
2067.65 1208.22 li
level3{
gsave
clp
[1830.82 0 0 1830.82 236.833 870.602 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.956863 .611765 .180392 ]
/C1 [.956863 .611765 .180392 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.956863 .611765 .180392 ]
/C1 [.956863 .545098 .12549 ]
/N 1 
>>
]
/Bounds [.00837989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1830.82 0 0 1830.82 236.833 870.602 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
243 <~S"#n:S"#n:S"#n:S"#n:S"#k8R[T\6R[T\6R[T\6R[KS3R@0J2R@0J2R@0J1R$a8.R$a8.R$a8.R$a5,
Q^=&*Q^=&*Q^=&*Q^3r'QBmi&QBmi&QBmi&Q'IW"Q'IW"Q'IW"Q'IW!Pa%DsPa%DsPa%DsPa%AqPEV2o
PEV2oPEV2oPEM)lP*1ukP*1ukP*1ukOcbcgOcbcgOcbcgOcbcfOH>QcOH>QcOH>QcOH>NaO,o?_O,o?_
O,o?_O,f6\NfK-[NfK-[NfK-[NK&pWNK&pWNK&pWNK&pVN/W^SN/W^SN/W^SN/W[QMi3LOMi3LOMi3LO
~>
<~/M/P+/M/P+/M/P+/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>&.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt
.Olnt.Olnt.Olns.4H\p.4H\p.4H\p.4H\p.4?Sm-n$Jl-n$Jl-n$Jl-n$Jk-RU8h-RU8h-RU8h-RU8h
-RU5f-71&d-71&d-71&d-71&d,pai`,pai`,pai`,pai`,paf^,U=W\,U=W\,U=W\,U=W\,9nEX,9nEX
,9nEX,9nEX,9nBV+sJ3T+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+X%sN+<VdL+<VdL+<VdL+<VdL
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
710.02 1393.7 mo
710.79 1393.7 711.911 1393.76 713.388 1393.89 cv
714.861 1394.02 715.986 1394.08 716.756 1394.08 cv
731.639 1394.08 743.187 1390.33 751.399 1382.82 cv
759.609 1375.32 763.717 1364.76 763.717 1351.16 cv
763.717 1337.56 759.675 1327.27 751.592 1320.27 cv
743.508 1313.28 731.639 1309.78 715.986 1309.78 cv
710.02 1309.78 li
710.02 1393.7 li
cp
652.858 1565.95 mo
652.858 1264.75 li
725.417 1264.75 li
757.107 1264.75 781.069 1271.87 797.302 1286.11 cv
813.532 1300.35 821.648 1321.4 821.648 1349.24 cv
821.648 1368.48 817.415 1384.68 808.946 1397.83 cv
800.478 1410.99 788.416 1420.13 772.763 1425.26 cv
827.038 1565.95 li
766.412 1565.95 li
715.601 1424.11 li
710.02 1424.11 li
710.02 1565.95 li
652.858 1565.95 li
cp
1 1 1 rgb
f
927.194 1413.71 mo
927.194 1454.9 929.341 1483.29 933.641 1498.88 cv
937.938 1514.47 945.285 1522.26 955.678 1522.26 cv
966.198 1522.26 973.607 1514.47 977.908 1498.88 cv
982.205 1483.29 984.355 1454.9 984.355 1413.71 cv
984.355 1373.17 982.172 1344.91 977.812 1328.93 cv
973.448 1312.96 966.071 1304.97 955.678 1304.97 cv
945.156 1304.97 937.779 1312.7 933.545 1328.16 cv
929.311 1343.63 927.194 1372.14 927.194 1413.71 cv
cp
1044.79 1421.22 mo
1044.79 1471.77 1037.38 1509.53 1022.56 1534.48 cv
1007.74 1559.44 985.444 1571.92 955.678 1571.92 cv
925.396 1571.92 903.04 1559.18 888.605 1533.71 cv
874.17 1508.25 866.953 1468.82 866.953 1415.45 cv
866.953 1361.94 874.17 1322.49 888.605 1297.08 cv
903.04 1271.67 925.396 1258.97 955.678 1258.97 cv
986.599 1258.97 1009.18 1271.87 1023.43 1297.66 cv
1037.67 1323.45 1044.79 1364.63 1044.79 1421.22 cv
cp
f
1154.38 1518.99 mo
1155.15 1518.99 1156.3 1519.06 1157.84 1519.18 cv
1159.38 1519.31 1160.47 1519.38 1161.11 1519.38 cv
1176.89 1519.38 1189.05 1515.53 1197.58 1507.83 cv
1206.12 1500.13 1210.38 1489.16 1210.38 1474.92 cv
1210.38 1459.65 1206.15 1448.07 1197.68 1440.18 cv
1189.21 1432.29 1176.76 1428.34 1160.34 1428.34 cv
1154.38 1428.34 li
1154.38 1518.99 li
cp
1154.38 1383.3 mo
1155.79 1383.56 1157.17 1383.72 1158.51 1383.78 cv
1159.86 1383.85 1161.62 1383.88 1163.81 1383.88 cv
1176.89 1383.88 1187.06 1380.61 1194.31 1374.07 cv
1201.56 1367.52 1205.19 1358.28 1205.19 1346.35 cv
1205.19 1334.29 1201.4 1324.99 1193.83 1318.44 cv
1186.26 1311.9 1175.48 1308.63 1161.5 1308.63 cv
1160.73 1308.63 1159.54 1308.69 1157.94 1308.82 cv
1156.33 1308.95 1155.15 1309.01 1154.38 1309.01 cv
1154.38 1383.3 li
cp
1097.98 1565.95 mo
1097.98 1264.75 li
1173.24 1264.75 li
1202.75 1264.75 1225.17 1270.97 1240.5 1283.42 cv
1255.83 1295.86 1263.5 1313.95 1263.5 1337.69 cv
1263.5 1354.88 1258.95 1369 1249.84 1380.03 cv
1240.73 1391.07 1227.7 1398.38 1210.77 1401.97 cv
1229.88 1407.11 1244.32 1416.12 1254.07 1429.01 cv
1263.82 1441.91 1268.7 1458.49 1268.7 1478.77 cv
1268.7 1505.45 1260.29 1526.66 1243.49 1542.37 cv
1226.68 1558.09 1203.77 1565.95 1174.78 1565.95 cv
1097.98 1565.95 li
cp
f
1374.63 1413.71 mo
1374.63 1454.9 1376.78 1483.29 1381.08 1498.88 cv
1385.37 1514.47 1392.72 1522.26 1403.11 1522.26 cv
1413.63 1522.26 1421.04 1514.47 1425.34 1498.88 cv
1429.64 1483.29 1431.79 1454.9 1431.79 1413.71 cv
1431.79 1373.17 1429.61 1344.91 1425.25 1328.93 cv
1420.88 1312.96 1413.51 1304.97 1403.11 1304.97 cv
1392.59 1304.97 1385.21 1312.7 1380.98 1328.16 cv
1376.75 1343.63 1374.63 1372.14 1374.63 1413.71 cv
cp
1492.23 1421.22 mo
1492.23 1471.77 1484.81 1509.53 1470 1534.48 cv
1455.18 1559.44 1432.88 1571.92 1403.11 1571.92 cv
1372.83 1571.92 1350.48 1559.18 1336.04 1533.71 cv
1321.61 1508.25 1314.39 1468.82 1314.39 1415.45 cv
1314.39 1361.94 1321.61 1322.49 1336.04 1297.08 cv
1350.48 1271.67 1372.83 1258.97 1403.11 1258.97 cv
1434.03 1258.97 1456.62 1271.87 1470.86 1297.66 cv
1485.1 1323.45 1492.23 1364.63 1492.23 1421.22 cv
cp
f
1570.63 1565.95 mo
1570.63 1315.17 li
1524.63 1315.17 li
1524.63 1264.75 li
1675.53 1264.75 li
1675.53 1315.17 li
1628.95 1315.17 li
1628.95 1565.95 li
1570.63 1565.95 li
cp
f
597.792 1114.42 mo
554.017 1114.42 li
554.536 1110.53 554.798 1106.33 554.798 1101.83 cv
554.798 962.496 li
523.531 1114.42 li
494.608 1114.42 li
463.731 959.35 li
463.731 1101.83 li
463.731 1106.33 463.988 1110.53 464.513 1114.42 cv
420.739 1114.42 li
420.995 1110.22 421.129 1106.03 421.129 1101.83 cv
421.129 790.798 li
480.538 790.798 li
509.069 1006.54 li
537.992 790.798 li
597.01 790.798 li
597.01 1101.83 li
597.01 1106.03 597.266 1110.22 597.792 1114.42 cv
cp
f
725.989 1000.7 mo
709.573 915.302 li
692.767 1000.7 li
725.989 1000.7 li
cp
802.985 1113.52 mo
743.967 1113.52 li
743.705 1109.63 743.051 1104.68 742.013 1098.69 cv
734.587 1055.54 li
684.559 1055.54 li
676.742 1098.69 li
675.698 1104.68 675.044 1109.63 674.788 1113.52 cv
615.771 1113.52 li
682.214 789 li
736.542 789 li
802.985 1113.52 li
cp
f
989.418 1011.49 mo
988.111 1085.81 961.277 1122.96 908.904 1122.96 cv
873.203 1122.96 849.233 1105.13 836.988 1069.47 cv
828.909 1046.4 824.872 1007.44 824.872 952.608 cv
824.872 901.67 829.69 863.016 839.333 836.644 cv
852.878 799.19 876.329 780.46 909.686 780.46 cv
935.738 780.46 955.671 790.349 969.485 810.126 cv
981.729 827.507 988.245 851.927 989.027 883.389 cv
930.4 883.389 li
930.4 872.152 li
930.4 863.465 929.093 855.824 926.492 849.229 cv
922.84 840.542 917.63 836.195 910.858 836.195 cv
894.699 836.195 886.625 875.299 886.625 953.507 cv
886.625 998.454 887.145 1025.58 888.189 1034.86 cv
890.534 1054.64 897.826 1064.53 910.076 1064.53 cv
916.849 1064.53 922.449 1058.23 926.883 1045.65 cv
930.266 1035.47 931.964 1025.87 931.964 1016.88 cv
931.964 1011.49 li
989.418 1011.49 li
cp
f
1195.39 1113.97 mo
1137.16 1113.97 li
1137.41 1110.08 1137.55 1105.73 1137.55 1100.93 cv
1137.55 972.834 li
1080.48 972.834 li
1080.48 1100.48 li
1080.48 1105.28 1080.61 1109.78 1080.88 1113.97 cv
1023.03 1113.97 li
1023.29 1110.08 1023.42 1105.73 1023.42 1100.93 cv
1023.42 802.934 li
1023.42 798.741 1023.29 794.696 1023.03 790.798 cv
1080.88 790.798 li
1080.61 794.998 1080.48 799.043 1080.48 802.934 cv
1080.48 919.347 li
1137.55 919.347 li
1137.55 803.383 li
1137.55 799.493 1137.29 795.293 1136.77 790.798 cv
1195.39 790.798 li
1195.13 794.696 1195 798.889 1195 803.383 cv
1195 1100.93 li
1195 1105.73 1195.13 1110.08 1195.39 1113.97 cv
cp
f
1340.79 1113.97 mo
1280.6 1113.97 li
1281.12 1110.08 1281.38 1106.03 1281.38 1101.83 cv
1281.38 803.383 li
1281.38 798.889 1281.12 794.696 1280.6 790.798 cv
1340.79 790.798 li
1340.26 794.696 1340.01 798.889 1340.01 803.383 cv
1340.01 1101.83 li
1340.01 1105.73 1340.26 1109.78 1340.79 1113.97 cv
cp
f
1590.93 790.798 mo
1590.4 795.293 1590.15 799.788 1590.15 804.282 cv
1590.15 1114.42 li
1540.51 1114.42 li
1483.06 949.012 li
1483.06 1101.83 li
1483.06 1106.33 1483.18 1110.53 1483.45 1114.42 cv
1429.9 1114.42 li
1430.42 1110.22 1430.68 1106.03 1430.68 1101.83 cv
1430.68 790.798 li
1483.06 790.798 li
1537.77 956.204 li
1537.77 803.383 li
1537.77 799.493 1537.51 795.293 1536.99 790.798 cv
1590.93 790.798 li
cp
f
1787.52 1113.97 mo
1627.67 1113.97 li
1628.19 1108.88 1628.45 1104.38 1628.45 1100.48 cv
1628.45 799.788 li
1628.45 795.595 1628.31 791.402 1628.06 787.202 cv
1786.74 787.202 li
1786.74 842.487 li
1781.01 841.588 1775.66 841.139 1770.72 841.139 cv
1683.95 841.139 li
1683.95 917.1 li
1776.97 917.1 li
1776.97 973.284 li
1683.95 973.284 li
1683.95 1059.58 li
1769.54 1059.58 li
1774.23 1059.58 1780.23 1059.29 1787.52 1058.68 cv
1787.52 1113.97 li
cp
f
481.187 624.763 mo
477.794 618.115 474.14 590.627 490.466 575.373 cv
507.414 559.532 536.759 563.93 577.696 588.474 cv
618.809 613.115 658.671 616.777 687.07 598.516 cv
706.742 585.867 717.355 563.727 714.766 540.735 cv
708.62 486.124 642.238 442.749 641.57 442.317 cv
653.46 423.868 li
656.554 425.861 729.276 473.43 736.578 538.278 cv
740.105 569.626 725.685 599.78 698.941 616.978 cv
663.264 639.918 614.962 636.397 566.414 607.297 cv
524.636 582.263 510.272 587.489 506.041 590.896 cv
498.819 596.719 499.886 612.082 500.997 615.371 cv
500.917 615.129 500.814 614.938 500.736 614.781 cv
481.187 624.763 li
cp
.0588235 .156863 .317647 rgb
f
620.372 393.187 mo
603.424 405.693 598.203 427.374 608.71 441.609 cv
619.215 455.843 641.472 457.245 658.418 444.739 cv
675.368 432.228 680.586 410.548 670.081 396.315 cv
659.575 382.079 637.321 380.677 620.372 393.187 cv
.32549 .737255 .721569 rgb
f
616.197 389.005 mo
599.249 401.512 594.029 423.193 604.536 437.429 cv
615.041 451.663 637.297 453.064 654.243 440.558 cv
671.193 428.048 676.412 406.369 665.906 392.135 cv
655.4 377.899 633.146 376.496 616.197 389.005 cv
.219608 .568627 .545098 rgb
f
659.07 353.933 mo
655.657 349.309 li
693.599 323.794 li
694.635 325.198 li
659.07 353.933 li
.356863 .329412 .447059 rgb
f
674.493 336.641 mo
677.702 338.879 li
678.665 338.103 li
675.55 335.931 li
674.493 336.641 li
cp
.737255 .721569 .847059 rgb
f
663.479 344.048 mo
665.994 348.338 li
666.929 347.585 li
664.466 343.386 li
663.479 344.048 li
cp
f
670.589 339.268 mo
673.529 342.251 li
674.456 341.502 li
671.592 338.593 li
670.589 339.268 li
cp
f
687.609 327.82 mo
688.319 330.301 li
689.322 329.491 li
688.646 327.125 li
687.609 327.82 li
cp
f
682.669 331.143 mo
683.985 333.804 li
684.929 333.041 li
683.666 330.474 li
682.669 331.143 li
cp
f
678.976 333.628 mo
681.484 335.823 li
682.421 335.066 li
679.996 332.942 li
678.976 333.628 li
cp
f
659.731 377.845 mo
633.003 341.629 li
640.113 336.381 650.132 337.892 655.381 345.004 cv
663.103 355.466 li
668.352 362.578 666.842 372.597 659.731 377.845 cv
cp
.0117647 .337255 .435294 rgb
f
702.535 327.68 mo
699.177 330.159 694.443 329.446 691.964 326.087 cv
689.486 322.728 690.198 317.994 693.557 315.515 cv
696.916 313.036 701.65 313.75 704.129 317.109 cv
706.608 320.467 705.894 325.201 702.535 327.68 cv
.509804 .466667 .717647 rgb
f
631.29 502.082 mo
631.298 502.081 631.306 502.081 631.313 502.08 cv
631.305 502.081 631.299 502.081 631.29 502.082 cv
631.461 502.072 mo
631.474 502.072 631.484 502.071 631.497 502.07 cv
631.489 502.071 631.47 502.072 631.461 502.072 cv
631.642 502.062 mo
631.653 502.062 631.665 502.061 631.676 502.061 cv
631.667 502.061 631.651 502.062 631.642 502.062 cv
631.993 502.042 mo
604.993 492.321 579.17 473.152 559.744 444.632 cv
528.827 397.581 524.135 346.264 541.468 309.368 cv
562.514 327.909 li
545.114 355.321 545.152 391.577 565.385 418.991 cv
581.063 440.234 605.387 451.455 630.115 451.455 cv
634.264 451.455 638.423 451.139 642.556 450.502 cv
660.02 496.52 li
651.104 499.631 641.681 501.469 631.993 502.042 cv
662.713 495.536 mo
645.434 450.007 li
657.071 447.781 668.415 442.981 678.588 435.473 cv
696.061 422.577 706.925 404.027 710.483 384.267 cv
740.414 380.517 li
740.595 379.532 740.765 378.545 740.93 377.56 cv
710.96 381.314 li
713.836 361.161 709.159 339.99 696.206 322.44 cv
684.113 306.054 666.869 295.633 648.268 291.721 cv
654.154 254.428 li
654.952 254.42 655.749 254.416 656.546 254.416 cv
660.118 254.416 663.673 254.494 667.21 254.65 cv
695.007 262.155 717.716 274.96 729.096 291.654 cv
754.385 330.176 746.502 409.542 702.206 466.7 cv
691.519 480.118 677.921 489.721 662.713 495.535 cv
630.11 445.721 mo
607.14 445.721 584.556 435.306 570.001 415.585 cv
545.526 382.424 552.891 335.32 586.412 310.58 cv
600 300.552 615.832 295.714 631.486 295.714 cv
654.451 295.714 677.035 306.128 691.589 325.847 cv
716.063 359.008 708.702 406.116 675.181 430.856 cv
661.595 440.882 645.762 445.721 630.11 445.721 cv
631.406 304.611 mo
617.624 304.611 603.675 308.882 591.689 317.729 cv
562.116 339.554 555.653 380.971 577.25 410.234 cv
590.094 427.638 609.966 436.823 630.187 436.823 cv
643.969 436.823 657.917 432.553 669.904 423.706 cv
699.475 401.88 705.939 360.464 684.339 331.198 cv
671.496 313.796 651.627 304.611 631.406 304.611 cv
511.347 437.336 mo
511.277 437.229 511.206 437.121 511.136 437.014 cv
511.206 437.121 511.277 437.229 511.347 437.336 cv
510.687 436.324 mo
510.615 436.213 510.545 436.106 510.474 435.995 cv
510.545 436.106 510.615 436.213 510.687 436.324 cv
564.108 325.494 mo
542.774 306.698 li
553.565 285.483 571.892 269.381 596.909 262.158 cv
614.451 257.347 632.958 254.874 651.239 254.474 cv
645.446 291.182 li
640.842 290.383 636.164 289.979 631.475 289.979 cv
614.637 289.979 597.615 295.18 583.005 305.964 cv
575.452 311.537 569.137 318.166 564.108 325.494 cv
636.592 248.798 mo
636.587 248.798 636.584 248.797 636.58 248.797 cv
636.584 248.797 636.587 248.798 636.592 248.798 cv
635.128 248.629 mo
635.116 248.627 635.105 248.626 635.093 248.625 cv
635.106 248.626 635.115 248.627 635.128 248.629 cv
634.233 248.529 mo
634.221 248.528 634.207 248.527 634.195 248.525 cv
634.208 248.527 634.22 248.528 634.233 248.529 cv
633.332 248.433 mo
633.322 248.432 633.31 248.431 633.301 248.43 cv
633.309 248.431 633.323 248.432 633.332 248.433 cv
631.843 248.282 mo
631.836 248.281 631.829 248.28 631.822 248.28 cv
631.826 248.28 631.839 248.281 631.843 248.282 cv
630.952 248.196 mo
630.938 248.194 630.925 248.193 630.911 248.192 cv
630.924 248.193 630.939 248.194 630.952 248.196 cv
level3{
gsave
clp
[-23.1884 -256.024 -256.024 23.1884 627.172 502.532 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-23.1884 -256.024 -256.024 23.1884 627.172 502.532 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
570.001 415.585 mo
545.526 382.424 552.891 335.32 586.412 310.58 cv
619.934 285.84 667.115 292.687 691.589 325.847 cv
716.063 359.008 708.702 406.116 675.181 430.856 cv
641.659 455.597 594.474 448.745 570.001 415.585 cv
662.713 495.536 mo
645.434 450.007 li
657.071 447.781 668.415 442.981 678.588 435.473 cv
696.061 422.577 706.925 404.027 710.483 384.267 cv
740.414 380.517 li
740.595 379.532 740.765 378.545 740.93 377.56 cv
710.96 381.314 li
713.836 361.161 709.159 339.99 696.206 322.44 cv
684.113 306.054 666.869 295.633 648.268 291.721 cv
654.588 251.678 li
653.652 251.491 652.71 251.305 651.768 251.126 cv
645.446 291.182 li
624.308 287.515 601.684 292.177 583.005 305.964 cv
575.452 311.537 569.137 318.166 564.108 325.494 cv
509.848 277.689 li
509.18 278.374 508.524 279.069 507.882 279.777 cv
562.514 327.909 li
545.114 355.321 545.152 391.577 565.385 418.991 cv
583.693 443.799 613.789 454.937 642.556 450.502 cv
660.02 496.522 li
660.922 496.205 661.82 495.876 662.713 495.536 cv
.980392 .576471 .141176 rgb
f
625.375 502.237 mo
584.786 502.236 540.737 480.491 511.347 437.336 cv
511.347 437.336 li
511.347 437.336 li
540.741 480.493 584.787 502.237 625.376 502.237 cv
627.355 502.237 629.329 502.185 631.29 502.082 cv
629.328 502.185 627.355 502.237 625.375 502.237 cv
631.313 502.08 mo
631.365 502.078 631.41 502.075 631.461 502.072 cv
631.412 502.075 631.363 502.078 631.313 502.08 cv
631.497 502.07 mo
631.548 502.068 631.591 502.065 631.642 502.062 cv
631.593 502.065 631.546 502.068 631.497 502.07 cv
631.676 502.061 mo
631.782 502.055 631.887 502.049 631.993 502.042 cv
631.993 502.042 631.993 502.042 631.993 502.042 cv
631.887 502.049 631.782 502.055 631.676 502.061 cv
511.136 437.014 mo
510.985 436.783 510.837 436.556 510.687 436.324 cv
510.837 436.556 510.985 436.783 511.136 437.014 cv
510.474 435.995 mo
462.104 361.051 479.942 275.77 547.11 255.28 cv
532.194 259.83 519.714 267.572 509.848 277.689 cv
509.848 277.689 li
509.382 278.167 508.922 278.65 508.468 279.138 cv
475.224 314.87 473.352 378.479 510.474 435.995 cv
548.513 254.863 mo
567.756 249.584 588.148 247.122 608.143 247.122 cv
615.82 247.122 623.441 247.485 630.911 248.192 cv
623.44 247.485 615.82 247.122 608.143 247.122 cv
588.152 247.122 567.752 249.586 548.513 254.863 cv
667.215 254.65 mo
667.214 254.65 667.211 254.65 667.21 254.65 cv
657.533 252.037 647.238 250.067 636.592 248.798 cv
647.239 250.067 657.537 252.037 667.215 254.65 cv
636.58 248.797 mo
636.094 248.739 635.615 248.684 635.128 248.629 cv
635.613 248.683 636.097 248.739 636.58 248.797 cv
635.093 248.625 mo
634.807 248.592 634.519 248.561 634.233 248.529 cv
634.518 248.561 634.807 248.593 635.093 248.625 cv
634.195 248.525 mo
633.909 248.494 633.619 248.463 633.332 248.433 cv
633.621 248.463 633.907 248.494 634.195 248.525 cv
633.301 248.43 mo
632.812 248.379 632.333 248.33 631.843 248.282 cv
632.33 248.33 632.815 248.379 633.301 248.43 cv
631.822 248.28 mo
631.53 248.251 631.245 248.223 630.952 248.196 cv
631.242 248.223 631.533 248.251 631.822 248.28 cv
level3{
gsave
clp
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&
I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<R
P#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh:jeF&I$.<RP#-Oh
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~:jeF'I$.BUP#Hdl<.0p0I?IWZP#m'p=FH?8IZdl`P$<Bt>^hf@IZ[rcO^ER"?[n2GJ!",gO^Wa%@XsSN
J<=AmO_''*Aq6"VJ<=MqO_KB/C4VL_JWXc#O_o]4DM!sgJrjr'OE#l6Ee9BoK912-OEH2;G(Ym#KTLG3
OElM@HA%B,KTLP6OF2_CI"dZ1Kogb;OFN"HJ;0/:L6$q@O+W1JKSGPAL6%(EO,&LOLkh%JLQ@=KO,JgT
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~MhmFRLl[RPO-#0YP)56aM3!pZO-YZbR#6uoMNF<bOI_;kT8Sf)N0'cmOJIhsVMpV8N0(#uOK4A'XcAOI
NfgQ+Og:"0Z]:0UO--l3OgpL8\r`&eOHI5<Oh[!?_3'nuOcmYGP/`ZJaHD_/P*4"OP0K2RcBFF<P`jFY
P1,YYeWc6KP`sabPM2:cgm4/\QBU3lPMqgkj-GnjQ]pQuPN\Btl'R\#R$6m(PO=g%n<oL2R?R62PP(B.
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~opV*;RZmE5PP(B.opV*;RZmE5PP(B.opV*;RZmE5PP(B.opV*;RZmE5PP(B.opV*;RZmE5PP(B.opV*;
RZmE5PP(B.opV*;RZmE5PP(B.opV*;RZmE5PP(B.opV*;RZmE5PP(B.opV*;RZmE5PP(B.opV*;RZmE5
PP(B.opV*;RZmE5PP(B.opV*;RZmE5PP(B.opV*;RZmE5PP(B.opV*;RZmE5PP(B.opV*;RZmE5PP(B.
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.218947 .403598 .839551 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2743.35 3429.18 -3429.18 -2743.35 2953.99 -379.983 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:Jk"g<E<1(
>$G9=?=.)K@q9.`BPD6uD/XB5F*)PKG^4U^H[U?mJV&N.L51VCMi<XUO-#KePE_>tQC!u,R[Tb;StD[L
Tq\?ZVPgAkWN3,&Y-5%5Z*L^C[C*HP\@T;b]Y2%o^r"",`5Ta:ai_cLbg"DXd*U1ge'uq!f@\d1gYCWA
hr*JQj5f=akNM-olKdd'mdKZ8o()DEo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
~>
<~H[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[L3gI!g<i
I=6NlIXZ`qIt)rtJ:N3%JUrB'JqAT,K7ef/KS5&5KnY58L5(J=LPLY?LPUbBLl$tFM2@(GM2@+IMMmCN
Mi3LOMi3OQN/`gVNK&pWNK&sYNfK0]O,o?_O,o?`OH>TeOcbcgOcbchP*1ulPEV2oPEV2oPa%DtQ'IW"
Q'IW"QBmi'Q^=&*Q^=&*R$a8.R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
~>
<~OcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcg
OcYZdOH>QcOH>QcOH>QcOH5H`O,o?_O,o?_O,o?_NfK-[NfK-[NfK-[NfK-[NfK0]O,o?_O,o?_O,o?_
O,o?_O,o?_OH>QcOH>QcOH>QcOH>QcOH>QcOH>QdOcbcgOcbcgOcbcgOcbcgOcbcgOcbfiP*1ukP*1uk
P*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1uk
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
625.376 502.237 mo
584.787 502.237 540.741 480.493 511.347 437.336 cv
511.347 437.336 li
511.277 437.229 511.206 437.121 511.136 437.014 cv
510.985 436.783 510.837 436.556 510.687 436.324 cv
510.615 436.213 510.545 436.106 510.474 435.995 cv
473.352 378.479 475.224 314.87 508.468 279.138 cv
508.271 279.35 508.076 279.563 507.882 279.777 cv
541.468 309.368 li
524.135 346.264 528.827 397.581 559.744 444.632 cv
579.17 473.152 604.993 492.321 631.993 502.042 cv
631.887 502.049 631.782 502.055 631.676 502.061 cv
631.665 502.061 631.653 502.062 631.642 502.062 cv
631.591 502.065 631.548 502.068 631.497 502.07 cv
631.484 502.071 631.474 502.072 631.461 502.072 cv
631.41 502.075 631.365 502.078 631.313 502.08 cv
631.306 502.081 631.298 502.081 631.29 502.082 cv
629.329 502.185 627.355 502.237 625.376 502.237 cv
542.774 306.698 mo
509.848 277.689 li
519.714 267.572 532.194 259.83 547.11 255.28 cv
547.575 255.138 548.043 254.999 548.513 254.863 cv
548.513 254.863 li
567.752 249.586 588.152 247.122 608.143 247.122 cv
615.82 247.122 623.44 247.485 630.911 248.192 cv
630.925 248.193 630.938 248.194 630.952 248.196 cv
631.245 248.223 631.53 248.251 631.822 248.28 cv
631.829 248.28 631.836 248.281 631.843 248.282 cv
632.333 248.33 632.812 248.379 633.301 248.43 cv
633.31 248.431 633.322 248.432 633.332 248.433 cv
633.619 248.463 633.909 248.494 634.195 248.525 cv
634.207 248.527 634.221 248.528 634.233 248.529 cv
634.519 248.561 634.807 248.592 635.093 248.625 cv
635.105 248.626 635.116 248.627 635.128 248.629 cv
635.615 248.684 636.094 248.739 636.58 248.797 cv
636.584 248.797 636.587 248.798 636.592 248.798 cv
647.238 250.067 657.533 252.037 667.21 254.65 cv
663.673 254.494 660.118 254.416 656.546 254.416 cv
655.749 254.416 654.952 254.42 654.154 254.428 cv
654.588 251.678 li
653.652 251.491 652.71 251.305 651.768 251.126 cv
651.239 254.474 li
632.958 254.874 614.451 257.347 596.909 262.158 cv
571.892 269.381 553.565 285.483 542.774 306.698 cv
level3{
gsave
clp
[-23.1884 -256.024 -256.024 23.1884 627.172 502.532 ]ct
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~V[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB
$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P
*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/aV[FKB$QQ&P*2a/a
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~V[FKC%32>V)laAeWt-/N&0%_`)QaVjXqM_W'H++j)6jqpZ5=Ib(`BXu)71;"[2^$l*#Q.+(q1S(\0)Tu
+W%^6(V:n-]He9+,o43A(;D43^aKr6.2B]L'uMO:_^lP@/JZ5W'ZMd?a"S4K0b_Ya'?W*Eb;9mV2%n.l
'$W?Jc8ZE]3>'S!&^WTOd6/)i4V?.-&_'#VeNjbt5nMX8&D0A]fgQG)7M"3B%bjMagdhq28e0]M%Gshg
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00837989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-23.1884 -256.024 -256.024 23.1884 627.172 502.532 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~VP^5gVl-GkW2QYoWMuksWiE)"X/i;&XK8M)XK8M*Xf\_.Y-+q2YHP.6Yct@:Z*CR=Z*CR>ZEgdBZa7!F
['[3J[C*EN[^NWQ[^NWR\$riV\@B&Z\[f8^]"5Jb]=Y\f]Y(nj]tM+n^:q=r^V@P!^qdb%_83t(_SX1,
_SX1,_o'C0`5KU4`Pog8`l?$<a2c6@aN2HDaiVZHb0%lLbKJ)Pbfn;Tbfn;Tc-=MXc-=MXcHa_\cd0q`
d*U.ddF$@hdaHRle'ldpeC<!te^`4#f%/F'f@SX+f\"j/f\"j/g"G'3g=k97gY:K;gt^]?h;-oChVR,G
~>
<~$47+J$OdFP$k*OR%1NaV%LrsZ%hB0^&.fBb&J5Tf&eYfj',)#n'GV>t'bqH!()Ic'(Ddl)(`=2/)&X;1
)B0V7)]K_9*$$%@*Zc@E+!2RI+<VdM+X&!Q+sJ3U,9nEY,U=W],paia-71&e-RU8i-n$Jm.4H\p.Olnt
.k<,#/1`>'/M/P+/hSb/0/"t30JG170ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ilW3B9,]3]];_
4$,Pe4?P_g4Zttm5!D.o5<hCu5X7S"5s[h(6UO4.6psF277BX677BX67Rfm<7n6'>84Z<D8P)KF8kM`L
~>
<~)]K_8)]K_8)]K_7)B'M4)B'M4)B'M4)B'M3)&X;0)&X;0)&X;/(`4),(`4),(`4),(`4),(`4),(`4),
(`4)+(Ddl((Ddl((Ddl((Ddl'()@Z$()@Z$()@Z#'bqGu'bqGu'bqGu'bqGt'GM5q'GM5q'GM5q'GM5q
'GM5q'GM5q'GM5q',)#m',)#m',)#m&eYfi&eYfi&eYfi&eYfi&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa
&.fBa&.fBa&.fBa&.fBa%hB0]%hB0]%hB0]%hB0]%LrsY%LrsY%LrsY%1NaU%1NaU%1NaU%1NaU$k*OQ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
541.468 309.368 mo
507.882 279.777 li
508.076 279.563 508.271 279.35 508.468 279.138 cv
508.922 278.65 509.382 278.167 509.848 277.689 cv
509.848 277.689 li
542.774 306.698 li
542.325 307.58 541.891 308.468 541.468 309.368 cv
651.239 254.474 mo
651.768 251.126 li
652.71 251.305 653.652 251.491 654.588 251.678 cv
654.154 254.428 li
653.183 254.437 652.212 254.453 651.239 254.474 cv
.945098 .380392 .113725 rgb
f
549.554 317.657 mo
534.051 329.099 513.697 327.815 504.087 314.795 cv
494.478 301.775 499.251 281.946 514.754 270.504 cv
530.254 259.065 550.611 260.347 560.22 273.367 cv
569.83 286.387 565.055 306.217 549.554 317.657 cv
cp
.32549 .737255 .721569 rgb
f
545.273 311.857 mo
529.771 323.299 509.416 322.016 499.807 308.995 cv
490.196 295.974 494.971 276.146 510.474 264.705 cv
525.974 253.265 546.329 254.545 555.94 267.567 cv
565.549 280.587 560.774 300.417 545.273 311.857 cv
cp
.219608 .568627 .545098 rgb
f
577.25 410.234 mo
555.653 380.971 562.116 339.554 591.689 317.729 cv
621.26 295.903 662.742 301.934 684.339 331.198 cv
705.939 360.464 699.475 401.88 669.904 423.706 cv
640.331 445.531 598.85 439.5 577.25 410.234 cv
.0392157 .117647 .239216 rgb
f
583.441 405.665 mo
564.342 379.786 570.054 343.157 596.208 323.853 cv
622.363 304.551 659.05 309.888 678.149 335.766 cv
697.251 361.648 691.535 398.275 665.381 417.579 cv
639.227 436.882 602.543 431.546 583.441 405.665 cv
.160784 .380392 .509804 rgb
f
595.313 396.903 mo
581.001 377.511 585.285 350.067 604.88 335.604 cv
624.478 321.14 651.967 325.137 666.278 344.529 cv
680.592 363.922 676.309 391.368 656.711 405.832 cv
637.115 420.294 609.626 416.297 595.313 396.903 cv
.298039 .776471 .745098 rgb
f
639.541 424.175 mo
632.449 424.175 625.479 420.954 620.975 414.85 cv
620.591 414.33 620.233 413.8 619.9 413.26 cv
623.328 414.099 626.852 414.524 630.393 414.524 cv
639.526 414.524 648.768 411.694 656.711 405.832 cv
659.025 404.125 661.126 402.235 663.007 400.201 cv
663.177 407.531 659.863 414.857 653.471 419.575 cv
649.267 422.677 644.375 424.175 639.541 424.175 cv
.639216 .733333 .788235 rgb
f
630.393 414.524 mo
626.852 414.524 623.328 414.099 619.9 413.26 cv
613.651 403.134 616.193 389.671 626.04 382.405 cv
630.244 379.302 635.136 377.804 639.97 377.804 cv
647.063 377.804 654.032 381.025 658.536 387.129 cv
661.444 391.068 662.901 395.635 663.007 400.201 cv
661.126 402.235 659.025 404.125 656.711 405.832 cv
648.768 411.694 639.526 414.524 630.393 414.524 cv
.698039 .901961 .890196 rgb
f
435.821 225.324 mo
424.112 221.036 412.961 219.041 402.401 219.361 cv
382.772 219.955 365.76 228.461 351.833 244.647 cv
330.311 269.664 325.037 307.688 338.397 341.519 cv
347.727 365.149 364.706 379.881 381.125 394.129 cv
395.575 406.667 409.224 418.511 416.133 435.603 cv
421.422 448.684 423.181 469.197 416.019 481.448 cv
412.784 486.986 408.161 489.969 401.474 490.836 cv
394.871 491.689 390.211 497.734 391.066 504.338 cv
391.916 510.942 397.964 515.604 404.568 514.745 cv
418.666 512.921 429.822 505.616 436.835 493.616 cv
448.518 473.631 445.877 444.851 438.485 426.564 cv
429.404 404.096 412.895 389.773 396.927 375.919 cv
382.043 363.004 367.986 350.808 360.824 332.667 cv
350.867 307.453 354.601 278.401 370.111 260.374 cv
379.571 249.378 390.369 243.847 403.13 243.461 cv
429.879 242.653 465.18 263.991 505.191 305.179 cv
509.83 309.951 517.458 310.062 522.237 305.425 cv
527.014 300.786 527.125 293.154 522.483 288.377 cv
491.042 256.013 462.031 234.922 435.821 225.324 cv
cp
.0588235 .156863 .317647 rgb
f
422.073 525.039 mo
422.073 525.039 426.532 553.443 416.224 565.159 cv
405.913 576.873 368.304 570.331 368.304 570.331 cv
368.304 570.331 389.961 550.147 390.895 542.886 cv
391.584 537.492 385.272 516.208 385.272 516.208 cv
385.272 516.208 360.217 499.138 346.354 497.359 cv
332.489 495.585 324.344 506.871 324.344 506.871 cv
324.344 506.871 314.035 477.361 329.148 469.434 cv
344.257 461.506 376.127 471.231 376.127 471.231 cv
376.127 471.231 365.656 451.217 354.813 453.35 cv
354.813 453.35 381.994 439.221 399.146 456.567 cv
416.297 473.917 418.59 489.011 418.59 489.011 cv
418.59 489.011 436.01 490.54 448.328 501.629 cv
460.643 512.723 447.49 546.621 447.49 546.621 cv
447.49 546.621 432.125 526.331 422.073 525.039 cv
cp
f
391.017 573.671 mo
383.303 573.46 375.692 572.273 368.304 570.331 cv
413.408 572.834 423.559 569.172 422.073 525.039 cv
423.843 532.469 424.646 540.188 424.071 547.951 cv
422.956 565.604 415.033 574.599 391.017 573.671 cv
cp
.160784 .380392 .509804 rgb
f
422.073 525.039 mo
430.236 525.935 441.83 538.109 447.088 544.424 cv
451.407 531.195 456.265 509.296 445.051 501.226 cv
432.456 491.661 417.335 490.934 416.949 490.809 cv
416.707 490.079 415.898 482.177 408.294 470.611 cv
396.1 452.478 383.321 443.692 359.006 452.694 cv
366.334 454.807 372.761 464.408 376.127 471.231 cv
362.023 448.085 353.928 455.151 346.999 456.123 cv
351.507 454.182 361.327 447.511 375.366 446.611 cv
388.938 445.541 397.202 451.252 404.65 459.924 cv
411.118 467.096 417.706 477.46 420.192 487.244 cv
431.196 488.903 451.322 496.839 453.724 507.032 cv
458.354 520.805 450.868 539.334 447.799 548.815 cv
447.799 548.815 431.24 526.808 422.073 525.039 cv
cp
f
324.344 506.871 mo
321.402 500.072 319.386 492.72 319.445 485.019 cv
319.849 458.322 353.455 462.036 376.127 471.231 cv
323.592 461.782 317.455 473.497 324.344 506.871 cv
cp
f
416.452 513.235 mo
419.523 509.88 416.184 501.832 408.998 495.265 cv
401.814 488.698 393.499 486.093 390.431 489.451 cv
387.362 492.809 390.698 500.854 397.884 507.422 cv
405.069 513.989 413.383 516.593 416.452 513.235 cv
cp
f
471.917 588.09 mo
471.917 588.09 443.354 578.764 429.556 587.452 cv
415.755 596.14 416.248 636.026 416.248 636.026 cv
416.248 636.026 440.674 617.04 448.32 617.287 cv
454.001 617.471 474.907 627.526 474.907 627.526 cv
474.907 627.526 488.348 656.214 487.876 670.812 cv
487.404 685.412 474.405 691.934 474.405 691.934 cv
474.405 691.934 503.133 707.477 513.824 693.207 cv
524.515 678.939 519.785 644.441 519.785 644.441 cv
519.785 644.441 538.691 658.572 534.688 669.403 cv
534.688 669.403 553.786 643.714 538.74 623.133 cv
523.696 602.552 508.508 597.677 508.508 597.677 cv
508.508 597.677 509.829 579.451 500.434 564.899 cv
491.039 550.347 453.882 558.278 453.882 558.278 cv
453.882 558.278 472.259 577.505 471.917 588.09 cv
cp
.0588235 .156863 .317647 rgb
f
544.647 649.24 mo
546.511 641.845 546.057 633.635 542.684 626.46 cv
535.783 614.437 523.446 601.796 510.588 596.313 cv
510.662 589.521 509.767 582.943 507.765 576.513 cv
502.69 560.467 496.061 554.669 474.603 555.158 cv
467.581 555.524 460.629 556.522 453.882 558.278 cv
460.785 557.409 467.727 556.825 474.61 557.118 cv
495.867 557.892 505.199 562.632 506.392 599.046 cv
506.818 599.271 520.573 603.952 533.366 619.263 cv
543.519 630.809 549.069 645.282 534.688 669.403 cv
539.311 663.52 542.759 656.639 544.647 649.24 cv
cp
.160784 .380392 .509804 rgb
f
505.704 628.436 mo
500.592 633.228 490.797 631.085 483.824 623.646 cv
476.854 616.211 475.348 606.297 480.46 601.505 cv
485.573 596.712 495.369 598.856 502.338 606.292 cv
509.311 613.73 510.817 623.643 505.704 628.436 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Cover design with cartoon robots.eps)
%%CreationDate: 12/28/2020 12:54 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l#LN3P:5SN4$rDO,R,E"c%?3G7L@<PRV*rR"9QM\cIqB9_nQ-/57[Po*9$B+[)6l(%_''B@=N4VXK".a-3U78l1S,rAco*T
%WliK,WA:MT=7_&Y^Y.kdk6HKQ"9b;'ckJnP3#:AUn8@@.lKWi]U,DXAY;g2h5?n*.fkA`GNQ6`=D_N)J":@A/rP3F?*M1a^GHG1i
%n9Z;8X#7KXRp:Ys.<g*?nmM)mRfmCO:#U#)js<7ZoU7/Vc['@0%8%'.SpeFOYJpPP+J\]+Hh!s'$"$\:P6pjn)T<`.fZP).j2p3m
%=54).!@fZU*6X3.L6H1TPQUI!e%='/7>jK!q2)BR!!nqd_c&nh^h>G"XGsf$#;i)7Q`\SBY;U*'A2-28V>1*Cb;0!.qP7-s%$7KR
%.&UcKQ34Kb0klZB\,[a0<*GS:-GV=@R-*=nb0P0W[smYMIbtFt[qa1=83q$/1oYZt">%q?^`fo(UPiii27i's->3h_4.5%"GgL:"
%i"nG1Ej(5FM$pH#.Q&hoU\E=BaCESd:-+%,7R5C*J[mkBrG3ViTTquALTUR;i#6f?@+YHPdla'+-:%0s(m&Ga5YJU!KNVL.g84ID
%"Zc^=!3&\KB_K`%##7[ZpJ-3*mA'H^2sN5B_@W,c6sf@BdZWR]XSu/0$\P'F>(*gY5a6t4",Tn>j!nfOe8H*,T4fRkk[V=1m/msn
%#4K]5r<%KQ+JqM;)#0#UP6(TSdmnpiI[lL4d`Yd3$4ll#KB]VgIiGKeM!(4ZH7K!O)RTY-Bd+,/+6!5YoRFI')(%Ip?YmElEmk%O
%Z4uoOo)'`U_*=&+ms4Oi*Inq9rX&'*rYJ[]&-#$M5[]lR^U8B?+_kA4)lWG!JXbA,kbg(H]ir0/$K)-sFsR8UVVs=Y-c#``!#"4F
%*;fomJi=nLJ:<.oEi:8gI2@L$O#k$ADe^s4^:Fb12f(>upd_iS2?_>5L.?]]\q[5;&Zk&*i3`Ia+#'-#_s$T'Beh+/*QF1!\:?><
%;0bFm5NDs!B,/I]#d>hm*q7BN%2qsMrb-RdU,H]f4)ae]j2L2B(<I),#LWRa>$maCdZbil<I]JK#JJFX'DIDcqI1]Zg]^HnJ\WZ>
%V6iE";",6q04;R99tH(/_kRHY5bA5hPp&$3+?AOFSq>7$*V2^6L]re7VgX0\d<+.R>RgtO`KAEL3`TR(.-j7>!a[^>L3Q<\Rtt\Y
%"9[o8s$&uG<F0G/Bk9/ZN'`((ko^3*?[K!K^/4.g3q&itYha"EG6!Rf*2k'42/lPjl+>*%BU,@(%aLc_^)0lQY8$:NBpHOES-sf^
%abZ(p,9p5,%]AkJ"XT$g&67l2&1er)1t1N8W/`@/-W"Q$5b'i*C=bMsheSEF4)i]KO(tFbb<tbAU42G#5m\'$Vk$D;LhbY&(/ECC
%'U00n_&4XtTgFmlL5u>$%=n+hn1UGB)AU=mC?:3faS1Z$k2*&fm!sPr&VsfeqmB5H-/Ooj^ub\`[U4Z9bQRL]PogMe5IOUA5^u<:
%n36qS%4RfF=T"3`[S1"!TqP:t@EMD=UoaKEf-6F\PWUQYXiO<aXbaIm>2c/o:rk/b1^,3MHGtB@Thq]7Ab6M"&hZVL'VLQ>!hI@X
%VjEYj[&arJ(K(&O'`f,5k*<gB_CC6rcY=K:IfPV..CDu`V3J>b<(]G,3F),OEa"UuZLWX2Zm$EG?mm5<6W$)<QGT$s$P6H6@4]Cc
%3sF#T"X&sUqO_Uf6h0pRL`XmKQtjh4J#.1j>U\cTad(tn<#3YDR>8YE=Wga50N>#V.[>lf$Dm[CO&?IF>`tb9-)&7EiCYX41l\E:
%$l-lkTpR@Q71"iR'T.:#K>I]3;$CX=:b!.ekRSdOjFRM'/-o)I!`rd'0PKaF>GZ]Z8j8l",3L7#@\/@lj]Nu?O9M2-Y!]+[\Qf/8
%>PXCKIo9$p,!b+.//5IqBM:P8I2TUC6c3q>7Xq-`aT</Ok%,;8>(@:u4Wjk:FQE`G#&7BEYS'p$6mr*h4;884>,m5]!Jt7t(DrC(
%`s%nCnW-*9#>@a?_Vmfu$X)VFFN_0."[K:g:eDdqS5LW^>sVEsr2ol^Y6(U:<[g)iTXA62)JB3JZ;O<7ZLWW$i)8&shPT@=MejpE
%;0FH.e`IR7Pfl(`katghe__0")HK)c$mf8H!29V2edJ(DZD84eE)A-;V=<%;&CChnPuglI11_mkXIQTq#oCVPM%j's)D`r)6N5?3
%K6=)WS5M$Q")45(7n(@3'+1g@ofMhJP,Y<V%t6g%:u^:=5\,9Y`hCb6!hTIerg?YDLu2*.MWrl\+3G8qYI%C4L`XkKeS9,-Q,&V.
%F&dLdb#fin<N.H_"YEGKNe.B;=ikEAdjd.r=c"#m<ie&S1.k&u)J6PD/-QLRcqPEfalY&PHki9:D>q<M$ISi5Tis!+&T^4=&s3_L
%;5B3rq8tuh9HK$3,05iWPbB3c9E#8pOGlZq$(1,&%q*2/-kX""jVH$\%MpBcLc@br;8NKni>aHU'_s9=JluF]+;W+W>"FlYX>Y\`
%JI9gTLi<uG;$8Q'4/=&9o0kd[,46]W$nL&U)\h/&.%r\O,)'tm:+7YO'U42p-h&jMmi$Fe:+Igo/nd[d+SoGJ0=j9mA;+/qOMVnC
%B.7G\"WG7:>SCt3A6WTV!YEJcSF;Vb0*'D[3MBX7Lrd$_J6NB5.Zo:Wk-6L:6FIB.9a4fja@[(1Z'%AKb5k`^J94C#E>5WZ#$Yq,
%.k(+^"Nk']#etnHWrsiIJ/KT/c>joFA&V%CAP_H/;"?m"78+D,@%]>cs'QCY4Sf/9]SKNScte^aPZRK*XD7k&V6NM0@SMj&R[],`
%8Ju;fH+Z\*=9Ct?6m;(#3[<&a=faC\E)?JZ+4;TLV!?qCMA?t2!$samM!ZE1K61$/*7e%cVbg=]1XKpb+4=ea?AfRX>*<Fd+@8O2
%O2M;Y!g-O-ikf+u)&8s%@c^Y1?rh_aI6*,kAe\@j/s(dc/.4d"Wh:Qq:c3Z(>WAP[idaB>"DWfIf'6+pZm';)pm3q(K!?^dcWEdt
%`LVr:@f`/k\J7h+:u)2CWUPWd=GgcAP,Z7n_k$qCj=DTq.0W?n=pt$r=A*qJbUNd@4j=bh&2[aMYrM]%N^`WM!(H,?Pp3^RdAm78
%a_-b7'nE64at9@g7)YLZ=9,)9F.c\hYkjM)@4)nW#.9#U\H%n,&L.n7^9L58'T]_dAVjpe6U@S_)*LCE09H\t!BM>+8?`)GL3AP`
%Q3&U%7_N8EOelV/hB5IUbbOY3Rc>iO6,+3J,^;[b*fD(jWQk#A+9q5Bl[;qR'^AQ0W4OBVf:u\sUqJ^-`Yl=C>"Da-(/%1DPn[ZF
%@PL7R:]ZCn&31.))?Gb`*#:+K<$YY$JCGo7?"1$a7$Jlm;1rJ]oFquCVi6lXU9JSR!_"YgGC@8\"fpGZPD=C4ORFP%1-i]_+!.3_
%o(c*)CJ*72PK1BY#pbc9Ef6,a'`ua.%^/e;HZj\RS')Ah/b[g4'd%9&qdi48$d6er&>0>?84eVBJ9iW3;5fmldG$M!Cegc\;:2a!
%3%U&CTTD%9i8T@R/<]5?>HSm_799ajfe*lD[;>05(MoW7m#6jof%fl86!p.)c%B[d3p&kj%!]_pcPR+@PNcF.)#nm#p]mo0e6!;E
%!-H,NeP(FL)#[FeQReC^EXRaDfBC:%N[`eD>JNuZ)7tZ'ViTuU<SSpH`HA4BDHT4/ESM29D'$&4)4PRHG1SK'3!u.(-*ZA!MQ7L1
%NBDC4dY9&_FRgSrTST_@-2`$L]Dj(2#5=1i)+,@O>]f.iC$l^kO1obR)Ors8k$].^\TuER+3&/Y=gsF1JYR$tGdqMtNWIrfTK<=!
%Q[nK6:n7Uk7tADZTU>ae`q'D`?T%_;dBB#9A^/G3%-G6<fLqYnT/W/---^P0205>;9QY8LPL73S1n0EE<5^8XC+QB^U1u$T7\XWA
%WWjY%%g?bfb*lI8+su9k&&fgT'm!2P9L3J!@NuH.5Dq7)r3L59Bj@TQgA3UCrtVrd5JX/9Te+rKg*WK(%;9ohMYb&=7aII!!?u10
%'P*1bPNnIlN1.j]'SdkW"b?br`Te:2*t\a\b4$*<7Sq9=8_:tP[*454/ZrX<$e/`R>ZdZAp&\6c;*)mf57l41p3+Puig"q"FamN5
%6po$dh-VdDZ7Fsh7cD;j'<dM"lDNSuMc[0%22bME?AW(@XAX],a_8,[d?6=jLl/U<0K9qs"q[7SA+mnlSkd/N&3D+qN%ct]@9kX#
%=p<-Sb*Z<dQr/E?MV45I=]Cus-BibW.`],8X=D4H(=UnnKKX:mVhVim8>m?\"f0JXhRW[c9d,h,$BmD`p9qR9em3O6&7MJo53(Ka
%.Ng'XUjt'YeYiNpWJH@!1.7sYHA9Fb7;s)W*#Mpe&KqL0'=!V_>P7UWl?KP=V=0eXb'o_hk>bE'bmRYPb$e-p@Bh0sp<SRF7\fAq
%^Gm!t77AZK@t?,irH-GkT<@U\UW'2"Wfql(!Z'PEhE!>',h*!/LRl?*)hSq^V<kL?)Q/T#moe+a\%2]J/E#>u)8m<EO65sB1tm#J
%n@ioT"C3);#>63;";$/)/5$2/8o\DRO@9W^&2]dWYpk8!'L7UtY^gH7?cmo#+q0%TBtBS,fOtHs9t/HQ;N<aGXf,Yr"XE:K;8"q?
%NbF&sT[(,PFKrf!`@0_f_.OI;MMMCkP!O1."fa1e$X,9BA6i"N*WIhR)Y*-a2#^qW2_.]@'K'KZ\ccDuNOk3b[PLdI")q+g.bMmB
%_8\[('_buVCQSd3gS(S5U6i,c8R]2/2^(/^@Id$T#DjRcn<DD5=d?m:TK/kS`Ug$*4d<D$<$K>UaZM,k586U1(ebmC&o.iZ73*`P
%-3_;I#uQ>3&r]guX8mnLCG7F.4Z9[hB4LMbJ3lMRc%BJGMGaIFj2dB/M3\lM>D7eX/>H`*78$M;c=VItAlX19c>H,ESlNUD<[R;[
%OX5nlARQ_`AJn(&=leaSA<'.::n1)H-oD7fo7H>=1)C2h+'mP7C"pT5?dC.4)PQA*Jc7#H6d?B`TrJd+9g0MJ#YKVZPKsG<bQ_/$
%KcSGC'tT/1c5g##k>sPib@I"jMc<iRGpS,=_SL;.i#IFe-sE?*/Q<3s40g,"%Y_rSqLHHCE]>lc<C)(G*j[Z0`JNY(6=:+T_%lK`
%.'eP<XC+R#q;\`KJI:loCd"9)gFPX-p0hbi+_u8[C.hF4eZd4:hHIr#B)p<rG,[6-/auXGrA'+FWF9#LYY[\"oO'7.A3gaLU93BT
%)AdK+Z#U8+1+DN^r;64,@Ui7.78kmr3=s+K"C_];YR11,lCJ=WYRgAF%e$WTFNakVb.`Hfjp^*#(^liHZ9Z8Ani0I>K_L]Z*2:5`
%_$QhOP`St`&_'V[2$a64#TSF]_@KIS&pBoP*2p[XC7p+r@\<oAn6/Y>(/+]j:9oNbR"GY1_Za:3"73l+9\r<00e@DOMPQUH]'I;u
%2PCTJ'!oIY<$7CJ`8+j2E1%QOi[l,:TV9YKTK@(GgM^;CDE.ZCfjnF)[]o*Q0+)Dj'hGY)pIX#p`u7o"bX9U?4gOI#>MJ#k]%:bF
%AD+j_Rr*Ml@bp@Y^"K\E.[E6'm1mg9f_)J-XHpQ9Y/bj<$*.rhXIMja-0#`*MpXqZT$Lj;-*a<q=C1SOEMf[;61[!KrrY[KG>c+M
%!qAK(YIaa*<uZuLMS']]Y>eh*3PcJ.r)9V^9(>p?Iq:H3K4gKN*:(PZ%^4TP^Jfg"Ur96(SjcH_rW@soJ"/Ae7k'DfasaHh@!;rC
%UhpI8]W-:!),h91]AlM00n^8iP(H\EKS\_W%a,&%(Woi(0N]+[=9_<`lg*tH8oY,XA>]f9SF.(D>26u.=%dRW$_*['"gVK8U2]&&
%d4oJ#(<4`7#,cDM-TAieeL=KcA4b0b=P=H;X+nc[h)%9&<XkHS"O2OQB+1;q23F4aL<njVQp^2a!ORRm=r=.lLt3f0edt6-`O?WD
%@@MP*(Zm-?YpbW-k9A/JYgNO`AR?`r=%lL'=^,X@;HZRl.c;D4A0obLU:Wg8Vhf)/8Xe1`j;tr("-`mkZ+Wc^o#cU=,NEkk!S^nK
%1KS(ELg:<644\)]lF*a._/^Ic[/CL'5'*0(bF1UL"pW<8X;N[=;g]j&)Os\2S)G'9,:KaK5mb[dX/L^1U3Al[#%j_g5-bikdpDSE
%#'T"?D<nH@bKR!#TFMXsf<"hKMQa&RQB97i/HI`S^8N=[O^oh3gM/Z;goE1(,jO5'GE4]@JU+3ApTbPQS"GPRa4p/g+7'eoqbkkc
%bb>5rp5@I5Z.g^b!`Gcn_lSOh=eO>s;G8o/)$h%NBnJQ?n4"\k028d:fX/loZq48&!]Zo*Ei]76&F4HOB[6r$^g^CS%(%Ba;+M@s
%OP^EH"'#jPFef*!:jp^ioY)m`+R,H4ZEfEs:^j:lW'3iV<#GdJ@<J9kMo5^Q7V_W013?]_6!)Su[iBXAeCrT>JnX=Hmm$m;\aTqX
%Bkf6,:K&Gh@lt#@hCV#'8/aS;!JN@aF"(NO&m/0sIYZaCj;h.EFY[2S1dh!=._L9=/tbN=W5&HaXFLXM7B1lo=:Xh0)QDDERJI;A
%'9ZN#?l%rkT\+cCVaW;eQJ61*n>5f(`o()C9TK?cF7+VBO]pg^/pqO=3D<"+.Y8WkEEqh]hHQbjl)<8R-+k9'>`U;T"9JTbj'3rD
%J0)a&c-*r1dC-%8noO^r![I3U1=RP$NakBTUE`nYqN7I"jaWSD0.?jYl=XH!XSu"phZrqlE0:FhBa&G=&2P!Nrdl#,3p?h>0YD0e
%#I)";#^I8EHUkj(W7.8uScI[19O2*+_QNh5hgbShs7l'^nNZsJ5C`Y'YQ+Od?[ht2^]$$W,LRGd@<84*47ah`BBX0Jaj49$(22j7
%5PVpQ56Wt7<3_9Fk+q_($EV.oC?KZjCMAjOl%'+?[m/9<"*jP@hu+$j%ibfqSu=nq"Wh".;"DCRaK,e6PV',Mnfs5F[bf@MCRYic
%-eC7P#rM<'5rrsh6f2-V(<BD_NL?"^8;(2E%,R54.9bYoTAAYZ^/KLWNna'VGPJm1m7mR#O5SXip?Q&f5b.lCYCHNDci<b^J,L$)
%d!tu>s*dFj#oaY4JZQQ:a'#OrRS6mq(h\!krC1FVi_eV4M6MaF(-QHk9kOf81Q=7[T&Gd$"HuHR&0Qk.AI\_R3HPl^BU*<^"S#`,
%m):Wd_%I7ED1aI0hj/Kr0Z?RnkF:U&)7Mm&&lqt/f6B"&:`GS//M=$L(le]3$nVH=L>m<"?ik@*f"lVCjN(ISo8G(1GXT5&ChiPu
%9%VF?Z9/,`7F4?/BpR.sJn6CYK#-f(1!1JRL14;K$c8iJjAkZQOpRkuL2d3,:qQfc-Yf<"NfpXK6A_ch+b)GD=r)s/_Z:fu]->?C
%JN(LtY+cUa#=-\f4!9+&JC4j.XZY0L(]c-LcqBg@2&%>d-q3QGI?pN`OlNk;!i>t)`1u`UZiRjlJB(@l/6KmD#;43,"hi8BQsf+e
%O(lIa?3[BRn1*\Y"l!>DYULsi=:%?mVl9+s14Fn8G<DG'@^@aV/(9;I!738!O9JdZ2]+?B/nfdS?j'5tBl&KS3l,=;;aW4>D\U8D
%RPu")R:TC61X#k/NlQe4&]Wa/WLC$Vear0n*t1&U9P;E2B@l;';<<1s=@O3PGa@!kJ,jsB/J*Pf^S('s4JiIB_=PpMFNp38P!UZ0
%C?Duo8fn.="X58o5lakVA.DUdPs]m=A9.t(ZaT95U=&eGY`'#i8-p9m,Cpn4\?e;m&@$meUJNV+I4i`c%dXou_i1R=5c:?tO>JGI
%OiWt+H,Ot0#*WC=@ZKdaBlcS-"/]DY!0iaV.:\eO/uGjcJ-IkC&B-CpKP[FaL;uqg6MP%mIHaWB3faP(/cbrYKr/fT?KHbOfd,#8
%LR0PCGlVG]=NFEp=#_k^QnZq!_@-I2/<)6*=^A#.3o@#mI7]74,&SON`d-]\)Y4deD%he[ih4n\Tu596c'mmaL8bF5;1\fWMIj]-
%K<`FSB%.+i#4cs\]?,Xc?Gp*02:47?;9f3O,B<rJ(XZoIJlmsjP:.SYD]1o_W[JH*K8^Es`;iLi*+">b"bh5d`"FsV.a3NFq'ff_
%:pbnD*eGp+,)V)OM<klU*.B+6T-L(j'p8"8<ste/52*lQ7=Zr)lJ=EQInGI;QLGTE1>[38G[;#>F%0'j7j.+$7>YIPW\#4'&i!)6
%aI@]o$8Pp&'O!SW1>aQiaqt@qY/N,_[KX?W!`'X>%0B;EXG)iU>%."0UQc#l7Pp%bZpod`X@TmPNlglHblI]D9kJo^.c3%5j&mAI
%7pGOL<S`?aEBBc/bFd_4+BHn85%1(rN!IC[!j-E':&(cFB?g560MDeP6F*k+/0f++SgmPOD.Rn5Ai=K=d0d'E7)_b&mR1!@K)d!e
%YpU<s1&e]qUnk"@<c6,jDTl7n0fkh$,TIGm"bJ?t$rJW+5T-.&:$aYcXYE56R,ku3=IpoXU_0\)N("V];!#\@?4mr*;Rj'5^4mFT
%eegt_RKA-bb6S]c;8&bNU-F/Dbn:KjZ`/Tan3lM<"Wj_A!i#s5aXlsm1gM<?>dDjZ<Z5h_'9rP3@]Trhi^U2186/&,1l98?KbPbH
%&l8:<W5,Xe_),S'_YRttB[2Q-.jfeHmV1b)PBKpmN7#]]#-<C:(`Bh$"ooJQ"i=+s1(>R!(&(]S-Ho>LA4?>D[p6>W0]6Lj%RtD&
%GoRS[?pS3[4qC7&YKD-W>:#*)pBP^e)/bm.:s\^DSZ,bUo/U3=3oc't$#];f.'=3%9/CAX&np0E%FGl885;*6T`,o'HN7[Veu8ga
%I-T5t`S.,Bgr^N-$fjE8+$0pRh*c,P;u,GHpul88CcOW7%)i2@m.I&=W]$9(3q_a52,5:7"B<[+7^[_E0M?0":p8:7oU;OU?`D!I
%1)3'>p)(J:I\KIRnDec#5CWF12B$K\!gtOFd!n"+rN4Y?C6d2!YsUqo6)E(0H8@I/r-+4%H3`>R6i4\6TX<FAS7%l^5aSbPqVPbd
%rB]>?l_]7,#*!N$l"cAqeR]B4ieX8`&`IZ2410C<j_JH&RGIo&P<V91f_E]U><m?2*^l%.ftb'`r=.E:?V7%3iu2sL,8giI`]p=!
%>HAe-d,1ris07m\q!Igj!Iau0i8ip)VstjaNJ!3>K8g!L9]i'Lla_tdh<MY^I4[dflJI2EF("U97E0\)^NZ-1[]f3M2?+H06[&l`
%NU.1*lh,0O,*k[s3M,a\ek]YjqY<&f(3#lC@,Nr7qHsA.`_l&=6LH,k28%TarG<5UbUKTFl)<"H[t4NA1^Xe9IuAc'[O/C/W*2jX
%N4a+B_G/!Vieuq-[II<:#KldEXle_QG\qtJIX$DhKCQ4#(iuHDi9I=?$ll^)g&aO(D?5g=NilO0NEW_0^*qB([BQh/poj_jf>%=]
%Q[eq2?iTcas8)CA^]*I>s%<@+pcj6+1VE\Ts7)`\nNR2%5fZm>df9fT=>AIc!mAsl&VX'>%\=+j37dRF&B>TaRb"7fc!k<Jm+$P+
%f1'&:P0!.<EYkas@b$BGFhefqhW<[I^a+o0%E9DF+T.T]L]_h'?d`!S<#NS!e-EBY;fMr3fTDn3#@gk)[hZl`TFPjACGp<7OG5r7
%j0#f[nSg1eeuSI).dI^I-JKM`dOM\iY8W&M8>jj?-'4Tk#(_]dGg\q1@9TAe.Pr/B#s$B"%iX9?F:rgG(O<RAm>M;6ZJIhe>qH@N
%0j@il$u<c3-nt(::8'/1`$-F&Q-#uU*tN.kN#P!TfhN3\s4O^I(K@Z:TK:FbGO?pq:f<qH==M$Nn$Ft3=nd?od[5l(jcS\t&U9o/
%SZC2Y5'YX9p;+)@h?OsiV4psih7eSHs0p^lC;QlW.aLSdEGP2N.ra2<@tJW>X49;FcK(m7[GhJO-CXNg(:/S8p@P[4W:ZR]5N"E'
%G;d?J0mq7CN3DXY./*cF6/[JF!Q0fC\/Q@LEGO@\-l19+5eei&mK]Z=aUj9Zq^2`"B)?aNlb?52n#aCY@&O[O8u@?DB@3j&0:)m\
%6.\3#[J&#@Z\/7kd0a8%CDU0fSoLKL[u(@9,A*a3[:6[*(lV5IhSq.TWcMOPi\[_ooXRK!k:h9_q*Li=?BQVgV.O$]IRZSLCsH&T
%N9ef">c,fPN$sJlJ8o_F]:N"3rT/8qFQtN^C[<b::_?tMY-#E@)/63ZD:ElHq^Hi'!J4A2\GE-hMDpASq\DF.f$FXaK'QUT1N(*n
%`BR0!iBSuOV$1d>Lpk]Be1F(SV*?:RD9*J7qG47Uist$,eOaVP%N:mK&.m6t\,XGK/#N:j&/$o<#f>7g:]qB'f]b9%:i%j8b.LMD
%,5RoFOh,^iBqa6q%/S4/IoPip`a0*_6?/DJVr)2U>'-Jr5i8/G%DqHgM^%P0RYf=,1WsYu"k/2J5(P6Hm55(%\crr:a=D7!1U#jZ
%,mtVu\^kHUqX;+`B5J(2>2B4;+A,IQDm_1=E?*T$f'e-20H2@HI`($>,#`83MDT1*$G:*<#:R*q:;7O2JD0%il?G'&F>_[$Z*n&=
%?0b9I!RT;2C.7!)8/QiRL$hhV9oZ.?X9[9l5ZV+&rRqC=S>-)j'VoE%9dY`bD4n>gW)>J&2*ScC:4Ld#C,+1(RS$K_F1Id@Pc)3d
%Wa8uK5bOV9e@oKO3=XKB*fRSY$reSsieVP0)8E3:At5D(<qoS-_(S(rY1Iu3iio!$7^"TN"WD7JquI/s47l:=/_]/26WHo'r72bq
%;<5^KBc:AM=qCm#b*;lB%Rq+b[G2T5Z*?Kg9f1I]_5IZMSqRp#S.$b,k:/8IJjHGLB;MP%_umP)).1;+PO#j242/g2aiaS;ki-fo
%P,S;^?3&:@:C33lcNM%4oMF9O$NV-7BEdJD$IC@k,?ch?!h+^m1'JJS;h42*.LWKG\,]7R0(gMBlD>5o6d12,25->KM-=Rch,EW5
%s"t(Z"/W?h*#M/Q]hhC1qSY+fm#>Os4U3O%8j:Y(5d]O=2S'Fq"+A8p3dnYWOjg1=\,:'.N/m4_mf(IY%-m(#8kB2Uce>XlHDp(3
%Y@lf]enX5_B39q?G!5,M=tlIdCOf>lh5c-ehp[i:kE2]<JU'_[rl2/qWAk"lU(7HNF>8-X^urBBXU-UiMiH\7P\q"j(9$%sEAd(d
%o"[f&2=A-OmJKM`j/acVG#t'@k2<AjZRW<TW#O>MPL%t0F&Mk3"["m-hC/=_BR3YZI3-I@Jt.C0j$6VPAHGi`:oTNgD6&_dl+mW3
%h3s=E`*2aApdf`cqGYpA*3'G_?`I*^Rr.p`h=ac=%=Fiua(f*p.VmBn/,nZcdW&dLC]&9W6)7DR5@ZBM.o!h11&=6X7L<#EWssKM
%6`K9-JDpB<2r3aD7DijAc;YaXTN,&+`mmVeO'ub4e-2;5F=-i.8i+-9BQ2d>lO=.4j6j0^=6iD^pSu^[%>J23&ARZ6;tI#E'LL1>
%]iG>O(O9HT[F*WD!qft%,>@hsO8!".@N:_9jcRC(-ob9-XGsf$92BrbepHDOZEYd#lfbH88N1u;r/XeqNnstg=6>;'NMgo99sSrK
%22:)heoDG`:o3#7im#/3^\(nhCofYH6>?iUEaoUu65;f]oKAl?BEYN9]9)E:@@SCJCS4_8gouKI[3iu#ksPLC3O4?OW@$?hr]c-O
%Ze:&EB3/q,ZMNTqhP'639N?k*ML[P9nTOQ%=!UhZ7o^+Fm]@Z`^Ll'3*GQ(=%6'<"CQ.)H+4k1$2&dfKZl^h64`h1\&B?s["KqGV
%m5NgVK2baM(6(TGH\Uk;qL*3Je"mrp3Gp&9e#54E`ts*u5c%EkBNYmE9U^.?%fC-&12;)XMBc(%rMcXjUDu=fH35(X5Mah;6d<HC
%mA]Le`R9e9]bis?IIYXT:%dnnBEg[A[u,eBp99Oikn$uL/SlmRCfn;=`fhIl"OP.Lelt!7fu$8/Q$NWqGH!Z?,!tPerV'dRoRoj#
%;m0oY@_nN'Ugm@qBie<9ANnAk:**@ll:M[ZVe*uLVCCZSSp6o/k7c>gP;8;u*?-AkFU\?DPk(bi;utc99^8*\1*1BW/l]T(ZY)C1
%9j2X3-e$QY<s4o4K!jVY^jO2O+Vsmg[l]e>L+9N8SPt#H[&f6^(1,m`53r-olCG=PD_8(<Xh4C/09tZ_XnA1+Y.9gK(t8`^=%C>c
%K-H9$YOL-Cbcf6-&Qd64NKKk/BhcQ4[9jm0["1pf8%%5k6:tiJ&__lppH)(g?Wjf1>O*,,=(g0$jXf6u05!cPU!i7$Yn\r0"UkVF
%q.=kpHiYDOXB9p#+KHZh>7GcB6*725a5#W/W:&cG2B;#P+>-J^!*R@m=f'\$f>a#D<ZUSBpo&TFCUp0D=Uq"<h5sG&*ahmq21O9`
%=W+/t=of2#!JNH:@,7M-a)U&3G,l]%f7$*^YOr!2JeCHT:o4O*pHWSS*g1T\TFibV.35o:A&.Rp-GM>;r]->ML7lKi#5pfffg/DQ
%2[Ie)>,NJ+oZ?P'#23/i5f4Lj5%$6%)'D2(<hP'cQF/u]7Xk(F79./4of<NpSh`dUUd9bdr?CrNl+fj58pde.5QV/pDgI1"j1r%Z
%7Ai_R*JdT^1-f`93^`L:F.l9:[_R3/@u;Tg]'ursTJD:LU8SVeM!1T+NoC+GX_LcVnj_Ts?2`4-W]%$nPJ-D:ji^Nae(A;;;e_9*
%.siL5D=)Sp+#M]H_'^XC^\:=.Or[>@?D`TdC*;UNU&%)m84(*Q/J%i6l&3JcThWH(jGYM>L^Td`JBG:P*"RpZeR/_FMa&3!&tFCh
%`.SfmeX.%:.b^0.q^3GbVu!__1_6uc$cg`gCRq%=QAjM+Nq^Fdh[dm6g%htIHNh]m28b5eF`pI^@-+-lZOP+KpVEet\#B1QgGJPe
%ZSfCTjJ<BkK(QBSIA$Buk3K-X!R\&<?(KQo0*hHt"lbSlB>P7[%-+Prm:Oa`OM9I,+P+['C#p!e7a9DqVe?iO3pK.U[Znr(T&[G9
%V/-E-jF"3WH_e0\L,s$_bZ,`.9E!9M2!jL%ZH'om\"&MXI0_u+7W"q:<u-d4>sp5uB[cdgH0OT0=*Zc=7_#]rj/.MLdg)]N7"l8e
%@pnqX,YkKs)UrPdUY=%[V>r\;2#YJf)N5C]!'cUamOAq86=J5Zir,tdMSe_mF^4l*?;WuuR.?8!Egmhu/Km@AfK(m2%FNdG$q,'o
%jcArY(>KMd&\$j(PqE)%mesgAHU0m0eHpuW3$(tohZ0cnAoY>$-]9sQ+jj"<I>_[2g_;Ste'WJ**[!Q/"]VP2[`E,Wjl+i$TK=&_
%Y6,".S&okRgGi7d<%8MfCn]W+r%o6!QDX6+62i0TQd)hTbiujS=g"le[e&%Yj7!YmGnLOGDQ$s-gV;Cs38L.HSau=2T@2u[ZsA^[
%*=`&Ho?UeunQH>*f4(F]0RaQ7YS)Fb3rN"WK4]_Zmc_;M_je^QID!d\:[^GkZ[**7+_`UEgY*l8MRH@cIeW^'.fjQt1&S<Kg8H!a
%O.5oSSs;3Xd)T'_q=;8)JNc!]a..7s%cL,EKRe"&UpH+@GaI&P+"s=U]i[>)%Nj7uXjG&DCA3C8GO$X?kG:LXI$m8BEEDsFqB@eO
%2^oY0/JhTc0D+cAI8#o4ZX7_EV?S\/T4cmN&cP<j,=C>kr_p!s0"a>as!c_2_fi#.8VP;k`G$sL*pp&6q+U')GPO+&/XQ$D%,a5H
%<2rGH*f=m@rRKodP^UPR_t[aC4J%+7/f\[``<pt9'I+,-eE\u?n`QOl@:Z_q#R?oEiA,P"c]j$\I&?k19r`795=bb4M+1EgoqkFA
%>5+V9Bm:O6!Hu='K^7\,rY#/L^-@.A`X\X"qeep+*83YVFSZ&7.MmDd78,Q6oBM@S5+\S7^&6^b7IHn\'?uk!@1N#[Spp]c:):1l
%m8A%F]=+&U'OLCeNTU**f3KbBTI:iI.AAa(fmnZd[/6-c*5#(j>NO#,+<3;B$_?\`NF_;KLu/*aBo'mZ;>EUf,LaZ)IqH7sLV[ME
%1(k<Qoa`s$eb.aIU%@,/!O(MG@l=cYE^q\:^QnE&)^c``bi)ch'0dT&.nbAP2_3qedo)`?TB6XP_J_-#+3An&5(=t]R["_?bP-1,
%CqdrnejV;LIUdGo7YOT\jX7E36K\U#p<b!aSHdijI#3.'bL*(aEjlU\kG2'<<.%>%ZGlb3ERm1Ub)H=VM>>J*3'jHoiCr8f(i&Jg
%"G=Z4%Z#=.#R5J_-E*gcA\o'q:SD1UjRt+6[NVh_@OJJi<Ku#QImTdEjnM*8rY06J^#\T@nLgM*.7E75BJ:-Kg'EGbM^Q=HPH5!j
%79IOVm8G(.K%L:8(Q@hT*eK5HFV%e>ge7s:kFm9BrVH=NR!L<3"Om$C,+*ZEC^6rcZh#;&(0a'_4Ga3ol'2h@UK[sh@6ON.'^:r]
%:te'EK6!C7%rPVUT7`UBI%#D$4*i+UZe9u[i6M#hHZ6Gi-\M5S[:6B0&:OqOU8(8`I.jregg;'c"tQUhE:>P=bls/CX"V;QSR`ph
%()8=8o6RPQXB(@li"^B]'tg,eKS$[coht;YA\3qjH+^g'K?r_oa5H80^E0I`?W;[&gL2B&f$#0=gOn3*fSrf+_9\+QYMe=q]bgT]
%gjB8Qlcaf+=K,"^iF2^F'[;E.Tm6J..[2LN:ncB`oef,Xf/>uIIJaDrK_UUfK910fMha2LqN%=dXL8kt*Sl-t$LNadW;M%aKdol`
%?KgTms"niO4Q\sH^%6^:C3"_?\t]8PA$-UT]i9V;U&$,nrO,j;6CfV,n/392Kna5<"Z8)m>m]IdFVG-P\Xdn'dAc#V;cR6j9XAq@
%R#ePpYk2';LUUSKhnluA+8=aRah_\9^Ijd/7lT8knCch^(V]h":5//RM-0OE*eqP>Ze?h_HEVdP5FB>!BI;NL.($nPB^S"r3o,(>
%`7>=bOlZ+?4$md*IRNtheRq:!I//Y1%u7tlTh*3JqeRl"3DSH#Oc/o&G2t!`Ynq]0>b=H")rZRng[S]6dX<-3,K%W0H8W2mh1fNB
%UUMU@X3#)BEKr_eoiHi=0"JQ9'$[TAWOM0X?MhCKH@35n=KRJFh:9-ajEC4,fDSliIWU7nO-eJ)e_s`m1E()\\7htu4HHA7T>N')
%L,PeGBCnQ5\!)_;1XSAEqCm5Cg[.KaU[-[^qt%LIZpo2Jk^/5;M"Z`cl0'sh\;<Yp2lToZQ+;lof2(Y`k5".L/:TY;@[5DW1NrJZ
%h20s0iksF?[!`p@'CM$gc_JWUCsq.q6/4/[h%%HRDt7aMOG/\hp4kJ]Qcbf,nRLL>n]QA=)Lm.92<)l5iDI7SVhFgjIi(ernuYA*
%;b3K+`1s)D@cr$,:@*BDa,.-E\!a`h.,6(S#Jn;G-[U]=8UU1VIVlLfQ!?sP+2Vg1;t4X?B:nLmmB_r+g3Id:>Iti]T%E8@g>cAG
%oCT7F)8&'W'8cI],U3b)P+2?BHF!<<]d6J*MnS2rna.`-$]S5O+3.8?3=/uId*-h6-(J=Tb*A1`Xjl9;]eh?cek[7FnG:ti)8"aM
%AP;?]p$PO(eA(@I;QJJ]9&)u!;Rr!pS((m8D32?k+5,00j3;SDS%`R6VXO7Y3gkIW:(,Hq0>6*]U1Vi/fC>@&p!Hec>s#^Q:\P@q
%]hIX?h9)NG0'X=R)<N`/l2GbdFCW1"m]R+l1I-tJk3MBE:;u8(/W.4KGGuUs<i-?RB4:*%]m)opcWQk)6c8P2-%6!Ad.BmR6Z6$>
%D7WW?Np3TqaO#(@0VJ=?B@kAm=!u$BgT`#f*L(lo@H%$B\Qqks1!Na!AA4)@0fDn1p/ur>]Wq_?onkmGo*=WG*8+mfNnu'7FE:&?
%1L+Ni893Hh@[&sa989t2[E+#:h*o?=R#R(#A9Vn-b;Wmdh^]CAq5__RJo@IA.K4+29bc10niMFk^[;KkI&8Au?;t9bH8"+g^>uo)
%\G!uMU7>n_ObDJ95.hW6ZV4G:NWs:Y\;>m`n`c%?[D+qj%L[PW]$G8c8=dZS%lo$KbK*BCn4_+tYD;[oWP'Um[N_sHV60EM[EdV(
%`^Vs&"ST70[rL#7%lZP9gZT-:c,a=3YfRXRb+$@ZCqP$rHoftthAjHl-T11$Mi*;cXkgiaBBuYTW,1"[a2HQ\g\pG]C?Mb(SR$"X
%[SLZ*`qISujD]Hj^pD_e]u*]j]3'R*SfFn5Z7ksmL]k$$c7lhn8enp!fosh4cKXi^Co:<?0CFdR20h-%\sM*pM/7";)IEsA2F"gk
%>k%QgRq$4ESQr.>pR]!B^Nn"N`+n[eCodGqQd;S%q84@5b!5(`_YN/hOb@<Rl'"!5OCO<VL$E2h:jB&0>o+`pdq2H>4W,%H:=JIe
%dnMo**53Iq9:9J%;p%aKM:0pa0N[P@IGU6!2]q)NAu7/H:KlSTErC)8h@"3H[eKQ]oXn6sS=jKfSlQfNHXFn5BV1Fu$i@oL;0W&K
%?-;SbY4^X%l^*C[8hQ8$W*DJB$C)-IDfh).1+*=[<]GA$]kfnR['*]e_t`K6pi--0q>(Y]CDiLPB6"]Q7X%AW0+9moo;ESNXW=gQ
%+$P\uFR],dgW:7l0<[F\nOJ$aG`icugF#"ToPeigLJLZ/[iUI*l/V?sC%7U#:*2gOp!^*B2g33JCZ2VBcK"Q`Ab%rD%mI[$c_^1T
%FFG^[=.u&R\"o+qLhG#3M]MLY]XX7_3u=M:<sR8L.sb4Ob?WPtc_lWYAMEbD]Tb$m[P#laihr.3PILD=>2qYkQ%(dK\@Sm3SmRI0
%2nR]>o/;#Fgs-sJ^I:d;2i2pIK4]"Amr)8dpX3g?B(VB@h$X$T+1J/ipu^sjpUG40I#Wr+`M]d5h9uHNh$7_d\,20YdE_^PqSqIm
%Z]mFqT\mb)%u9NKo0`,[Spa:K2hI*Ee^"-R@ss_m$9k;]d*0u$a[Z6nlF_H81q;n/cWj0M5G&/Khjuphg=8jmlDjJSM::HWj0kM+
%9lQB^CS=OJ?_8DeNEW,UJ#r&(?Jj9#GL*:sC$"]o^3O^A<kiNYT@HGIoo"QH1:`-O)V$S@ckma'C/&.8rM+YpTLR2Pl\@ld4.uB"
%g%Kj.eLPHB]Wq?@NORB+gZ_r:D3oZ`)7K*b>)g8/GK5>DRm$4Y[a-_$fBlmg2!T%@M9X?Ae]'tSIr^2VdgtE=;>I.S-9j_Ln!3:C
%*:5Vqf>X94*IeK5]rf_ne@V3uXj>A]BD-CjX8;Yfb`iY7Z+(e>QX]Ss^QG4u#O>iF1-!p!D[,TTG&,/qVr?T;p#U<U8-TTtR4me^
%bCA>IC8"Ld9t*U(l)3jpbF5q":9;1Os(tfoCU^QbMthB+G>ieBH:P`<8OCehTsS'oFGlOrl$gn>e-(MHhq2"GG$@23jJ[_Ib+Zre
%LTT:OYV!4rZWV.TLW+<1.rm8(@q!cf]D?L.#PL1q^TofjP?Ilb9^Z0;1K5]HS4`4V-S0SaE*MKEXS1RWH\W\ZZ9+D:I.9qflgBN]
%[VNi@l7T,#AWkda69CQBpU>dS9^DiF`lW%@$Z(ZH3Omr6^pDWOd.F4Te_p;oD)%EPNYs=QI2Brko>*cQS/X9EA*@4'bO(h6B%ai8
%8miTfhJ]5sb6.9hV4.6ZCB(,1J7_9do]s'\iQ8q(TfgUmqcc#Do&-+O/r^q@WT&@%m]sKrgMYAR3O,bE_a`c-*'tP]he9qO6_tDh
%8LZ*UCo"+F>S?n9'O6-%o"d_lgC#>Tq$n<J_DjMmrIW12eI/Kn13@(aYH'g"##uZn1U;GL&_,qJitLuYq;p!@qGDn]DS)XN$L6g<
%Z1bu0fct4"bjGY03aU:'Z%P4ibk1>2%c?XG^coI_)W>RoDb!T[i\B_uWIo_=pi5kr$S`T9n1ttmo@2.Pe!3bZ>=BHg\RGK-m>d]?
%I2tJ!9s,I>/_#K4>)KS#'p6:6\tP[L]?eU"\ZU@]>G:7?()[PJ=rg=Eduel<Eq+ri<T_<J0NFun[N&Hc_@^MR9t"u*]6g?rQhb^7
%<hYq$W'&j;4ma4rfF=2$$P/7;>E'XCEQ:fk^)B-mQikhf$:'tIEp/6`jX2eX,r_3Zg5SX(C%X"mZcjqD.IQkJX0B\1-,!<k4?(;V
%USmE=VZ"GLWuE_i<V&@`gZikFo#.e51%SG*iDu'JDJg;g(=qbq,<<2NoaJe1D>S#&Y17MCHUlhuM@>BdQu=4=C<pe-BPR"7Z:phA
%[MgX1Miionk1$P6Wr2Kg`iW\[D&obj?L@HI$VmhTW4hlUC\q0,W*HD=([ioWW]Y,T$*WeG_nA^^/W49)K\Lr$Xd1$?AQ,Z(>L\e&
%U/@t,1Tg)S#'e6V1XN?cZjuioiP+I$WXorXc182>X$u;um7FanMOG[t=2$S95=R":[]NRhA#s1@LTN%!3OJXEU8fjQjNk7VmbrW\
%jP`97[r(e!ephm[[G!fG=L$^4DFS>bO1ILpDV;LF`3*F3GIP$J>9+c<**^+*faCN1/mpcr;sIuXY\;qZEOPN1I/`bKgZm7%[pj':
%1nuo*EQ:#]%]qoeeC1poZ>]EsA,(=!9<<!209m72d#Q!aX]CWOLK<lHW)DgM^p[8-,S^[S5,ClulGaWX'o=f=6VUq+(T#YCS$4H8
%`;NPM%CaKuZLNA7=HBE4[>c/@FaZaM]R5)McOtZqEX<1nO0!_K4G[l*X\O&&QE^W[pa8V5q)c/sAr>oLnPqK'>#"$Xd:eIYWfg88
%>F8Mr7@kNN[(8UHVG+,_mI_WHnqpX_,9)>(F/om(#\s#rC7)::GEckP<&-WC>.HBfZ&r*kh)J270H;"<?8%/JCXl_oX3/9I?U^Rl
%)gV\2e%9\to@iGC)sLm3];MYO!(L4P3rBu[+dss`.Si94U?/?sd4]7\a'Hg`[,2ALWlrkoJp:>LG]\<_0l%T/c;33&kEu7uMDQKH
%A"r],a.FG"q`Bc.e,&=`VVP1&1a.5bC=MtuIP1"XpU@<FjQTn89==i88p3*WPc&V:_tp`h;!i$hZ`.nL9WIrec-r04H7%kRoWbp2
%XZr@Fg?\%1(ifKLa5h'Hn+a8:c/d4<SuP?Ym$>!(:-XL7T5X:\:Ce9pHgCI6dB?W4>`]^17OsO8N_`<Yj*Jo=klJ+(U0WkH$Smj_
%L;V@5IB'ZfVN,sI^1hk]]K@;)-r168XdS:]J,-[bQF!WB([kO<7obiAT'kD&Sf45QnRaHr$`UN8enee+"l4V`)K4^RhSj_L-4sc0
%(P8Ugq$tX/O%],.7c0J`lc"b`HFX'b-V(D@Xr*+NfdI<\0(LJ**JKm5p/t!"%eQbu?t@/+>3lKd`#&R9c*43'a&5,+QKIQKF(he5
%TZsqtXhetRZX$?,T*ppG4d7_,DI]`h/a!#eTiE6U^)H\d9Y,c20Ts6GNidn(qOej5V93^(<P);^Fb<(q_euu_eY]TOXr9%%.\5Y$
%L/sekBNT1q*,`5<N4K")6#uZLo(ere]%8aGR^dET'em;FfX7`ZlI`JjL<Eb^N(f.BLK<l8SAuNtO#aO!?lgpY/K@t`VFB7ReZE65
%Y#Sr5iJ*D&N_%09MIW\X8\$\&CJ.^_a6ut?!%"^chu%T"9'SQ85Pq&FK^dT7l1WWFC`KJGD2%g#erb_b5N\+5#F<)U?fRbjf+:K*
%noTQ\$m;FYX)_nPQ^LTn@pOT+%cbf,`?g&j>Cb>l0X3JlGaf7pXLoYN^n&QhHOiR'@'pV^Ram?`6Pm&)<TRfjGbDEoQ#!c2]fRpX
%m3/H<nuQ7(R*W-D`Du<e_I@a<0!\EXIM"HDB,pF,_2d76X#'Mf7HWHK9goVu#V;R\F(.^2%;<+VT/tn3=7HZmbT!`LFleKdT?o2(
%l.4$7"r)HtcGXn)MXK?+3&`SORAXcu:e//]f$TE(GAa'uTWEc6^4N#=&`OVQ3NRu)Sse1eL:%Vr3K=[8`)ht?L^eNWdtm.*?m/KF
%Hmt_matX9`?H[h_]qG1pq9>/,$S4tYH]MP%W(5(O0D7\A])Un"Z>]i[(R)V#&&*lR1D`[I>Y*BKTL[<SoDGoOSWV?1ARr_&^s`^8
%'*Ul\,B?',F%O9R6[.*Slf:K#TB78f-/Q7uH$L<r\Gc!:c9L("h-$)B2C%f%Nnq7[4Eeb&St!F2.-gV^6YD9J5N?LLV5"A(bg:`o
%1ikf^GY#nZ]JXdt>Ds>0o9tJ%#B,M1;mefbCQ[8`(EGOZ"ui=8L2t4,VEIIfWt_?A2"i!DURAQ@dX=%QTU?VSg8l2h/).0iie3hG
%!S0TH;qK\2e*C*-3dQ'J8#,ENb`E(6aa!'sEE:U=75$?k](^Q;5\_^O`QAgQcq_opDAi9TURCK%FtC7,+575<&N!J>V-9(`b`$`-
%1+gW$Bkcuq$9c%>*#Of$Bm6DYUQXQ69'XjR1s)EN4A9!+Q$&7\Ap=jFADa-:=sTAOV5h(=k1WijKpr)Men)*Z[jF0A%XgCO:qG]6
%-^0mLFN[h=e#(IC*6Jko751KR\6B*53UF@.H=RMJ[H;*?pWbr=Ta7ET7aS16A^Qi9\gT[X!GH]F7a@Mpo2,5E7,#gtBh1%#\*kGV
%BF8Sf7l/``,\uL3-F#Iik.Ep>[<UZKe+1!8TO5UWIX+\36H`T)q:i*/%s(pZ#VM9pNF<b/mEgVYIM$,B*>C8l^C*IH6r8'.8SVlJ
%XXb=`9&mWEHgp5*D?`/^h[4JnM$lOEk/Ip8bZa1W4],1=I;]<t0clMgEqFc%q7Ie#oO>&Um-I6J40#p506E<"e$tu-pqbop"VH4*
%h3h_hJHRXMTFY!i5OK$a)aUMm%=g0/BEbF]F'-]4I0t>t"amY.Vobro9?'M:m]<':%kFlEd-MR!6,r%W]KOh?g4R)OYn4+&VZ0LZ
%gPRpR7YjOo23#Q]?$[FXq=f9\RdR1Q#cjWC/e)/D/)B(*i<s!NMqsL>#XOsLAR=_>7.+[2MuCH&fPSkmP:t)#R0(;G>1DeUTK@0'
%4!*N*q6i:I&'W20ZSTS]bB4_.CluO_K&?V48fW1]c#/Q'*Vs/YQIN!)H@#ESE2S7(^6igKa[jb`1P5<>:86&:[)[Q,6&_@:o>HWT
%GL42@_!H9l3Y?rH*saVU"d;TrXCgorQ2!22V@CK%a8bA*Afp;Q[c=shJ\I-8<VPqFE`)FN3f-=Lk=U\YPD+cs<7]<f<A]/?E!aS$
%Tt0^6Tak_ZkrHi@5g[D9X"=2"OFh'^kj0=3AHb.sX8Mms^`7O"i9&#Dir>=5$eWiPT0#@9;fg?8=3MKnK#RuO-*0SpG8FWf\s)jJ
%.bBVGqgmX*X]q4N'7WDM#AD<OdNVMo95nbYN>@S9/Ii0%>!h6!a`A/KIL.)`d4J'EAE951CmLe9'LfQT!OTX+LCOL`"m2,)NmQ"^
%N6Wo.YC-nFa06UDCSCtP:$]<@eEp8.I^0$8P+>tXf\;u')O$b6VpH$F+0@EeZZ/7/_ksspG8k`>1Ycj&9cD6SL")"^i+D`,CMpf8
%]\BJU\=;#o&($W^h6(kf[X\F5*85kPRl_F:a]egj,:$Z?V0s/A4*T/aJ2a,Im,DJ>/iu\kq7*jFPd+L[k"2o3fjmn4YcVHgJ[F$7
%PW1EUee'I-)6Z*tcFfG>rJ3)5V='6`+cQr3lLrqJ!ET,t4.GleE=o%4*j:2(lhkM<mQrP<\3:AFgZrc]gm5K:P@o`?q@7j;:eY'-
%aU'sL+P3P!$P^V](^t*/o);C.2WFK!S&MQ,\eU['hodoAbtUC=#a8<b#iDK6=-./2qN6iHd"Q>\_0e`2mEK[YIfdbD*1\P'O*nV1
%COd'.m78Xd?h8(51V=61:2OTO5jlM:Vc^ieHtr\a@LWEC=SkTbm"D/%(RRu^5(:&E`u3j734`AVj3-el1\u!\5XRXmNq.07mPE!Y
%&+-SC57)sh)7`G!&Xs:,JT39tg+@?'-1-2Qhp/&$.s'a\c>S-5F&+-c,0e_KpGP9F2Ucimh(]>`6/)F)?>'1uKb"DCmZpYSY[:pQ
%0nmO'$L-'!Uai124$AoJa5h0.;jSn45G<)ZN]HPN@&%\$FbU!&Q5J>6TQtJUpt>O1TV*/\Z?^]%"BmFR7=Tc"Vi:lOKYI5d!sg;f
%9DZpkdapl&^A>cMGM)'eZ6_#'(N<OV\8Q/-kZe+cmZ$+VWW)]$3V"J]A"QU2?cd4IT/NOS\U7LM0-d%64dQ\J=\_$89WP$q5)",3
%T$HMjbD/QnP]T*pk+$Jf<5W5)F?]G(^(hr:ET)"'gK(^e^(n90`UBVo\``OcW2GS*Ra1)fbI=3Yi@UA@kFTkPH.k%%q5iAo*.[F\
%ml>kYhlLWM7R%Q!MGl:Y=fgt$B,ds6k=d/VN-c+qWEV!'EXU/:X:pgf?[5l;Z"lamZU8J>6aCCUNBL/#U_l<1Fn)Y(5C=,E(5LCU
%9Kg4U:2)=0DJLT1[>ADJY/f?Sd`>0,8dYE/>q^u5m%V.)ll2S8YaLqqKZ<t[fsEiIUWWu6hL3OK2cdYFGbn3-N\7eY3Tfe00YEVD
%#c2gqD93^<4h%&F)!pQ%^EFrlnKj40jr"E/%sN)/rqMWkS*\\;<-[B/41g$dn"njb'49a47\R3$"[$!mU0P^_,+&HkcLE1b/&b3/
%%YdTt0i?/mbql_[-+q[4Rm(uWbDY/(Ep-\PIcK(09'`QqS>PG%S1F'9(-8nd5e9&2#RNKd!!$@Y)rj+%D5s@.'@PR:1phL,i9+07
%9#k'X#6Hrc@p\tEQ=MgB?-JCXiB*rVl6W.daXO='kMLqe4tc"<\WC%V]oQ)J9RUZ2Sbf^/bk1Ik<TOg<5>PBJF3j4G[*]P8cf%Fh
%H9,i4F$T=P5t^2H@Xlb;;KU\TB%^KZd(J]Vs23?7ZHGM%HfF>'8FnmE_$atCoUYpI?-4-W[I9Ksj&aLUZ6GC>f]TQLQ2BupHRmg$
%)'1KC+cfC21=%e'H*pl;``Vp4V:gLiqdt&VmHHa%4m30hMc%[uYVM^BIJ9LAN70p[b2,h3MYA[8:jsu?7kT=TmJM8TS5<s5j>kqc
%c5?(Df<sA^Z*O^D8=h?gj>CmJ+kXR8-=<.&L@V#"0h%XSN@_#P-"r>R./-+m'*DFc:/n[FXrC.VAc,eZ=p9t!8Se@$@TiT:HC@&t
%q=FhnPjm@NBU$?!=UlJ9G,#fZl*FSPI:@TraV^uCQ3oR;pVoALO'<6s]Q8)K\n1TlUh@A"T*LD5)^e7!nD5.4dsGS52Y:Eg3Sk]5
%ZB:1DnoFNphAe'm3!j!2Q]StlGP::,_sT`2cJ*\5_Vi)ti>2.Di2pqnMd$C'>dAu_Ahrr5JnRutTR#r#$rkW-Zm@SQkAinW($S)h
%e6"XuHGt,:#.nrA$nk-`_a?N[O!OeGVc<gca&b$sk5K?6dP/1jpqh[$R]qn^I"P6m)On&d8fn[\`[f#HiFC2gLH(f:NYl'"W=$3A
%"SrL'7(?AFRFPh;*P-Pl4nJTQZ%-JA%9]6pdF[5Z(Z3H\S$?mZ7$<$E1XC>*C8mVH\=#eWA%a\ir8r5TR$jl8GaOZc^7DmqOI9_t
%46R,emb$;t<Lor7/NGW5#O>VaAtH.8IQpWH7qUV8mk[lXb072]Ruc.SZ8;)Qb_OTHkt;EQ$RlC)91\tNo$6^lP%!\2aj#[8/K/qL
%&-USe?_NfmM.`n1_JM3Egf/pCCs9lm;WTX+ogMmGJgE\!P(,88T]IG`U$r=Xl[#`*<O&-Mo),!uB_-s\,DBsYZ5=<>c!rMVY/b<J
%4+"qoGa;u/eMh]!m@97Dg9O&=mtQ'A/uYcpK_mJP]i=[A;N<e=;AY64q-\Z;&O:>B7],BeDa8c'rk2(i.Cc!o4BJbtjh,*Rd5;Fk
%ZU6gZ53qc+.<$W?gU(*G=/6W&)#D7G.o2Z3i+1FbfimUY2RE&q8[>a#h:Ahb'*I?6g>"5.8bV[i)+h+>b#4C5;;U#)P%5/t`KOgE
%PaNe"Vh;.ce&ZE=XDh)D"D43r+\_%kR'KkU\*e.<3C8'/8]n@SCWfMrF.Skt-KVAnBAWM?n@tHWkCBpN-ft034Vpf7>P[6i>Djcg
%bm%<u1F^XU@l/!8U$O;mc'eB&^Fr\u/nR"Bk"kNR[@8^/4uhKKF41@[o6&?G;r"(gX,`i)jO,k/c#eE?bANR=c32Fho5d6'=P`^n
%&/Y#EgE)H+=[<H,goX)e1OT+R],KKoD/t]o\jL"c1(X-adHkRoYBO9!.>F>@;H]%H5*mq/B;OG.,ZZ=#mYH)^*r+`CBsaAa(G64*
%q/iB.aCc"1[0tNY.\'Od1S.gi7:f4$F%Lo:$9gFVAga-fS6;ADk-VbF`p'bUDf'0QDm-9\"U@e:GIMJ3IcF88R5$<.9A835hDs7"
%h*bRjCA$+?fl&Mi)d9XUn@"H!CTUdhma1@Vg4bU-4L>iD:LW$1m>aq'[[Q"*r,bR)'>i]]@J]2Xm!&3^Q2p[DQL$Q?]X2Hs7D5Vg
%W7>cH-2Y+*&f]/8SQd\:4R<rf2(Oh7I<P5$WR^SXJqA-G[#a)njM#%m!qoVQI=^H#O50'[AsDr21K%3bVFQ5tQE%+Go!E$EY\pAT
%m2A?=IGT%,m*>gtT1'"QE?IjpJY,=O?g#rY*%\7:H@<>JbBKT&-eE]8FNo6ISt0>l8C(jRY@f4+Ps&iBoB#qFatXNMc8_;fO5!]/
%Wi,`"Gi-/:cOLX9:pXd*?"3<9BE`00Z\,XPQH/A"DLF;*!l]G;2I6/iEB#VWDY@6TQSI`E[AN#CjWsQQF`D"D@e%B#]<"3&WkO_9
%5!/e3WXC@4Z-P&'c`lZAXMd;hIEuIOp,TG(jX0[Qk3hr6fOnidfFdb-M1$_i6-8DuE.MRGp=X$MfeT&9')V$sCFqqoH&6rm=ag-!
%ma;aF'TLM)eYe,p/haKU0!!=VZWU=<TA9nhGP=uKq]*%GQ^ucAf-f*+[)BmH]/_^&=tM2.cRu9E6\5)/@\4[>Pok'6o1nZD]32dS
%@\4AL,5e8\c!=JB(MQ&GqrU/t,)L_k=aeF.hD,cAm'?Igln8oT,dGZ*J5+&+U5=:&`+YVlNYsA):[GF:X&jaP:K1OXZ-P&'cP"O0
%N5Rol=jhLVQBp09*3bm^kL9-H`/)b;+.%ubmj@b]%;Ee-K)])4IHE`(fSD%18[;qId:Vk@UZ2$l.5*KWicU6Y^Pjk"[&<G\f<R>1
%J_)K&%P#N)Dt3FK=+o`gIX[LD-HVW$k4ZEc.Sed,%@]_8>ctOlVaenb-d<k)F+Kt@I+-c\H=m<WIA=q`/$L)Dk0bjEn;R2>K\)3q
%e'sD-RSBY"qI",ZZEk-gB[m8uA"3D+c/uS7c\4_./FEB,c\!+2I66`Ap$t?I?B0^ls3oSZg\lW9;l-!:s-kecqR`*oX]UT<YeU3V
%5!PU_jaVI!'S"L^F'\dC8Pdt8s/asNhO"9<520t"\?IKEh797]/b8&Y@?-+,P+2(\-kD;bGdp<>^Ilj,^?rkU3IQqHNUoP^j.*jP
%jYa/BdRmRWcH8;W$O`AbT"]/rJfDC(YUN,f.Gtg^aB'"7^Q^'3C#PF:WsKdMlQ4UBCVsiSluU1\q.?@i7f`BJTiM0<=7!9.:b.(Y
%-]$P@VB'`ojWn<\HNg<BBi[J,-i.:#M@=T8SN['77qg.kLZC5YiET7KOBcP/Dq,b]JYa`A]r^6'&L\U3:Z%%s0B!*2l\D`J0%b-%
%%_VFj9r"t-UK/3O?&>slb9,gLIfJnhR1u_K,fWrIFgaC/_06Xu5Wa!^aI).27sK4>A&I!cAj];'?Weoldr,T4MYg+@#gf:^$mR/N
%b;dLlgp-%>i>Y,C]`FPQj#f9n=UbnS:gC:Sk"_U@W[(tYO4VQXO-Y.m/.U\8'%Qp;qkl@4]H3D[n"6oGiI(=U4R:DjhS4>8o`ad^
%Ze1kU=9!\a)9pt6\$EdQJob&L:9(mKoq./[F,kVI<lc"Hc6o?55dMeT38FDo):%7ug\8]NFNQO<Hi.&8q6<g95[.9tn)N$D[0PU%
%OO!V!nh/cbPj`k0KVWmDP$UIC(C&r/A80md:I#<@<uUCpM;%cKp-#rTcnuGVrp9NAq"i3\gk]/jVX7gtIBCQE\Itn.h0.r)ZtDld
%ds!"$k#-nq3a\43f7k"AAbGuF,0fQomKf8Rjltdj1aB-kj7k]c[cadM>Um3NWgAjCj<`'pQZmd<Ij3DMcMD]b)JtL``;*SXC5f"q
%@WS:!ih:`L2Xt'tbKIN2F56<5oec\o[s.G9Wo`SI8'mQA)5_S.i0*YK$gEW1#*>FZi15'R'ADD9(,LB-%HkR`>/Fj<MRs/=`0#jG
%@tt:h-UbLhqqIIV/mZP2%W70_ej6^RPH8).%pkG$]\>LmH%rehjX(YaL5JA1@<\p^C$Gq%9&Rh:Ks=WVB&5LpI<T;qCmhK(gF,2>
%=YfSL%(T6\.=n8YlNZb/.TN@sS?`][E(%?04IJlJF5GQEF8BCF4Ck!eh$`+I=^!,'5eWVh;GY%h>tpZ)acS[FSMTlW0ek^E7X)2)
%Uru/RkFq(#,F<A_L9G4666sCO)NkW?c5^"&_Q2H`n^T'En&;-R]ng'&2qIm+cGTAdX\/Jf<)7;1(RA*e=:U=L&$MO./X<K]k,F?5
%VsE%u,pdZE[[j\Q;iinAPq>fr5Z4e$)`]#5&CNH@PEIOX@Gl@"2%Dt-n$*J%"W.'YGd*U^!):6ZT.k12(&^U7Y5#NXD;.4gC;uZN
%PCKB1"N<A'\"*=pYRR+,0cW%12ns)iJ,Hm1Ai&HPp(t5MS#V01^#+?5%ocOl!o-iSVoST=h"%!Wk7J-fLT4<M`a(C(#\'t?5bBc=
%Rc35RXdLlIq>5i75rjJeKRp],akjT+STQ`-M#gPd@s>bDKlrY%ZYO1(<Ee$6XdZa"]]*GYd3HENO]UkkXl$h-]9GgANLc'q`,(at
%Q@:IN7_ncsBlb;@kMf8f/S"hX\V*,oB%Hd['[i\9dricEYm50\CXq&MFO@#NlmELd\l658h!DM7K<ED@[%qL!q0g>EHNYbkcUIl&
%b@+3tg[#NrHX;lgrPF!-S.*f17TKca\+Aro>dplV[!A9S@EM78dcYFZfJW`,\`]B/ml-_.%N84]r>`f7S7h#.goDMsh:+%>,QSuY
%M'eQ=@'pqV;JrIZCQ`KII60+0qZ8GQC;k/:NZ0hLCS3gP[\>.k,&";A6%=*GZhp=%61`5GRL<gN4.pX=c!q!#Y$iAkO3U:ca^TG#
%GiuYOcmWhHOcnoe+47_`k>"U=m=]mOU01Kg4!i9c(Ybi0g/gn@hg@i:.%D6r>Sdk'LKaLK8bAL5W3.(0;.D6qk.PHT<dOU<8bAL5
%kf8j08P/QDO6F!*kFRjH9=co@0'd)&8gL2]jl%l&XO*H04d*k`>unJpF^W40/h9ng:$"%BXO%Rgqc@'(k[6t8qm+)LgihSiXDl.)
%)Ve\@=eT!"rFM<1g+-!K;'ia9e[R\)::6PZ_S\B0[JK<FLIQ/=HeY6"ABMA64EM*re2[)p(EU-t0"uuUW.QCeC?=cu6gmsUQ?(rX
%qe_*=F6%[#OG70Q<;uTFLN_CaIbUQ9O'nXh%h7a/\a=@t3sfKia$_t6T]WuXd/CDjQ%e]$<%^:<d+@OV_F+&#5gmjh/j+5O'CZkJ
%l[@`cmsNI#/j(sBMj]MEH\27:KnjseTq17ce^NZknBcSAD=*h]>^5HH8O[MYoWq'GlbZ#5n`N"#g?ZVn3US>$3$[>N[_iiL]X;Z`
%Gj#XV-DKgQ(EV9rd5ec7VUle(*r998bII&g4Zc,QhCj?:TmN#UOkCjjhnJT!#+MLE%c-<fYgqcViM$-cLDFZBc4KFp^O#j9=*iYB
%nkE-K\[7S/qqDVDk5l,0*kJBV1M5-\00HUmZL19co3Zb+%`L;jA=a/>h/>AsgF8XGjeCj[gEGNi9=XK<rO,)D^016J_g0_kQBqPf
%]^='):\20eE'[L[mtHP2mO;E=_F+(P%fMm,*Z#mCGu*CC00D'YYo[!1O;KeRKnjis\+pL7no`ob]@i15=iQ/Nm^F3_RCN5poj)Jt
%>VTLU][2@fo,Td_m0aFVacVl@Z'B7iim(eRpt]313A3L:JO5.[(67TV00F@GK.DL6C&lJp(EWE6-%>@l&)H&LAnJBbKnjhcCq;?5
%-e?"SiM!l+Y66=.Ic7!4F[*2p^O+q5*Raii>g@?JTjQPq_$^ePKd\R$iSfa8BY*S-De?fn&%0Ne^$X/X!41=3L[IaFqC_2f(EU0V
%p_].%d"R8;N`l=Khq)Zq(EU0V9WWIYC#o0.6hf=F=3+N3MdL_-p;oKi=4q#Ss(%ITNNBX6PSGGJlL`6FafO1/p<;c_pcIZP:c7*Z
%AbHU*Rlj:N<=uV%0!FX8d(k/H<DI6YD@pZfl%+j6.Wa;V[$a*4)6??gd>/[LK-4b9K#re3#aMsfMPLU%l3^"@Z^!?^mftY.LEX]u
%g'9%52qr\Bc`bpZWR!s`s-9MUhbS:OYA%;K51Z/R]R/Io8=S(+o_A(EK)b,m4c"KSCIlM-g[np#']b>K\C^XIpM-U/4VhqhQ`Ur#
%lT3mKMqmA+>k'%\H%Gn?h2U:Bm@^j#msi$,?`TsX^2O^t3SB6Xf_D&BqY!ab,c9tu"#kI@D;b6/WM\@LbNa4(SUB9'1@JT%aXoEZ
%99o+(H)gen32#tukf%6-.`Y%hkm"8ZEVN\8O88XiR?j1aRG?)`DURm6*)[I>4u/o'irIoN-\q(JOA5PRS+fE+EisCG6nGZ*eE7$A
%[lJl5=4_K)7gF54_AIh):SOTr)[X*9[2lHi>%cg[qo`fO5K]Y0M)*l`1u)jNRjbuC5YY;h:=k9V#muJMmc+_t@'4m&\Oo:o:&+-m
%@+OIqQ=U2O4"KO_=OdpVUo3/Q:ge9daN+_cM)0]GR$>/)cYA:deS^6GHW[GnCV.Gp;SJ^kn52;V`tETK5I/,MloriYA,/TV*K)Sk
%FEDP[<ql9Rg&eg$1eoF1,0I4(Hf!R@$BFT]F.\)[EUN>Yjs=0A^>2<J@-D7:1eK6(-XM<SIlC7g:fM$>8!+97'>gG!Hoe.=UZ:#(
%$j[LCn53H.M93Pe.RX!@]oG=/J9r-La$Nu.=ZKD50ujn,h5?FToi5P)Q/hb,$G@Kr^SkF$9]0R+"*men*[H^UNfjk=6-Au\=_qd_
%16uO,Km2o%D>;LbrX7gIS?*UC]8G4jasZMp#ObnrH]Z765goOl>tQgY,P6GbbbAaW_BJZV(k`L:;JdTo3jfAjAUnr#2WhT&_m;s-
%>n#1>Kh%[SV/[4iL^tR\.->5KVcW@roM+u&/V2+5>QOr$VO9gtS\R$PAaV$m*h\o&]rAAbGFHOrY^)(j2I"La[mF:ITB:Ju=>H6i
%BLpc("Ds#]Z\j//1>TR#N*hZin5Q$>$02htK+tJs2[[*rkiQZS/KPCCQb!))&e6[\Ioq%M^Eaj1R7-)DUX$q,X4'#kd).se3[X(e
%dCQanC-]W":\a@0/-+`e8W\/(cuf]1"2n9maLh@5]8snV*V2,DWo/);7/i\VJ9N&78`A3TS*=71?5qUn@Ig32IKmT/EUp7J.;UMu
%dB,-,GO!PleW0LaSPp?I4g0jBcL+r&;97XqKXFS65#ohV[\=`0rRb+qX2KG1U_<.PSh%f5H&7uu(7:jK,=P?K18p+ek&P^rC#ZQ_
%8<U.c4eKBnpcD<mOsSm.]fX+0kC0W0[Q;.Xh:fF$Eeh+<#RC?cLW+3Ra&L2N40-b,U\cA'AsB"j'T>4_5c@Olf=iLhR6?C][[MV!
%Pg,81U$TB6Km)&\f:ea)mkM2UZ]>0Q6b@0s-F>"fm"KJjeeY:.LNZSmS"\Zij3piuEfBSIjbSZ4-ufk3rj@/E]!'B@RUSA[ZWF0V
%^/Dln^jMB)lV(:<Hnc?,qLuA^d#i\P$'ZV/M;03J,J;e@dY*+iG(WSX^6&o=N\em6ojp1nPI)*qe6*%0LD1skZ<95me'2;9S/d]'
%VnJ`.=3um3*',Ss1cg"^pec2rM0hocEsV>FHdG2BCmqTYXE_EcGjXX^7_6hc;&!A%gp,h@8DAGT,qN(;+\M?Ubc,n,YfXaCq&6g#
%i+%Jj66Z7Kq-L",7Z<TZN)^+s^N4snmJ31]AJ%k0U1*37jb,I"<N$iNP0qRe\FFZa/Ec^1!T!7YQ-[4:KMV*XNTd%F;%0qb/#A__
%lXKVUP)dCXVHT;'4>N\SEo`rtGWH-!Dbf3+Q;)FqCJ]9-p+2A14mjGFcOEET@SkDJ^oJptg"e')4`7KXi_/^FnGHDB5O6\.?b&i?
%ROM9$46(@d8*?.;^_Jp2pL8_rfG!@g"bSku\(0uXPjI27F-kK;.%tI`-',XJl87-/^\0=@9!qhR?+Os/g/o#AAu$m'NE6?\"a%M*
%7^kqd2GGS/[sl4/e*4!(o#p*NhVC<X?Kbnm*&)'(fkE9V0s/O5.A5]H=-V`0P_1C,08A68M7a.5**iQi>Fg.#*^?:#l(-(8FOi=F
%\*i,Fk$b(\=PVZcmcH-[m$A6aUX>G?cN$V8/)Qfemo.pcQKIo40sbl$Yg1hQFqV&Tj^=.tA,/bRW&@L8heo,dNfJ:dA%1Z,p"dI`
%kcXih^)tXk^2G"m*k4c2m<j;4(ZdXO'J!)+eUA*rkJk&nl*`shC3Y+>k60aZn)IEL=#7h8l&OTHZ!Un!d=5ZiLtlTPT`,REK4aI>
%cfR^5U+X-1=$M`th=8Ze\$f1u/OX=%g>3FGe`tP"B!QKFgZO26i2">,^;TC,asF$l?5btF4G,ZIcgLJ/D]b[q"1=U9&)2>^-6(2N
%'8-`ED:q"5TX)8r0b6Tq==E7BZ2S5f/]PeO1#).QS,!9tc.K;4mkjDi?tdP8Ag"Qk`9>Ei=Y"p4Bm%qPN7YjrZ).:GWFr^,r3eg_
%C#A#3Xt3oLFj;Afk83G7`WH7.-t"U)a-?96W%ss/jqlip%2bQ(0kLZ2o07!V;Z50?gT@Zu.;^dk%f=`IFTtH"ZEDX,9`^FY-j122
%pMqt@8FQP-m!WMn'Z[ZTG<ZW<@;mK+W#Tb!#VaoJ!Cq+E+ClF\?k[qVq==OYGH\ETH[8.5Bgs#d_<9PH\K%S*>uP$;f+)T"NINQ$
%5NAnqU;*9^FibZ]q#8DPa#D;XZN]O[a7=up.(@7Ch"^T$j(D+ni2=j?h^BF.*^BJYi<RC^*e4/P*]NllH*n'9#/q8NSD?9Lpsj'(
%DEN["AjZf8:;0kiH$1&*s%Au5G2\4WQXfsXig9-5G2i)cn'X_3+t$\51\p=CG7=I2>DKQ"^@h9#kR?A#`OF^iX,jNegVUFL]lW/u
%O5I])lgX$+.mKk+IpG[eGlRIVH[b:cNc]0bGBV_b:0i,=qd8esT&0D0l/p=\5JFW!\+XQ*mh[s89"BUQ77Ytg"oPZMRs`I9.clgD
%^#t&9JQcp9f6",HY>;6=XWHe#+K\e)>**ubh]+q]=S>5QXgM0im7T.cO.Z:=i?,c'G2eU1Ia3mUEV:3`J"Kq?A_L=*)>F'riGnbd
%NMj*cT>b_DgqP]La34X/puIjd2]_;u\Q`sDOK7MP\9e(sSbjMf=*+;`T7;6@>=8Ddq<RM/3r/FCae+#7a3T/3it^E0GOG@g)^!U7
%0B^'#."EUl"S'+%9tMNpeNph`Rs)QMmLWYs8H(,`J%G4JKu\\7rCOa'k,fB$g*^P4mJ"l\D0O()hXcH_CI[/`K[&+e?='De#!;51
%(Pe7Tli@(%+a2T&Q[aJ]O#N_:hii?<^2mi0ME>\*.sLYRVAjjWF*>Vfa4p3A7sp.VLRklr3BQ<2b1@V%YT.MXXX%#73FjY]Zt8-@
%m#Z?Om0FnJR7#QAi!qq`^d`_MkADZa&0%m"BklFgD_BlBjPlRlb_:u0T7:nSo(gas1@<;LF73AJIJ*CH(U'[-5.U1SQ[cYpjlm<M
%5(31<rOQ6_j8OreQd;;8iidfV52SDsZgbaI_0T?GS]\3,O2fA'&aZ90/JBA=ph1spG&<Q;l5K@NV:.SbY.9LRe"*!$4)O/pTDl3?
%=L\0Gr-eNXoBQ$H2EpT!<SWprqs$V"g:AhpQg_I*ZgYp4C%ee1ZkIA,2hg;Y;uHLFb`IC(ZUS0=^9dEYo@NoXcGE/.f"&h0s7:?M
%o>P'457cYa!7'\2_Zm3Rh;rG#q4":r^\Hnl^\t[,qiX0L]lRG-3d5.<p[+o`H0<-.KB(j[>]u=WJ=.A=r3o1Q7NMJ^YO[AXH`aFF
%_A\MPmsOuF#O._qHL1?R@33a;/FrcnXOc)D(4#orQEOH;,4GQKbs?aL7G`NJ=7HbAi>ClU>JhX<Vl(P\OnX?6J<O#:jQ7##IfAuR
%+MBrb!%@>fB%'#pc/puG2i%*fiKM%.;tKMY\EJ<EKK"eN4u>C)SUUTs/,)-3Du8q\GL8O!n)J=u3hb=+nm7^./)/qU1VL<GFn!jF
%N-1HYdhhaBqf?__^O=jb1jB86*In+?UHY(<eQh2[:ACrbNV7OCEcp7;^h/)p]3-4_BHJh^8Z%2D4N6Pj^%77Gq<1^G7`,Q0iK(_j
%(iLd+gYG(i[C4t"57R+dU.HME55s]6qn"Ik]K"(ooqdO@?23R3>uB<O?^3iLO`pNQPMJ*TR!`o96p%@95.\k;!KH*ETM]ohhgP:M
%-Q).7pqs60W_OpRC\-r`-YKV29`O@R>Mm\CoFpuU]_T5XO5WGO$qtm.G]]/Ci]+[F\B\]2p>+KZen,)dqSm>2__$,Z4m=<PJfd\'
%>ONU48c8^\LN%Dp%iE^_"283p!Rc8'r9T>*HfFq],eWp?ds_oF$>Q-rquZcAK>6pOM%a_Im[jH#mSoa(efAH&f&OYZkpE+[T&]E]
%hL>*uSUsK^5OR^ng(2ZaJ,<u;c(Hn1m?0[$o;B@4H#PG'E#uGP]s61$GXpkcNnjU(q-83H>og;C[]>J*VED)DYn"-I;W#<q5p<Vs
%qdABGq3/)`Z'a?+I33Z?s7#YX?=^Pt]+2i@kIuA+8pcg>RAkge+!Q?77sP^HB)V[EPEBq`C0hq9^Q3hjY.chp*P?B$\31@Dc;+lC
%k3`_jMdZQKL>2;rK2@ueDpMi6bHApCiSN@b"2)n63#;CYD9omsjSZRG+*S`qH>Bbfm*1"-%^i]>/A!jO"nq.i[QXAQc2I(G3RMQD
%?2ihi?S([9r'sQ.[\12-je[F=[shHWglaa9T=Htm+:)&?glqX%Zt4IIak9GDF-gjDm5L%[6+G@$/F9`2]uY#fm4X"`fkDi.g1a1j
%@_#/.pcFhWs1J$`T)CY+a/P?"@(U?k?0n?DSqe<(JeT22d`YD*WSu]=DHlJ=Ue`SI4nf\#ViG^fdjWuHD$Ps_[53`?bSqYSg[NME
%L-tC_nM?f/4MqREj:uAUA*:09'WCA'FJh"ZBok`-ohM-[q:UraYN^s0m$V40q1-k`Q@Sc-l^F':M/qas'XoGo^cun7rUehS1,"ap
%KeFG,61NQJ-_P'XgM"?>KsUX.cX35ic3uIL2I8>KoHbik0iFqf8b8oUZZl3&rR6B`$rYhDf\Dkm@4o+TqUsODr1!0SEcLS+TA'9_
%5;q]?L[Uk([10nI_p'ui57G7E#u>RY:5Of&rj8OdrUB0_(Ym@ZhR%OjZ\*@t=UNZl?V\KPqK^94g3tiMCMS1W#.*/>g$Odn@F]dT
%Q6$CFIJu8Cm;q$Rq"uYGL<&JUhtl1K9H6JUh7$QkksiHLHoXa)FXPLBGde1rhRrK"qTGjrT5FV@Fnt(`a1n!1oMe;1]RflnD%"QY
%N\7l+f<2isH:PSnq0_N,^)+<Hiq(LQh"gGpgZ=c[?bCXT_3NdL5;RNh43J.W5J6d]6C/VfU[RpIQXTBPQd=hYdJ+[:L[O`rRlG->
%S3>HnVo^U?q7RkFi[<LB"b+?o`@(H&pHJiKj3"upP5KX<Fa7Vh3Q&>PG0f#'rD-7-#:')erRbbphY+iO>lO]HFsqh>/bUWhBa@me
%pr-H=cIA%B??k(LrT<?1I`>/2*ZaPr?g'#brb6b$N?R_Bpqq4IXo@^OT42,VOFM.r"!ddMg]->hT=aVd5[3G(K"2JAIeBVBDf&fE
%>u"_>HKE/uV9,LqO.t=<G:kW-eA(h9HTrZ"o!Zt6m$jlO.`X`@R]"c#VFb.XI[QYj8^lbSm$F\sH7`j"a2g-F:T!7mdkq*^#KL//
%WS31d<rP7/o>SV<Vk6/$nB6I)P;C6cHhZ0.B.mT#p8c7.T3QfUZh*;(s$"3qAGa?@S]B&(k9agpI^+1sHARu4[\)@4R5Dt+:U<d#
%dDjqrLI2uC3PV9qN6=H;%tD@f`m+8H?N/X5qHsp+GLBiF+-8]pC(Sd=:IAW)IXU]9^jX\lVdGtk!WfRLa#D3Oa'C[EnM5(1hG0,L
%^UNa^eL1/3Dse-siglW7hYSD-J+)Bb5<eo,_T2?&#NaZdhb:4;\K/Duo(;h6k47o?\%]NOrl+W@\I[hJ<;+M0m`A/bB_5@tUgD9>
%Q="RCIfB&eQX2oVnECD[F1Hue]8Z,#XD4=&`.Baq1\*<nM$7Ib\PLh[:Fmn-m;(:U:Fmn-mG;3^5-^bSW!@_kqF&AN]fFES33,<M
%\n83cQX`&\ib4Dl03Q?B[JAtO9@biiCMqmnXCGqRm_kleXCLJKr".GP@k>kNck0^QaX*$ETDnEWl"mNXrT'^OnVrT&r;=%KYJZ]f
%2o#+U=`Z>^10`Z2j6s_Z@D.ijHh+^GdG99N1Nlt$ptj7k40G3I=/\P1heD)W;2q+4QM.X4:!re1GEo[3buGq`i:YFQmY0j\XsV\W
%3)q=ZBnb[#TRJ!1U+YBUF/Q.QgBVJ&G5M/`H/`V@c*]"ba\[Y&9"ko7iK$oVBO3d4X/&KdR<m-%/+db(J,&dAoe1[34T;<mloEVG
%S'AGABNstY$e.W'5eQn?AL]PVh#\ZoLU9<rCmrNh^%]J3[amhR1sP1];r&CAEgk`QKq5j^Ut$h3-j9:oIe^rDXMcK44I_)5dl;V@
%[a$r.kJ'&1o(KBtVj?;))XdSJnRra!S13`EUha`,?e@05W,8_V?@9GI."8i[.d<Oq4>rPbrUuWa<u1Wl^%pgd.t[ieM0d>u"AiHT
%rIa\`Fog)?V\UJ\cX+A4orYb)Qe?XISmCR?gM]<gf_=po`#PhD./?t_h$7#qIs8fFrU+l11ssKZYY%M'aYp*ZZ88E4r55j&OF5qM
%lNGe0kDR.%_taF>4Q)e0Q!2,5;2i3WAhc@MaaR?J?$8keqXOQ9bCT+uYLqs=1QRS0Z_R9[BR\4TK1Yk+WP@%Z!oqDY,])>O&!0mP
%&(?NKGlSl0!<LtSD[n,Qr8sVIL4MuXT!Khg#NK)=OM,:WBmEM4fd-^0@tF!<Z15b?+q]-5#M9+L)f"7o:6,"P6jJ?XqT2Zkm%a%-
%oUa*t_keH"1)fi\+U=\j8#&^@_M_+^5Mt)p#JS:4UCP-lLCMnF&%b47nhp=;ETZ>fkBr=XIRa'32ee'5@h$<;baCWj=E[-Y%/,s6
%c(9@-]uXY)dj8%*#5=c)=@@P,3U50V@hq*b`h^f.qQNW:k/%.%KSl@@>p&<jff=EQqM-/2c@,-IWS-IkI-fbhXF9O%,<,Y5e'%-c
%rSHl,dK4*ddh_i539$&\44kkM22=6iB33h6HJ^:I@?11.MZTj7Be-iP>C@'@470+6pt/j[n))b[XaN>1+SrVYgo(5$8R$?ngmLM>
%@W4oNUM_YBh/cfE?./VPLg*@1fb:]hQaBt]6-BTX)WtS8??es-fqI*t_9E3d^H@#6p6DObMSc!//U_YVoBn7RrC.pkbT3U)*hD(R
%OR4tSeD-FZO]QuopKhq'I(JpZ=eXaP^>\Kb]76^<IoLdlLM+Ab7W_7<781PL2.0fq9n>7[@5/nYg&,u)B,fr^UeMd]D!8&e4PN_B
%?$[n!j4/t'Nu)Du[_ndkR*L=KCqeF5gO;71[QX5Im>5\LnU.F9cMcl'TDQBk_*]/[?N7EG_c<n@rG_)qT!e<V+`"7uA%eZ'PC`<9
%;F&H@6aO@F@=2P6\Tf]CH)ThJAkp[nN17$1Z`BT8"S-ahE=IKC/m.6[qrLb].mEk&X9tGA7P)GAhisG1/0AV#Y+L.*ceeHVG=[HA
%:Ck=88ecVfCZ`_:WV`,-n`c!fFUmtcH:Z$/(R*K?`EHi;O#Qh"Eid#cYJ%>nQZGFaP96(9C\dJbKm.^S]R9\Wqo:e(h/@0!PB909
%m)(o'bZmNEmY1abm_C9#mo/>jD:,;/?_)&jqKq*<HZ/6H8bqU4gO)lmIWQ[]lV?$shHf%;F?cu3\l?5S^Y`Rg)m&cV^OCO<4oY>&
%VYfVuR@!$,Hft=X#9@sTI6[MEO2q2>AI/;"`h.1ohWFQ&kn'B(Z[W_sMk>J\mD!e5qh8DKr't6]Zkj9[]PG-Oma"FR\(_LEr`e#4
%SG<$JX/A^An8A5Oj7O?mJ%G/N<RT=)ml\eUUCU-jpc&kgCS!LsftHqN+7J.FfK8j:+]5as&biqZjmi:XbYstfP,9mUT"k&Q+,P1o
%mJQP5n^cNGm6!Q*R[r[B)>QMpS*S#(13#%k0+k<jpPuq1io/0i3tE_4jCAX!l^b?uT0C$f@/KbP-]d^[rR^*MgV1A+p!r`YPB.E9
%oH!c"]9<m`-?D[@/q5q(E9eO'oZj_nbiBuIq=]:lLl6c@k>133Bm%Erq=\N[2$OrIeC>IQOrpbWc=Qq3nXoa;IHFA(Tup;Jo'K`T
%UTYnjrsQSi,X;5SD>uDsAo_DPh%++<s-W`Sk-<NiQWLQ6R#)freG[%V5Pt.15;`+-pSjeZS;RIgr8d5;a3Q+\mQNUSmcMggo=L'5
%H+7q`h"A\uSj0a^nFIH?mm"M_pj&@6'A"?+FnajIq^3b(^NfbM_;emG4h(7Jl/S>4?iK@%q:W-QbiJ-8S\#DVIJ+lakCCllIlHiQ
%J+2INXN/l2i=GUG4k*E54_6!R00OS9nidSVD#aK!&"`/>h>>GE0-9#;5KqHQ_oe$9fsR@U^\k\@MTtn1r*.K3k>kd,DFKEa-Uo0h
%Og4NMgHuIkY;Dd;V1%3A;SRKrs7riKFm>9@a'5)od_B]`phT&N?glu+5.g^am\=FN'[/_Q0G/qmY2+MRs5D8P:[UF#fq[T1__cMT
%gCaa>?+P,t>K$3Z-dV6J9$@Z8B[_2#:WdBT6HC@$I$s+2''.VJGCmKniZGVks56Mc+/7:MoKDTl^<k7>,b=m(d_-&\B3qm>P7@@q
%+mE7%H>MeH8DHWQf.ZP[0q(-F_lG6X4s"g_5?rNEoD&;tGG"nmRI!+[C!TR,.ZY,kAm.gN)*dnZ1=\Y#9"]_TBOWDC5ZNcB,cZ`&
%`*&slpstuUgbanMbHXW8(N\342/$sZ[0D%gnb:]=s%(4\,imi]6G?X7i(FZBYH0@dS6W_:JmA3\s4#/IPETq"Too;oS>lJH5A4np
%X06juYC!4Nj,304g:F1Q?MelpVHIN["c&L<.HZ:ToL;MD:87Y8ebRm75D52i>U,W\PfqP[b87/,k`]j^jJCP?61`[3=XIY0h"NP[
%3nM?s3pIE:_l0n!5t;rCd8?gc?"%"J(8(-Q&+YO;^5]^!'-<7UnSmb/2Cpb)%@^Y&B[1IBFhcM<0&!7^fMNW2Ef$-t8[7d1p[[i.
%5O'(>q&u*_XU_qpWUURA)W[f$\uAG_c!/(t);_I*mpj"QXpZ8WGKsY?nsNH5#@0)4ho]bi_EmKi]bB3j#9@84AiC1U-1/7a`bAr.
%dVO]`>Jk'5Y&!J&(iPu2U5_/MmZ*GT2hfIn[2c0LnfG[lX,_lW6NLt4p=&#gY9>Ao&p_sG>S`g<L<VJ7Bnhl*)Y>c@3nHe>F3Kd<
%/2Q/45Ar,sM%.;b&,i.iXC9_9,lcsakW!];Z"lSse`]EE=[mHN1iEhmAU(QD^5qg8\LuU/CCM8ibVYBSNA9u@L>k"C8%0kYWPnuM
%g<'&%K2+00*^,:X:!U1%gP+4\6*#qRXgX3@mG0br]T+rGJ;MJsB:VR4Oq'DS^;+-dd)QrX>GfDS^K@<j>!M,.1i(qd2KNP;F6d89
%D=6pPg)N8qP-#*\a/]DrWS-mWCR`r9El5<qC..8nlVs]nM"8EsS(k0o\i"/dENup2X7"e'pO!osop14^+rE:A\Y4/Y1%WEQa6R7d
%nBHQ$BR+f^=+k7LpOb_d!9n)SU,<FL[t`-_\63n)`G"::#<LjX$Eq,/I#bSVCc.Gs2TbNfq&ou9&JAXJS",S(m6n7QCGBBflD?No
%2K'%oATVUGD00[1f"!EeTVH=0%_<qG<U/^;H(8=tP]DirOb9O^,D1_qX)6@8RS;jsaMtQcS*701]JXMkn]dO"5/pgi\nIj6T$f3;
%?]'lt=,o-WkNBjd\cp(^3S27jVoFCi4m/!_9O"jU]JXNfkbPbK0(.=Pf0pX"Xd)!%bMFikZeX:rk\.J7Ca[`&l4u-i?_'o.e?\%l
%DEUj)@_;N-[>W:6_e'eDXL[e0]QL@b*Ha,+AXm#A<%5J=:%q/\Q%PWe>*TJS3m%YFUX%=n$cH\Ro$kpl6ZX,%D[i1IX3I+15/pgi
%\nIjnlAe_3CD',hHDp!5PcNX&q,)pGK9lJ`oJr<Z&[q&[asXgUc\BF$X^O$28)N+r1#=tC72p?I4C*"%EEd\VJkA-cb[1$6]1&6i
%(G][UlUG%>-<Aa0QEAc`FHgBA#0gAiAe)"[me[i>Sa3!Z>/nBa/a<QU9htprFPNthh%*YR$OdobUCGmOX!e5:=;7.Lh17I92K'%o
%AT5!<^5qg8\LuTtCZKmk#"kU(&[MsNU5[KeVAaS9T[W417W!,Zg8I.SDRa2OQToS9Te5oS%@Xb\bqd"9F5P#_lWb5eC:U`4O#bD3
%ktI#(<&n\*LN[RbSb"M]qq":X6m-dK*H2Fu\ZUk8>Jk%j+.@VIeZ`EH>Sh8,:.LQ15FR.0Q='B=Pm_P[Y4_M.W9'J,D:D.'1p(],
%XkI#A$i,tkc!/(tNj!6dq\X7Bl_9A"45P[#R!A$(dISouMX3VK44@m`Nn:`Kfg,8=+m1<1ZI6!+26OP'SWdYkgXa"pCmMo23OUAR
%I>kY\FjYppf/N0g,5*LO%oH(WL*kfN(;Ob5H@9;QEkSt@l6;dDB_G;@KA,.<c:`3q2K'%oAULiH^5qg8\Lr!R"ns94SLX)F)0MeU
%=p>FK5"=?bV9r.E]"H_*BJs<+[o#Y0[W^$12/JTKc'nMn``qW;BVUluER`O\V2eDC;,;G'\=@7W%Rs1#6Uol9Cdmc&Ft61En#f$E
%(7VdfbqcY/F5P#_lWb6C^bP.3b;N3j-+ZE!gj)]C@62raWPTf#&UB_4^p@@S_9fbGVKT:Nctis3>Jk%_YA<S'(iPu2U(&"n!Z?f1
%>#h/*589Z"0:UbCO.$C\7P3%C[o%op9GY3g'Wn6SpS"XGc!/(t);hO+mpj"QY)>2Q=TaCjN#5pWd4o2BhZ_XMo:r2&Jaa-@]f,.(
%_Pj-rKSOE6CJPC[d(2)J(#<NRg@m;X3nK"E\Q\[DM-XV9k!Zbg]W4I%.?=;#;kmWr/pZZ,h58Kg87^U%JE=1]aDR\oCY1,3lWa5r
%7N7-/[fJS.#qQj4"+s1n^]DU\Z-3`Gl37G$\^:U4b'A(p],!8tRq.TB60m*pQ"0,`q]<a]kB^fO:6@>8kU=9/AS3h7_pBA^S^Qt+
%f73i6CU%St%W7!CXrZ;uD8[%#O[8<aYZ1nZ\+Ui$2@c?tj"5!_Q;47O:=U#Q`HjI-@&b(]0RZPS?os>kZ"jl.TGql;Eud)U%@^pN
%Zf\u_n^b6'g8M%n2GlsoQf"\RBnJLP];hDD2:W+a7Q*mY[@>b*34pB&<GmH7FS<p^[t_"?3jbnih=iV[3pbg<`$-ndm+ZR8i`3[q
%lB3lm7HIL`^fU\V,opco&u^59daHBZ?#8@92KN,/F5P#_lWb7^E8cc8J]d9FE[;K2k=<]7RcdT&g1WodOdS\2nrqj!*,L-kSG]I2
%CY1,3l<F,q7N7-/pB+,U>oG`$WhCGq^m#='LcH3s#a"?h1Vsgl:%fh0D)t38c#21H2/JQZc'nMn``qW;kQVse*oIVDH^<]5cnX<`
%TN5u@hV=i/[*b1R`6OK/77F1mXBlgImi/`jNA@B6Z%%)$D=DL/``Vkf'qq*WD^ME7edmmE06F_L#q+I,[#4cHJ"i.bb1&/#`TF:2
%Z]&SKh"NP[3nHeZemq*\GEbjt[jL^d0V.0=oua+Ghg+.u$Cm!uh)`MPeBoVM\ln@MYa*+@XaLGLNPjrVOk.G^UWdIn>[J`!;<C@e
%e58:d;CD<**N,l3PA!L(W-PXnCY12U@^?QfmF+&H5rVp@#W\BnX1->`d(HqNj50&IMnq`k[_W0d;UK3Ue7`?oN3LT2[t_"EWa0Dt
%_._luq0o-UW*<(fWb//%QJ1D9UjBND6!YLFPd;7$Nb2-K6?d'2Ze2oJCmJM7=bdadBq4L^+)Gap<BmU[l0?Zb%CV2FBZsE\S#14k
%>OAe@MINq#X]r\DNiKM\*K2ldTC59"o;\fi0`$E<8Qn'Mo93:i9D^]JNjNb4UJJoa=rXJ3oIgZB[t`-_XBBW%a*?oT(Ys&l<cU7+
%+^$[L]II?BiUT%s!i.m23mEB[WpC<!BnHj&X]r\D)-,SJG;.`1I(g\9dn%,Bfr>sILht66*lb$8Bce)O8-<+Q&G91J$FtoG8/#1e
%TQt>*/>GOQ]9c\;UQ'=8r7h<#NWM>4LRg#Ic5%O8o74/m\Cj`A%EeiG^,ksk%jj;Vnc"`!3tm!X_?Z[',kqIB`Fnc3&4@IZ!SJ(`
%J&MP3<W:24J*r2^q_.`tcc?h>qp2[2g<m[@C]#Q@G<bf7]A4P^k0hf!s"LJHm2_Y7p1P6;httH#9AL$Sg#6Q*5VMG,eP#Y@]2!bH
%q!m01481,;4M?+A!E]_&4c,/0"(gD$_hsnG,1KQTf5NkGkr\\7dP&XIgQ;"Y@K[&'L9*tChd:h#=JjHn%!!KPP44ZkmXg/164V[J
%1^?l[jZPM2O`M(%(eutW5o4l#jZMCR*#?(;j[I>qhJmh;9AA[G,kq],Td2Ol6Y's(nIS,NKK"3$"uu)n[S/;^"BP._;8;3@DSSl6
%eg)$mGSeA.1.2]f?$@bOS@+.6hZ7/VWUh:S-S<h5d;A@gYcB+;0)^Fjr!2'R&%_?SFQY.;c<:.lM]"o:Po(2k,s%j=9uO93\L'7s
%3_t+09^;8W1lL4;lU7hkh'^3o(h!jV-I$#\#"7MS0N8V^?3I2T9Sd>e%>LpjM1?#Vlf1PfaiPkN([24X"sQ*,7(B_Y=Q.Ih/(+g`
%CXm%<@eb2d>*`UKd[J?Ye=qb2-sNE.bI9KV;5Hje\rbtc!XoGXhi,"$!,9p`fER*DCBXDK;50l26@39-Wm`JMA+I1'9@5q5'sj$`
%_\Xj[.a988MiDs$qBmF;\:=nf.aXJ!Mj:^r,8*@^,#Y#W)EM@a:_de&"jS9u`RI%g&5,A(<i%qgI4oh%,D7MS[]&[NGL]d%M5^\H
%;;-!>+p*D*&oDu#<;oiW:*;S0`=UQJ:(?Q*TNB'PL79d<D<ODicu2L]7HD_H/F2`23BIG<12kA0j`81+D'NMFD*aD'I2i`M)#37!
%R%E$9]UXofD)!5HKe>fT+mr.[i"h=>gC[eIG?R5"%(D&*\89EI;5YP;<(^q\;$[SuHs1\JHofu?eb/jSWq]kKZuDMm[7XHn3'7J'
%YD)rXVN:_\2Hm%&7D0>2mG%iJ6g^USU!4Yf;UM$0\Er@BI9U=L2-)<O5iig@[=Q3D^l9ia4-4EdICYkC"70"((:CSrQualdgN3h>
%^K@4GT6!id3.7NjAa"9B7161&gEm'327sS/0eUieqfrfq*CG?p'lE2"c'ao1%h):bWKJTuLKY9V[H`mtfI.q-(cKth?rGr+Pia)%
%WTK;4-@ELs0;qfEmEQ(#:tfH!#XrU=pC@F6i$^+E]Z)Da<23i_B%pR)\gUFP6.-RsiC@%E7(FHr/9:fI3cH0/`'GpZOPu2>2uuU.
%\ICc50d%!YfYBU^m'InB%c;QQ+tsB&PZ:]Q$I`2(JS_K>6Z.IK`eb03CW0R2X[rW=!,]pI:jWpbDE//d+&4;4fGk>hV@*qu%FW?s
%:%,_O7fn/$gGh]fh*q;M+J2.8:$5koe^OW/`?@M/Pc158?3Iuf$5g>IaER4E<%;Da?QNJYm:js`CZH9XTItkW8JYX8%P3OZH^VpU
%P$97V3e0bQ8?IQt8_9Ie*ppT/p5k+5OHr7ifU0<K+p+gn#"`H,W`]I+D#[i4Srh$<".-DI;9$ebf#%<_!'SmSp-u51&]H6ffjsnl
%Ka.W1]5PRRrJ]bG309"KgTmffZAT:X2u&+=!>VI&::>rEmL14oR(OW,AU=J8Wfg`CA/E=g9Q'Bq,0"TL,CU0T(="7mKKoQS=h38A
%jKH"'SPFD&=?UKsN3kdhD(KlS4Cus,)YPeZQL1?>`4(@AP%.\Ui,kq[7O4R]C:_&hioGd_F<r&>fbX69QCWtp@OL&DGoX"qGqFX.
%Lq!$`_o#IpYnlo1"RZ@'V'"g]-9AA!>X+?47h4V3r2>AY)U/IV7fA!e2nLEH@8b[X^^klt<2R*l*UaM*XXPNgnX'f7?$I++d=leY
%9io3:i[hr0),6<k3&gnA89<5(//'WKgU&<4(o+6,"dEBJA1t`(Ur#ZuDDnVbo<u&&F$Z=Q#=gDg&iBMN[d!MYq5h62^S5LRl6g3'
%p2Y;_r#i&63SDA(WPbd`j%4H.$[:,28sj4I/GK2fi4Y<Wcpc#HOV?3&Yl>pOegV@UWa*tS&l]hF?0/s=k<2N"Ba:F:[1n`G;)bs8
%Sd9$YA"k+jM8nQiH$D[;6mOlHHUIE0"V!c*U)p^X,R;GMR'#-`/#;JQh,-0#@$4))-m>P)n1dcK;5Z)R1[mkU-++C>P)+W@hOUo#
%,c7B;2lpI[M<YQNB]:dBJ7<E)o<,qm-BTJX[di>WQ3);EhBuT(Mqk72%Ks6j<(>WA0=$4!B&aS_Eb_Qp<k0qbV8@p;EX:^ZrEbru
%/-b+e`\4q@S^g_N($Je\3G./X2_cb/2oGk9Eu2cO]!5sl5p'a0<t6MjAjn=LV;NUr]E=M&iZ][c'1G`D;t6H(&Q]_9U*r%Xm6S]^
%`dJ\(pK$3'UjIg(_0(=^_l8O!QpgB,>2)erZ7p8jK+N"EZ2>BK$U:N*%`7$(RF/"Jel%SS7TLoijVE`\#9_fC(=eG^>m-bc<8TkH
%Q_f'D2N$[Wdsh/)M9r%:RE.$g'ik@S;Si*lG16r?B(a_Y2h2r<q&\5KKf?096?.`W%A!T#rLpkJDV?EpZo\e5Fr(?^Y@55ETl.rO
%2a))'hZo#('fWC&86M,hj9GiE6HR$GSIeu"Z16PeT(3<%7aj3%,q`rh4_i\^^dY8,JR$K&$sC&3'A>4gicQpGiekRN)970cJ\U8/
%SIleg6j:DJWX$Y^LntjtFgi^$AsCrCD;31G8"V;K>@]Y5Yd.k[3TLbHOL)<NP+LT#TY4rXD5naAbQs=XhfM_0.Z.)\87OGpF,[d+
%6#usDU;]*mG]bNW<:Mfr=+gf+"9<5qZ?5<TUrZ*.%FkNjfP(1K,aPNI,6t%H'C6?B$C9*b1Vm[@8^[O18&Lf=gXOZkPtR.a>cRdt
%=c7[iU_d9tSB:os6rY,WQr<XJhN='?=g1&UQFig`])_^(k\_9q=)d$FOGu"&0lQSNKbBej>]1WXTShZsFfM$he<I%*eILRR-CCjY
%N6]o\7j`Yt)rhViJBM`>G'5OeU]9[)NJWK=:29.6M>)@f^p14,Eh^T5k?<r8jgO-d<9C:uO=]*".n#@JS,s:g(oL"*-MKT_O@)2L
%@J1!u=7qCR^t*msDdj?pod-W$#;eg)*@<Pm60rCP;93]G6FKh-)\M)"*ou<(%oamnB`]-BW3h$31I.run,^cu"SW8J:+f7m"\B4U
%XARC!-Igi#PlY+841_nE^\4,B^fTjf$dNg]n*EJ;U:F.bfRO2i)Q.lHbn?EF7V8;/H74E'df?"qK&gK+J[fmJa!p<eHP`1:^MmH+
%@,5Rd6:FpmoA'2n.Y>`p->GV$&KR%"W\p;m;/A[<2R$94HO&=qkIn2UQ?i%o9c)EG&0KEO"[Ej78c(=I,?=R#7/IL;em.G"_N@U8
%2ar,g]<>9p;>j*#*qUF?5Y]uf16;Z#4]#'uEsU.FAt(>Zd$.X"@?4pJCT#6L%ja1!jd:8p+%&WbBm2stWdufYXK&AC3)eRKa[DdK
%FUP5t$>Ed_5,:nK&:D0s&%jrgj`&tO)u'1;h!1Jk?%Y[/]>T"cD-MD\ocBs57Z?qA4@u[I_k.ER#$EM[frI"ZZ<Dp*e:h;kLMfQG
%\g;Pq@"Z/Hgk5reK\2f;^,Z]5iWV?C=-0t9g4L4i'_ZM"aJIP":nnr5ZnH^<W6--**CAkBb?eV']P`\%)cL9N.CEmLE\nHWF4$E4
%87f+Zl;A`1<a0d_q#3bcA-5smc\eS)!c&_B_CP+6ed3u$J#ZGi<aM0$1QVsVIY^;3-%t>6YHull32JVmO;RnoJ5btNA]c!^(i#_Q
%<Xli0g4:0s'qEu-@_oW;#&7]Zl<]aF/%0f&W&$"K9e3\+YK`%K+L%O;1*e8l^"50;Ic9+$^>I<t(eQM!(V]J0iIa@d+c-#'kK;i^
%6`borhZ>f"p?B-GI:d5l(TBCfdJ<"2#Z?>,`]i%Ws4eFqY`Jd9j.HpmceTXJ&&[CI.j:lq%e\\RrH9`F5+JW+T&4tmHiY'>"&d?h
%>C]R%'0C+CYCdX*jhiu',q0fsL^H[;^iL*Wf*9ei"U2^!Sk0?"@HeLATatZXm7gR%^keC,f<LC(WIiAV3#T5CT]%o0?7F52C$r)=
%C)4W2Ve<?8c`1;!;8XpTKc(Y@Trgq1V07//6l<i&^3qq-aJtG^U1+_mo)Jc+X:o4Wb4EJ#DsiT:P6j,fH48IHRTV.FCnprICCM<b
%:6@#i%Hg+/P[_V#=bMaH]]M[MGgT8E![?N5Z6<6adZ&m6o5*Nr9bYi'`[ijiMKmJP!1t0Ch>R,'YM#l7*?croHn!"XK'X`'Rc1<0
%:,`+-?.Nm[!8VlgQS&$h@VRuak(qTC:nYnr-#d9Ch",SrDK>H7-dQ`!Cd32k?^=7okfW5.UOV=,I-^g,K?8tpMq:10/,nYV:S'bu
%^Wk%HJXq!;?E[c%ro3ag*q%gO%;O:.Z92^N:i?:B[2YF11R@1Vac>@.B1u\(&0_rU`44A#cATCN4eW;u!LoLn-(Ie!*ImF/ap4'j
%?^h?E9B]S8M]QfpY@F5IE(G]m.NJTMBc:(\/US5J["T_ULE;r+=H1QCl$2ibaosAH9psE$gmgGNYP@c`nW@#AIHk#*,S]o@aXgV,
%:t6[U%7)3lRc><CTBs59@N[rabHin29I>ukg9[0L7'VXAm6l&K\!eP]O9(O^WCL#T2C\'a9Ltt*m1&+7'UBXM:!b$I7YVf`mtQbE
%gW6]D3.5E.-?1e$l,g8kVqIEYfSf2C0r$`h@8Nmf)`8:k9Et>X>Stj/?Acl0;[BHlXB\L2&JVNB2[G#[0RaQPK*j$Dhhj`(\dfjC
%'1.d?5;>T[DUZ\E)`GU''1G#>P4"uB;MJ@W^Yf\)=W*ILd;KNUCXHoff%X&V0(mK]i#*K&,unMlr$+N%Oe;qqYU-+q2K[Er;a>^l
%3'GOeaWr(_ChX)@%:\T8:_4AKVI1AB+==>Jgc"fa.0R6]I)L_D2%m%l.7EqKL)"\Uec=ipRQn>sGTO-YR+I."'G;G@Z>XEld?@#F
%M^UE4,.OR8_GmX('EPP>OiG"i$<.i;&6f3KE^YRH(#/]L#G:/d9;Q#k!<>C=[?tULrH#IN]j[$*%Hb#9!7IeZd8:=8gLsV6gDljT
%#6dn4+fiD*)7<>>*&9HA.`dP9H<)B0BZdRC.X4ZA*Y<K*'RrNTTf*b(aS/R;ou+Ti[p6plC$BQ5VQ;C_0j@%Z]CO9n5578/\\Sb>
%cr8U9&D%8tYZ\:D615,&.!?l&VMd1^=cO29*c?KS:n//nR(-!2ZrN=2M`+66-Z2p67E!'AQPmna!HIBGFJ1u$J=om+OX#bl8bPPc
%3%+nT,!QCC=`m"66W-Spni>X`lNDiL>Tjs*mmt:A^.8AoL8%GZ+J3>!5t"Kr(dt\dV-tC885"3_9;f^25S.r@d@,RXoth/Mm(,[t
%rTo,dF9-]T+`p4<C.J`ql+D*InG0:W+K0l9U8"7Y$JrT9CQ#K/MJ9,"6d>oWfa:5%c'OB>"4a`5c&LifS)HF"'_J@`OL&Y-,6T/f
%VKa4i0t,_&^b<'u!WE5SM7k+b4joT3N%/2?G"tPg-:=?M2<$e(/-o&(DFam#O3#1B7[5#Q"^I(<D)bU0)pgq->KI$=LJ>dcoP"6'
%eVa3N,%Ba'_ppMj!c3Y*;CL\_:N.8M4f\UB-iL,%,(Gu8lsUr=\[Ki'HdA9GI.;U3&Tr'8O+Gd4mStcH54*"50<p:\cja&U"Puc8
%58cWpD!\!=J6!\Z5K%1"k!<lsi_C$0#1D@pHgu!Z14\l$f3cM8TG&9c!(a*?jWQlZ$1S/&AJ=0Y0R^=2@0i7sW,RTN&-D;ooe[d(
%<[`6Gl'/k,<^J428b9rT8AWVS\HZgdn_n%UH,YFH0al1[QJ+"q@W=@-j.mQ!))]ZsC9c1k7QLc#+95XcP7Ec?-f&(&3.-5j\\UEg
%TQAPB65:cUJ+oH$+.QPX?&mpV,5A;%9?AG5<7s:0.mYZt+:(L#8o5_dAiC=08sk_*7msWHmA3'BEr!RC8l.@\r@,3;!>`IH(J^=;
%];il86V.0URYp#SniiebKOeE&f9NM]P:@)e!F)]jS2u$;H+\mI;d#FMWNt4(nq4.t1(SXcp>YCD(6DbOV#5:+<?<pn]iYmXG3[2"
%AL_l-\MtfNOWe=UpLi<k`0NXQn?2'I'3-k8qA!edE/CuriCQ2A_;8s,guNWO#%4NnM)n*a,o4P/`&6(=Qt;$=#9lk"ncQ"H,.%+J
%K#fp!3BY6:F?<Tq!h>L^0bL'mmA8PS+O`-tl1$MtYp$C$PiR55%ct.Qp#bRHS-6nF_;R?a)*Do&!KD6iW(HQ!6#?!OaKDGTk<sY3
%3E_!]4;Uj8'#`[0qHll?rl)k]qHK;]6_m1S6^uW"+EQ\4`.1*bVgQpcA:bM'$#M]8)OL)bKW8'C5]hXM'L79pG.Xg"k)%;C9'sg\
%QtEc3"=s'jR!,9.4-<Zk5#91)I*Lt3E7in_GX!i"N@b5W+oTisfgjDVq0:\08>bI>WeLaB-Ono7lCq1.]9JMfh)T]$b62l=ldg8W
%ER;'U+si=$aoTXVc!V(2q3NU&I?J'#&=0"f/ZH]=]:ag8rDi%,oQL9O<S=E$K<0OOof!H!I:4o)ir>kmFoXX94>8o?_bR!coZP1W
%Bg.K*n>J'XKMU[O4ZJ0*Uc;&VFiLZQ.iH62ocOaT<XpE$(L74GQPK'UOPuFT:*f$DmWaJ&!'Q0E.L4C1#S:M.'Vuf(RTINd*Xug6
%%;ge=/TP`FZI`Bm!49^r?q-\&joQA;ouoh%<e,iO6<t;.-<DY4O3"\#KITGNQC&_LP[[(mmXDF-OZ%6U^a,d02"+LC#Pk.Ggp5P.
%R@[KNr*>N?2)gI,&g_plFTZ3@pd-="A_3c]NDD#(Moi8-^(T)RXmlFp(E3)../@AU,j8=4&JB3Y6!Q^c5YVs&&fn#"J;>nkL.BZS
%f&CEP!(VZ[BY![;EANmVn8^Re-mI90p],D=!mCB>+_>n4JDIirH4)lm]WZk6-.<m,NboPs_R"bWL7,&D9]j*+\*qU9J;U4TYt-oC
%^)LeX9k,a((O1KTS%BMs8qY5TfqgEFC@dgOW\@ue7,[DORC<'TL;b+NQ%[XH*:ZSaJqLGF!2T\3.-fQ;"VREeUTC!Y/Wi^1Q)A\e
%$#U>i0OQUV.HI?l3$W0E@:djO$\OQr2s;BU%Zs0(0suhNpJKC7[p)1M,Q,f=0S,Xok`Ru[o>i:i)WL1Y+!ch69m"taLSoO.<I/"7
%VAp_bg6.X3`C#/0,Q4*/p^k&J-g=jWd?scs;2,LC-7>e/Acpfqe:mEiUZpk_?3'gfg0.mG=];-^eKZC[P%DF\a?E=X.jDF5>kWcM
%.nmqeJ)ELD+RAocmrR]V9]:1)K__Q(COWK"CKhI29;=]@U./oX'4(YD[S]$oL!fV=Q@_X-ZBrHq-3hD/e.pubc9XWc3692^J<.P8
%UBrla=mS?H<8XZ316V\D>%$<Oh8A)n\oB1A&g%Fo2cPRp<$Ps^>;TMs!G6:V>J)+6k)[NO[oRAF\S(FmZ=C]qNtTRCc?`T]b$-Ac
%'R2"!(P&h^e4.DAHN\'k(=tn<6.Va_6'pR?"%%\c#>gmmq[,F#Oj:294!8$:F/_tNa$URa5eAqY$W=4j/F'9^'SA1%i,E-l0p&0$
%!%i^'#HE"mW]38%=?@!QGUmK;lUX^efit_a9Eu[638MYgG;:-Lh'bO8A5;hu7A,t"=H7KhkGr"QWoY.WW'MsV&H[S_=?GTsEID&&
%J6<Jb=`GXh/-)&Ib;<;&+5qhq[T?cP]Z9(Ni<r"78N>k`<DE3r1WaRFXJtG+>N:/#2a-Je;]Um]%SN%P#ZUc3n^9!0V)g.\SRGBh
%]bo)p7bi+9W.)#'0)89Se-1A\?Ns"@hDHEuqj!+1XX[.1b""A?QkXCs(C)7d%':\n6=6C46NJSN77(u2j_!Hl;dli=e3%Wm.fiKT
%WZ=,UFs@$AYS1R<il4pkXq_+H!Gl.E-)d+?LQ3:r!AK:rOgH!;-'dHAjrCkOLh"s:O1bG@P$2_f67js#dI?u!T]lKab_'(0=7Y!j
%n*>p<F^gCGk@;JAk%siGm)qg0Pu:0p*0M.(([Y'q;f4X$ntdL$]rd917V34j"c_bS&i;6Y=p"WM\h&\H!se6D":I?=DLl4)-i,&j
%Wq^i*GkE$VAV'Fk.dC3GARSS6q&FFZ%**7n[ZW79C0ISAlU:t^f4)ZTpO/ZL4S%e'>o2`"`d4BpA6I_iF!e1.,j9a)PpfBF%(XJV
%iKF\0-$O^[3"8`0A2#:7I:.&n"A)g6*(GsVgodJZ'sKa8??O?+ZfK%+pE.mPVdVkD%Z3d7].pq&G)$Gb512fU%6GjZ3&eO:Z/VQ8
%LhgSpeB<T?)`Sf4\1Dp6Y^emXf:`"5>DKQWUn9ADLg=rumr=[U,Quh@s7<n8**K,Gg@99cGr`NAM-6=[*&'6+hY!DN]VMWfL]@&8
%nl:b3J5c.11,AprB"]s@Q"^A$,HF`FDoSH>#JgpQ$H2*"%7'(g]LA2M=<nC@WH(F[\!u_A\'.@,SZ0>'9JJd61G\8m]tpY0Vk;9%
%_^26+2P>^9*Pipr)sq!?_&nCd4d&qJ]F0OUBel+^PQF*?**>V*<QKJ3Qi[TYJ_c:];;eHGd#.0&#(@RP]]E&B1p[7@%5mo`%pTA$
%i=aTPEq&.OhD?(/rNHaqVXc'De%2`t!2C,TGU/WC>u*q3J-uSL<=<_ckpqiqe=mV7)B[N#mTcUHkY.,0M]8VFS$:hc".U!/SC=R*
%ogm.'QuW.-brAMYAGb7l`Zaj[g\TI*i[gV;5[U_NN!&`-.;&T1bdd*?oW]`DMEq\qeqoQj`C-gs>9hT+6LXp=aN<h.AW4%8_BAOl
%e1W8!=jY]U(8JjEE/,&@@u94MP[AONUhQ&/n/CErZA<,$@Qo[,W`\c84iQ\-,'`h^f'60rZ6sl\=<B*bk89V?:(^=SnI\b*f,uiM
%?#QQ"!'-iM7AqXlT09FFM/a1:BI.-&\Ag&gPDltQjBTS%LsgBQWKSqd0N5Kb4n<.n/6ocB/TCW8gi]FXE;C?SDL/+!l\JB7%V86[
%r#/9P6NJ_6K;f%uITbor/lqi[/AIU'g4;=.7MuF:d6rmbF<ZW3Jcmk^2lR.H>i6ff:DO9REotms!+'Aal9u!e;aupP4UYH62P*B;
%M?+5%.\mOp?lPq5CWeGP6(1]@"/kjrp[.4D?rn`hq@%^Mar!)MaMBdCD#5\C8H(1fgJnYXi':DZWM9$';.@)=ITu"cmFk^F_#U'A
%:XWZa&3SCIL\*Ti'j2WHCDu,Nd?le7&fHZ2Cf;Yu4(+\L6L1%JPN@`)9otK^'1<?F/JpAD_"2's=(u_AiDLHMC=;q<EC:F!?V"[)
%%`Ns?&gmU73g;M@0E<1dB*=A&AMJ9bJI#-D3sud\7.Hi_ocV\gT'<'eD+'$7CCj>c:6W7?0Ga_6WTo3fo5[$^228"J7AW*Z=e<p]
%*0X\=C30Lm"s.t-!!tpO=4D&N/O4e"/O1QU"KrD1A:c\f@_^jk84rFYg#Oteeq8O=*;-V.aNj':n81:$E5=$b!MdN9K:E)YO]%ZF
%?3%J;%m!]_&;t#M/-b#5]q^2hQ1D;t1`e$PRnTIY8JS4-pbFB(!)-g40a<AJ'B$`naZrjS%E4!4fAI2Yb`kecD#dIl8Km;dj@9@M
%U%Yud?8.?L%\41ZcqYba.,[1P=;`<[+;\\b5!:$e\>k@N0c7$bOg)#:>%PT_L2UgNObHiS]NG@/i9]/+E8Z[kR^'O`Z4/fC@lnl.
%c5o%MgU%30T9lg(20&ii\4;f3O9/pma?"X;<`lOj;V6R^"djuD"9c3;ZiLuB!l0G"+)ji1&A3gGlm@Ng'I$"4#L2W08>(/,V-DLP
%`qs^*KDH>e-cGdsAgqIn[BY@MKC"2:SV5fhB&m4e"S06O!oY<b!?O>(,DUU3oWN0`2MqY<+]+,&_kQ4;_7g!"2(9t7k<o>**#KS@
%gQ=m1:)u.QY`bf^77AfUh2jAY?0XTlJ;KC)o"Hr9/.81""grS%;_lAVna<e2pE@3O-u!oA=T)@a(oRo=ruC`(Xmi7k-`tnil6]RS
%n]5K_m@A4`L6OJ("Z)5\Rklmup-78'T/*Q\=VPIl5WWV6C^!36(J\Fk-*DF@7Ze#0-m3DYCndQ.<a8EhmqlT:".(.q@L//+<CE(/
%3:a9n$?1",=)UJT<7F[)jK&b`W*,GEb44M!SB-:o6+]j0aebiKfR%9T(A\X@0rF$.k[sgpSHXd@90A`Ji2,Q^*n"'H=N`)[Q!Up@
%=2A=O&k+Pi_!P1n(pJ%&ED$Lb&"Aio@cWm@cS@*T^@L-KKmUaf_-:(Bp5XcXR2K$@kl44h#.H?jeIcmqRW:cbhh)>>Go..M(>W0S
%KF'[Kj*[d>AJ(n7*>FDtmp*XW"j/;H4lD,$Dd3W@k*W,)cHurZO=?%%;0%Nu[bNtWD0#B4CE%tt/$q+t9>S"48$7*uk4`7-DW)#.
%'NO5X_\8mJ!fN!eA5Vl:PXP[bfc`1DnlLlM?Ws3)ld$cf*osM8fG>c;\b>j+(R#JcmMlQK=]Dj"ad<9f2NdS4P:*b'M*k`R=#1,p
%!^p$kBWLb7GgK<OQe?taU6'#OFVQGb"/,TddhGXd1r2p"74YBHAkT2O>`2P[FA^u0f"7*#JH`:&=JLU_nD1?4,jH="BnQm+Gk%_?
%-=7Cm>a#>"+LSN"]f!TF`G05H]ZRr?dB0,<d.ENU+\C<2^0U$`gn]nE:'K$EJS%]%N#J*%#[_>PenQC`C7PpS/A&lC<$ofY9NWh_
%W7O9J+kB&^$>'[F#Bd)3<qD;/1EC*L'abu0UZ?0AQ%>JMH6uR1D=Pjnk"\5A$2,oE/4*B"i8>%9fofIe*)0FkI>PX9oM)kr8;pb5
%aJ&\sfbRnhA/>):-?5r7M[>Xl1"455C:bIg;1O0o,Xg$<U=:DDf5m:RkSOAJaIctY&?BW6/a"i3>"@o`P+r%rnVnh$V[<%.Qq3RZ
%NC!$$"`upb'ER8+U$cm=P*K<2UX=+*HFa-UnVO*FONmnV^lup=iIeL"osJdGH_gk?(p^;)-"+'YVa33@6_dn)6DN'OR$C"eUK"^7
%_>mI?1N.*9XVmjcl4-h1hH6SHR9?dF_bn"<@\/j8&'j7E^tqLS2L*`?.geUH@#P@$Og_""H4([MUr[?s(tet095a9:5+].R,FaP+
%J(U2]rluQ%B4dX.7igL*3fn0QC$b(8[mcj1VNJd*B#M5ML;.YtQ;o;TlieK=AgVFg1Vbdf6`J4T.SULH]5>](`bSf50``saDG=gT
%$<>K!BPg>oFEJK86/S3PAG_3cR,,#eY&tqK'Y+G5RW[:7)#f<oa!>u,0EJdq5oU8(aX!M`PC\5<)O=eC3VsUZeBBsmAG_7A<<*XM
%8IZEJ<^hu57klXc='8MXK$uo65)f/HXWn4<TprQlSfr;;Aj`cu5huXs4:>qT.4&Kas4@76><UJmV0?)5;54d?oU6dm4&BXB9XGq"
%UnT,aWgZstiTDQf-Jgca_[&JrojEIY2\I3N]+<=+MASQ-&r@HCBm(DQ!j5@#N2I3jY:pgpFMi46aD?IL<tgf#.l[N4B=48OA8Lo8
%:(QRGE(d@rU^F1O_8r%@.pE>'"#A;-Rme)_'2AVZ0Sk"tM](eU5UEl>"M[A+gfUs>73GASHn_i0$aV<18>B&kMe2\q;="?ehW\Jq
%#@Pp.\Y-JuL7P'aJ`jI0OU\NpU0<c)5G!&c*$`=_2,??=PT]mUng\s&#?6jp@Mgq-h9of:IDEP$lK/2$$*nD:)[T[hNLLH([t%pk
%^b4j\%rgr`KIe]OP7c3NOBmKO>54FPLXgGk@S'3Q;P&_C..`NtPVVh7Oe:k6P/jmE;m;i2E)rT#+J<c@k#U28HM4oXA`#tZ%YMVf
%FGc5rOJU.iF:&K(aBQJ*:F1Nq(\I\^b+b@!fS^im?m$5n?\)qkn;4`Nb6-B!-TI?)<m\jl<7?A%-lgX]?7:pRS'Ysg=.)t@=<BhV
%^g_5LRUWV?AjnjJeP?I8^b(E&40fe-$Za='J\b&[[!(Ya^-jPTb6gJTM@1t`%5l-,cceeK^q+%_-;:U#EC&Lm`J#r%XJ@tQ\9gYj
%=[9:Wmi?c:[;PXpYht.D&/n.\A(AGB=;D%5G[#a-6r&JA(85j#Wd-lVbU%in$4WjLU'ej;?<['#-(,*L++]@R^_g9@l,[ng/ZY3R
%nod.^1!X\B-*X=lT_BDh&t.m<]HF_GE!TQK.e"KQ)C4!RQNmgs/7RLqS&ng8$M1Ta20PYoNkG7XfB;?tkQB85K2Mfe'lI4s)`"X3
%_1PlTq,V;6+Y+n2Z!oiK8[Z*B0U_Tk@W#c?8,@\rO`JM_GC.`*rI^=r]_`Xj;X0i^Kte9t%cWtOeQ3#*#<[muMt-<+5WQA\S.^1^
%P5akYdTE":n+2?\=:n0%&m-/,GBps%?=0c(<+s6/QjX0,P#.WJ><OetZE(Q-!)u=oGgtECQNhim5^Rb6#[.NofJ9P>%UK4"-q'\l
%;i,rOgicl?)\cgRJFt%Zf&F$/O$J"QSkePj@&j/6SmkM\/Z"buO/l6U^X3ah<ZN7\Tog-U-rYW'[IHM\[fWXe]NVFt9V5K=cQM\N
%6rYT,Tk0**]c`tEA"@NR8O=RKqV)a6P?J,V5SZr3b/!.q?>4*'*Pj7b)Dl/F8J4=E/rRTPRQA4l5_F;:KID1%Ccg3."MKU<9&lh*
%-j%.'Z$5>CiT=*K/at49SPN.+i^1XkID(iV(0(AbZ;*HDk&P>)'>`bQlIDcjp,jm6X%^gi[Q"Nio#cUcQ,7b+D+H3KbQDBI!b)h^
%V!Q1W=T07Ya+,kTcFUJgE0?9Ke8`%o#4V4DJm&sH&d/5)2jTaW)%t$96Y^F`&QjM51r*9qPecuP#FT*ca@h.%Fl^gA[sV66q^Aqh
%6:OLHm&3)#9)M\bUU=)O"uDIo_l+^6FG!VZ(b!'54-aYac[Q$;/;*ch+!']Zk[:5>7u[A'lX2Hre+ANs@!h-k8'o$OeKY%BX/^_:
%9a^nq%?1,+A=?#GCi?RJda^Y/"f6k'-EVUp`,#LRdkeMQ@b^Ob[!UYnIim)36ms4#$klJ>*"9K]KnD.@_)6RHg>j"SO4@i@;-Jfe
%OGsmpcaLV>&G<_6mmJ7!/V1m/>C@`D;eYgC/]>[1H"q+lX3pgdfUEtY-*4[;CX<]Uha"?VKW$i4H.<OTUD$A09ai[,"Fj"SMeWG>
%CC&]cd8aK'id+JFFD[$3rAV71$oZs,Qe>#O.%%\Q21M[M$s>HDb._>ofq.&hUKhHGKkF`:lO6$1^B3BIdBBla?,J[uC=QUkWdedS
%+132r6^C"<eMIT61GRd<f1aaTSRZ'LF]V0D%4RT_H1CG+2]^R$d:3JJcj/L&I.u_'L!f^</m;-QSo+YF24mVL*GKM2fQ`?>3N_Qu
%s6nZA=M%1a#X!a]!lJ&V$ks0$8uX%R^&M*@lG>5V6(-A'(f4K_gmq$i`DVi*(D0&R"j5g#Y7Y[X>"FlBk#LFqlgtE)E_pbV-Y-*t
%$/`YA,_4)>ZcDrK1l7Oace;sU#$mON<"A'H1TIMV+&l9/LkCuJo\3f5C:TsiLb(dnSD:iaFCJZp-j<d#RY;WAd0H>\fXn>6G4ATa
%?OK:,8:sFWQ?Pr\$Cus4W6uO2W#8$#bhuX(:9$]*6EA3S[IM'uhdUGB%o3oW3jfDbGVV.Q+j9@sT@a4GT#IP5FqgOq2O6'G/I9V!
%)^-c\hDu_q*+FKKs.Hni+AIn)<tu'EAM)fqDuC%.?c]o(;fcJg.Q@;V225[#1H%f`93.Yj2GkYt%W.V/`ZgJ!<_J=p9#scA<.MF0
%V%5lj&.I;kT[_Dt;(#C'MeVH6RgI64=&b`^eMf]0gB*p3V00o#D8UpFTX?QT%UJc]7,5r;]-$+3=`&`&a%hI<[4-asmnqDYW60RA
%m<X:RXD@5@7gpr<\FWSnTnJ/NA2AKEl/oel@unchbJ5BZ>kQ9kc<q+4Sko][<FVB'R977T&@ZsFYr5I!XBdG0^7C9n5)s7JQBda>
%W*NG-,^@R1]5O<koefMt]S9*o9(E.g[Z(Y](>L,El'!kjS5!Wuq+PZ]RI-[(m@^sKBhMVk:1#V4i[I,<!4CgqBH\(;;A9a[*5pu&
%D`k*dbD-G+MT.`]J>ZCQJZ]T`o56CR!`p+'jUa$Vd9ldk1[EF8<.WEf!N`1X]P=[7>oV/GC[X?eZmS7$/3g0M@"$U&7U7.3,uAjN
%'usN/!"6bWcX*[BnP1IO9A38oO-,h)fMJ)_]G=+OfV`hCj-uFZao\iDcM$21f%Eg>$-,6t::/H3,uteuks-t.id_]qRj5mpA*m]Y
%@G)!jIlclR!0&SHVXWZH%?;WW17)]1p?Lt7>I"Tid"q@OE25HA%?3b&F5Cl-ZohM%Lig9hV&fp9>*NFMZtai%<T[=q)iB(KqG%?`
%W>]=:G2Y\U/[f>*U,JYcZIViq5m`'u?l*CY'c\P+"Ucpq6GFhG><rcni;RASBS)BLGX7_dMpM[)pt0p8kR][Z(2HoBMo/W?PkgW/
%WY:C4(#RRH#J@/@+>nu.8R"V<HBi<L(gr\-]h(kf+H7U[7)j!s-8!EjE<#Q3Lk;<M/sS_u'bT@gX/Sb%WY4;(C<ZaIo"AZ_UR.eQ
%+IB#D_`[BnDfF&S(RJ'*HN,%CV@_[Qfi?ARnjdJb+UBIQ#l6uL_]"dmc\32L'W-Br,:Wh]5*'N>QDV=IS2EP5L#5q[MR(,jnL=+(
%]E0r?9ZCCSIjGW%ag.<&.nofu2`9U",qE=`$DY'!1DEs/3ul)i9]alVLCcHnYia$1WOamf(P%(YEhU%^V*Y-,j*@S$W_0W#?3;Gi
%4JSm[L(9B5\gnPZR/q4UjH(DQ8ZPjh'@ggY2UL8Si,*@JS]H"OQ?XAUV)<hceBB*,'&n4,BTL5%?Ef+XDN7N4^A0Sbk4=/19r;d?
%Anbi8R)d'a]=bbs)=8Sj1e*JH,e3:r:/@c)J2nP@R2L?P<<I2,Mc(c<psY+.3#U;T<<[AqY%gO#W2$o]=r\l3=X1P6\R$H.=45&g
%RZMg2<-gi\TVei$jQ/LTSW/:YaLNFE;:$cC$"Yqm!=T7-Vj:rX6d'43YW+BU"iiZJAI5cq>s`E<8MVHUR*VUcDG`,'M1qau+=>HU
%B)43/D2)^ngm=FDYd.i)U%)pJjo[>/-ne/k1g6uJNe7>/+4D\,R,a^%[@`\5,naGo^%2%*jScF=T?9`m]E&ki<a-A#-10UoPhjbm
%rt(\M7ik)%Zn@>..2ku'$^h)%J`E,F@2+I[;*i*N5JfDl;4q`VYOG-e7#N(+du8="?jb#LBWRNmiN!V0b@2CkjuUq_1,o\VFb$Pi
%M+F=cq8fi[N:aUO-O>p5,,)M*ZkqDQ5e=0@&?:1*?sZ;<r;[QB.*iV`<cIc"Of'`P8]++nJ]Kh_TSdKQ9%G&Vph3P9Ou:?h'TbUI
%c\?R9!C25:(d/SYm9#*)VoF)fC1O4,pm.VY77KR'K1HEW8?F@!/'fIJr+UTud.jQRVTiXU+o.EY/^4<l"O(>[!!u*RNH`.i>%q,A
%7`!16[m;gK:sohsRF:D!@Kt.CVX?Erl;om<OrK+@rCCB&<lN!s7a`WIl"je2!D.maN>WE)*5J'NVk&WjfjUC,B\SLgKo(S</m3_'
%CPE9r`1EVZ/(<f!V(:::c8%+d/F41Mh^J^5gdi^V.9;3O"q:Q55jUj^e7*qG^_0o)2?P4f>N0EV%?2nlciF*iG@OnmRq'?fHT5S8
%,sat>>&9IbkFh09[_NNniUj(;6E/1f<&u4O`ViEdLI$>?]GaSQ[gH@e<=$9mA?2\aN$=AYN\"VcEYHoC[H*L&W^65VO:sn!-opHu
%.[AUnVP]&X.EDf&..CDke$1;_P(K-E+sO<rHFAtBPrttTOk#8F,YMt$[X6[<fTm8VZ^4m^19e?_a-cu8(7C2m))KWNbU%u+ekhmR
%Qi\PY@_&6$6qpb)R)+g)][2"U"?1Re,KA]IV&?_K:i8*d>b#MAEo[=d>+9l42Ad?Z,ud_7LJqRkBmC\GDdKlDqL:(0Bt<@#\>pXH
%:d>n@I+"]p.+3K`[Z*m;KD^L]$5jHqX/a45g"dEh&M+CU744ZNV]BKu,-F&`WO'bXm'3X_ac.^K7jbp\@2UG?H]@)rf.:94!kao-
%nfp)`:[MW.QXcdO"8Tsd53@V^VJAP#6E)PCT9acZ83:Qcj1IWGpFVi9X]Yd?U\\]@KZ?K;Yn^X75!1U"Z0]3YZCo#EV-/>][M+h+
%:d'k@O[fa>_5HjMC;%g1_Ms.XBtE,i@8qePKpu0#fdX5NUYqaJoFRm^>QGBI-+2j=\GW+?):&K%:In*9g4NWjO,'*HD$r,=Wc-+7
%XHY1Q%FQe5m^\/<K->A;!`[Y?-`j2Ai22:EYbGI>[ob3fa/:AM-lZ[Ij>&_jaNWi;oZ`fJD;'$DD1bLNE<Mt#9M^M'WKHY+MC&nN
%%'MMg*lqn?nkd'PWCaAJXp*(]b0F[0"@$XpZWTh?=\p(c,`$g($<WH<e`!t?nIR2!WXP.NS.!ZO-:9XTSiQs7U_TOU*Y`."O^iur
%FM'.4[EH2'!N@>e93N^(Dp?.hHo<f?3-4$n^5<:%#tup^*hFVgU1mMF@<#q^Z6u^,?#hL@#C8dE4[a9^O%>G@m:^i?PpP<-Xs<?m
%Dfhn7,qkmd&?mo)p_L'a\hDU@UsoHJ#V(CJ)\jY!ctjRj666qK@2=o+>T;*16m(!EM>>6\iPY/_!etH0$@#ACb1oXkF[`;j%%dm-
%L_:>ckbos"Be]?q4q6sciNU_L/"C>Pgc]nP2%OpmM[c6H$EDSHEn$`f6l+6]fLDt9m^'T-iNl@4oVb'P+A01*Md`ojH2aa"1HWDK
%f[Ql#g_0_4(,7%GGR(b1"8<daW_+KILoQ1,7^0J>9,!,EB!ra*&-u;>p`rrsK_`+4S:"N9%%&^Tb!#6%U@8fW$F:M]o'#H^qHA.I
%3qIM([ARsF(dt[2$u**B'YLSPkn#,GO][)/%3_rD@!6-t@(gh"g-`"^UEU&,`mI?<O%X6*15MWcH@sn%p>AgHO5=E1e%<oM%kg;$
%TAD8.6-'(#,8/`RMjNC=C$R6WaY(rjck$I2>N&_mL(P-#5s!N=66#P;d])S^osHF#iG+X1\HBceA?ca"e*udQ6%)b^Lhu:)@_l9$
%bkkAL*\DM(g>L%cL+f)ui.#j'1X=[s?183O!eOkbOg%B&?YIi]ie4`_79@O7'G8NJ",YtR7khH:B_3OmJ/)?0WYLmr/Hl!&X>ZS^
%dB]8d#]r"-<jPk,_;_N!Gs.1:>Yp`V=@oEUEE]"SJR^QTPSLZh!jQaI+HSR:&W&Ep.b]E:LQR%3boi5n[%(^t#C&Z]/ltLID.fHh
%9j,-WV6kC'j.b=D=X*>E)\3SjhFj0J7$/=4;TM][C6;R-<i4cQ5I=;X3j<*R&-@-M%n([cBp6piOg.u;"c`s_[;3#Qd)*R1Vs=@3
%)-O,)J=S4HOA;Q[1.u#fJ`eMGB8Z%@Z37E?DF_]IEJeRI+BoBNZ^.:Tg4(MmG9b!@j)gSQ[FfIjTu^&I4BB,h,I4KtX7I)$]fb$\
%D)[HWL`&:c*j&fak?4c],Eh<%)&rc8WgJgZq0JC&>qnhSLEt5TC1IGW9CTBP&6Cc``WnZM$W4ZYZ)ntOdh"tHMrodpPFbcC8PAB3
%qX0kld>(%%+?/I0bD<'VL7(4q<_eM030$i0iA4&oc4We1"%oAE+<W&K);C:h,+JWbK?^1u6>0Z$0pAk)Bo@/LjhC&S'oD5`_9'Zj
%V)TI;+4P:A@69[X5rMkB8PH9<keutUb$e=##&3Y!/E!%S&b?f'$*H!hM0.h+j=jjLSd!2ll?jpi#=;OS&&(&J6$krt-k\Sa;H<[i
%Whho^=^tip0Q!?p:!mW&N/smPlH>j'K;"O[4UEC/1AAs>1kb#,jIU/O]FJ(q)7[^X5<h%<#EZd'm"Tn-1cp&8jU=7r)C,uk94f=t
%[`uZe;,p)OM8FjE^D)c$7X?`lBV@;eU802u(1mci^oA^(T4p[tXO1%aA:]pg1CWZlVH/P5Euf\USI_-eT`TXuh[U_a;nHig3$N,]
%1#a?en/h:=HTF%RQ\?ESd>$CQp(#V,`=\'Bq=aT:4FGgn?&&X.MdaTeUX[g-@A)OO<3DuQkJH5W0\I"['^,ts-j%bQ2UNrTr>H*"
%<,BZgAmJITcZNfB@<Oul&9V6$Hu8Nel.kq[M!O!qQA<<9SD1238<oQ4P,\&[5m_<`Mm+LaXF]N;\[s!!&R/@]"mAUD3fen<m#6l=
%NYeCmKKkL1q"FK1r%6M8*bA&h-3GTr5-1eV[3MLQR#*Zg+;#asR9Z5io"asqarT,$N1qjcMcik&E)c=/BFhp-?!5MmJZRa]1.b5@
%<1^\Ne.tuoC0i*\Aa-E(@$YMh5?(Zo5.H.k2<S#*O['19m7W'pJbtWDL.&)B+$%uY`Nj@4Rr=?`aPV#HE>%K0AP"_IS9eRk$Xt?s
%96j(1K<^,e"P^LKj)F-Oj?lh]JjQ;==?2rR!`\K:(07`b/NFZ?'_MLi-o>kRo47X_lBB@:b%Qg13s";6O4jpLnMt2p,q)#dZXVhq
%Vd;C>outsP:[VqHE*k#<6#3rfHIHE?_OGJ):WNPE)b"bK9,#JG],&tK$T><i*OH<H19GL6PUTOC67f9kfH"j![BlNE@LYIgAaiYX
%7GV@3!@A$[8p'eh0EJ-1X"D3LOHr.P+A^-P-;4OF]=Y'Q/6Y\D)DDL`SU'>G$cud;ELjc!8HpY3G8_:cY'2I%$`^AR_[RWG#,JV/
%XWK:kk1eo0o!^`dW2RdpXp?NP-A]?P"_WZ!8?@dXs.&)_5fAT!5-u2M&NPs9f@UWQ0'-\MiI&H1QB)*':H5qH^`NVf"KFd?lf4[m
%Foc#a>C?jh[1Vq[',q@7NG]Hs(CXiI\klU5RqDb1#[g(aqnSR("q%A0%L=c?amQWEX7c4*4-U$%!hUue;2$$bdams$B]WTO&E(pT
%">bKTD7*eG5tC+GHkQl_\2j_u<_P$RbXeXi>/8)3TgTKfi69\F<QiX="fkepTVJ8,P>u`76oCu1A7@Dn(>!gQWmpf<jZAV89U@B3
%/!2&#LR#6CQBgc6j,>%+na5lBpcG(h?uS[]*X^b@dQB^.d<a4n)C"GXee]4%"DDc?.UT;,/OMq[U4Vh?@nB,4[NN4USTq3#C*Oo3
%nQ>R)cq*Mdp0bS>JSB2lLtOih!:7iDUHuAJ:6#b^!;$dGj*(7(>XuS=#+".U8C7E<P"i"'[>)dhn?>b%.T%=q5Gj0,Y=@VQ^m*1f
%BS"5q:1IpHc0U\%FC=/4=H#,i5b&35RRKr^Lh+!"GM4u0L!Ri@XUGD=6V&[`IWg^'2^2j'Ui8b%"=2n=a1F]k<sT;uR2(\5$t=Wm
%m4=n`*]i$+B[;0\,]a@Tj8WGK\Tu:gk4$eZaN;2HQ?acuER/C"s.M"8$q?t6B:4C.?DPTA>,Gl]>7+8(H%^a'+JT6S*?8-)a=BWT
%9#V+[7\d"A7U9nKor;0t]#EZr>GL$R/Hjo0a[4SY*^Q.l)n;T7@Cc>trdR8Ym5:W5LcN7$@.*r:LcLd;"C_F?4U0&33s$R7J.W/,
%Jso*6W2]pb&'ut[,IGj6e>^f%PFG+uea;6\bjBO)rZgNb/EQj]e2c,q=2.pZ0"_<AkAg"7Ss9uhAn(2LPX,=62$==;WBIB7TCBh"
%PcIOc5Gb2+5T*"t.f<?K%Tkbm.NND1C+bU]!_JY7JYjJ'SUEi`(+XPb1NCfH0Nn`!^fOtU2d8:OA16!`)PmUd'0Ot,FTNP_X?_R;
%nk@]sUI\HO0WfZt$h4ss8;mlH#N0m\rMoa@,?DR!:q%=VARn$P_68Q9P.IHHEJiO@*`H"&!N_(N">@aDidtjJHsC"c`N@K8H8a/X
%!H(\gaD?DoN]J'g(`R/C-!=B;fW#WSYAl(W7UVLc^oD?]FCcd5-8;+6%T*Ks?SgG+T*6LF@),d);$"sGQ8lrNMTA[j7UC8OP6iTh
%Z(qBme*"or";hBClZdoF"pg%Q&>W-!M[!K@<Yo60GpE],X-ip;E162]@l38aD9-r5MXkq+;`+0C3ie*^\e7l&EBpT]i>,a974\K.
%`/N@LG;?".5umt0_jd3*,Yo*SBn=HlmfoISPXf61<8E\g?0cSRSH0l6$pnK%@::G#'?e*Jb/47]5G=+R_CA5mn]\WOLiROR+U*DC
%I\t[q5Z_M!("khin-Ea6RSeY\G3Z(q-s!YY%%15i=c7R3/E@CI&paOc.B!okFS0Jb1'(Ld6ASfGNru]",6%ms8S2W=f7Aj^$'n0O
%!PrrF(h='eZ;te%:;jklii=\3kL;W">W46V=C]c1D`.-;pqRSr:PNb4e:qT]X!5YE;V6U-"Z]C-7Gm9tHILEI1AD0PR1NrYr!(VB
%Ig<nN[(%HGU3MNn<9`5c!0XSO=t$KQ4P#gT)q(%:G-"`>(_f/mXTYWE*'lQuOe=7r_`+%d_0[C[]Op[DW<,162CpY[BM]h6(oRHp
%:'b#6LcXL\X#;Bd%g=u42R6Gj-AT\^[-W0HA-iu_YV?G>Q=d7a(nBAo'c:=Z(,bJkE6`-?%g)e3N6(ugOsdlB)JBV:D3JV5Z>+1)
%8%f\$Xb:&T8ik,0o"&BRQY1$K?15Ae\HER-n0ba7@]OjkqoE4.O<81fiXEVmYdQY^,u_9U,`_F0[H:Fbb"IT8_21V_)KU,`jVp%j
%+I0dLY^1.8d)\"QI7^#C&g\h0U6`Y2/2P:=:dL,AYQ:+O_?h@)R6@[u(6-JsT!_Tl&S<V<MgIAI*PLcU?]K(iFBFTHQA12oQ._;_
%YUYJJV*2pbOHk`'%n]mR;e0(.S,rs(7@\CfOT`iOR?RGrQq3WGfrW_)L"-DN'U_gS9:;EMHq,2(b]RpjIgcOSk_,!3Ac<\fiECkZ
%CPsdh"%"I/<,"ht8Ap`62$(`sIUo=<WDej#DWhFZ9n<'ho2mCPR;]JFdSVCQhQJ-XGudmO_lX4;]cd/>d6_8@IF^5F5)Va<fY9sq
%c&VH4SOOT7CaE>_,q=83qKlFH1+,":1Pq2:7r0-rSCIq.@aAT,Ok3n).Z#X/"C>bk^_6jINXR%m?r^<0%VA!qUjKAL+S92B8AGZk
%c$H%&9))F@&MaEQ86$uiOJlb[e$]WeZk4k^?(H"l8*9=4=koIuOHB1;O9_us<C:%Z2?BJ2'Ei;uUFFX@0;E?4L`l7/"k5*"2\+_K
%5g1tRY3VWO<^ER<McD^aUOJaWJHM='Yfp8?1=T<`0!irGR$<65Nb>s3[g7"\5X+2+$Anh:Z>L(p([H8ZBSS/OK9(W8%%.d*bFo@F
%96k&;,%hPn#<d/O5uFTl;?[C<@,V(g6!c:d)1]E[%7_?<g%?RC]@P(D_dg@C7J2f%2.3T6C?;t*!0UtY!!l>bAd#,6eaa\.Gt="s
%$NMq;n%gs+;Tkd^-,'7>3!>Y8CQT1LbQt#K`nL,8#st"sYf13cA[4kp,#9bWE0Q@_)an\C]>o0s!!)ZubmK-G7ps(MT>M?^9:gN1
%,\A[2=u[2#OV19oaJ/ri-+!]+M^6d+jO6Ta^M4p#Lem/4n,ntiD,'aOI55hFTg@%chAdQa^8AlLdl"Q_m;PQ:*Ct_gPn^+:E[I*1
%pn3uhSgqWp+Ek<CHYW\*6il0O9Of6R!YPiC`IK<S/&AfVeep'Y*0<<KOs:@IXX?]"@F?X2oo[Bc9pV(l1:q8S+`^-o/^q:.#Ifs?
%AOS0(F.+$f"tVCJCaVBGofXNUdca8?b/1.%L&b+F=iWodaTE:pZ0YV6KCp7Kd57>o.8gpbHUc"5.I!3>CB;1_N<WuD6.WqB+n$Io
%8j"Of?liN>4C)AR%q^C^'BIP1X_fM>C,JQhbAjVS,c="Q0k_1fG\_2\ArpL35bhal?F+GLX2&,=>-[-63F#,6aujkj]LLJ"]s+O0
%(rW`4:dkeN97oR--mZ'jjtr,CAgjDS0F:(Qr[-%]i:U,?)A5dFo*!2O`CD5F+kbO7WU5:g0',0e70[PTp`,8gk,p-T?Q3:i6AG_G
%&K'Q5e_XeGN:!>/]f*GROZ_2%,P/KX(7/l<cWG\*J>-jrdang,S*)+X1+QTTdg9>(!NOmV;S`<;$iEF9:s[;Jl'Tp(Z`^.!K9(Z'
%'G_[F&U,G&"C/MP*s#bed\WgIqOfeh4g/mSH6o3b%[aoqg[2&rK`W_:\2QSG_NSWCEENn^9HJ7M.nL>G_89p!h-NT)1K7.m"K8UI
%2FSG7rg<o+6uK-Q%>*H`n`li8MK4i13gZE@/W9paLKpWG4%>MIfFsWWAs93O>j(,q`r_+ub`COk8Y=T$5bbrLr+#6@;.[+k>j`X*
%/5?u,AKl1dnk-aAI:^6sO7^AQ'jEV'H3$D1@Qb%\8B9_1b5(RU.:]/Db?]p-`4/R`HaC]0Yc9#R\S3T3?FF%G)(Xp6ObGVMCeeC#
%8K_b>@+eM4U.8Z7C%S2]lS>[^'N?Kk8+%Rs3j@-Roq@SWLD3D8#BH:781dA`2GG-$d1N\4^c#W.76_fXQV-,ckX]iD?7D;a)T,t<
%f(bKrX8YA^(WGZ13r-Gb,BLjSe=n?i[W1iYh[7E3K@a#];2NGkkWur+0#IF:@'N7FVA#HBaZ<=-\[!gEK\:@,XC.T5ljV,.isHJI
%of$>pA-+JOQeY"tP^5u_XN3:&ae1X2lkGPfP+RTTGtd"FLuM<4\d"9?#/5KM@Gk`s=bM_k>pD$f'mR1ZbCaiq6+/9uN^p3TZ4tGO
%Mq/^cHgq1Ji+e1YNjAr),1H$5\;BE%AMO<(;5mTJ^Q7&,*j.Qd%bSuF>J)-7K&l&[RW=FJO<'+8f--QH>%4@&!?!QL]TdKS4BU7F
%4H.@6m`]k:9@Ei8g*HqZjDejp3-0dR5m,S^jh)Bb/@hSL))]=1FKAT<<LNP7Y%dNj&e!=7fUK'gFa/;<-6d!+g'8g,@cW(phI'&k
%0X/&KoJ0[g?<9_KZI7`K0W4OQUFcjd$`Ti@cVFUdLdVVC3ubc,*"RcR<0,YWq:ta5*Ms(8Rm;`I1`7]f8T.^9,>?@9Q`&7A<qc/T
%%0._9/a8;VPYC\Y_So2T1jIVsjWhS\XtIsi7tq9[j?j?+=hV&.d4mG/Ab]EOO4'+47k/TOF4,pR@S<M?b@VHBa$Gn<BKTrQo<dsa
%M?L%Qo\pU1#XkG]n1cW\OVY%2RlF[J@n4uK3i1Vl<fW.eaFZ@*RBM[?fg/sSi\8Lg^f_9BM1Kl/H]F@W*c_JCrIfk5"qQ$%*fg!n
%E34%0.o\9L7WGH5L=iUfleKmJ/2&9ZbIWhd("3HI4/P)?I1==8K-O.^5RZ"C;N:&;hC30[M!n&UOGBT:YP#;aFBXf`Wpr9X[7(Ac
%CGY2sjQs754A$2`mP39iR>E<Gri`2"0G,(<BNdM>e2RRB^sgEHahKm&!E81sXN6'EaBR4QYD[C\"H]EBT[!fdT_0Z,4l@bU'f<HT
%iF(V7GE)P$mYFkSiF*3-nrK&Cc9ekDD+4s`a(V5(BP$j-G\eWdh/O;XX2iAHER/@[1W#LSE4k@^pX/7bZYUAO*h\/tV]Hr?1,%S>
%q2*T(T0GIU)]c4"i-OZ&qUT&E_HU4TIC@dVhmuMj@\<j)4<3g8X`(?'S$AN*NiE2D`sY1$r0$">UbPU\+i<IMoXdXF`l:^A>JZ0"
%</lI>\["Ah;Y_'),=cV,rDh9lkoPlSM6@sb^ADU,roBEDGOIcKH2N%&lcI6Q<&nLgRRmZ_&[KKo=QBk9]QCAdi+'gtDZ?K6,V3##
%@]c\#-fj@:0?7DR5h%DJdNTk65p$<Ri7(=dquh3WC5qaQAE@hCI=Ec2Z4Xp<9TQDDG.b]4(7qWZ#)-AB.c=.QY:a\`H^WClL*qeT
%3r6N!.#*m4*f5Z=QMk,0Xsl[q'/4sb@_&</WL7#&FS+rU#P=RWrT))lRlfA#T&,e[;q0gllTr>GNP"bhs,.pF-T3Vas0+*TQTm][
%qFLWE6Ps.Bs5`%^SVu+c*I3o'T)\-8cCNXe(58*O@>*Iu<o72k;&JQ4fJYdK]q%Rn@j4@'91MT[3o=spXY>=!W-X,17/@/-RXpXq
%0.M('+1/93JZ.Cqi]uOsZLj!sHJ@laWe6<@bSnm]o%]^koWgtN2nile2iN;3Rmq:iM"G2'?&aFN;)b/bh9TSpi6[\D%p("Q2^?XL
%EgQo_Zr&@&b%hiaS&E0n7VODC^=R)C%>7e>==u3(`M+c6k)05(LE)E!S=C&H!DKm+]Cu4CO3TpNm,52P93u=p*B6-,XU@[(86lTl
%P&:X'APE<Q$3cp/5BqS6OX/AT[W3*(fEuX06YTq_4g-50boee]/B4&AYW&<MSfGu`s#<gop`RCm30:A&8E)K^b.eEKG9n$YoV29B
%ZE=i\Le<[!d,tmY9'&18d'g&)nL4<s$5ko*X=@E@LK+!.3@hMn=I-$OQ'!OU>[\T>HFUb-72Y:oibqg)g$%B>6`L<084=E+jP8CS
%MqIVHMMO+\/hR+Z8pgo<#)6a>q>0:6>2o2A\^(aLIIM1f="&jC.!Hh1+8E11DN?Vo`l5o]!M;53hO^ld3>T*FH;PSl1I/.(iBG39
%JV,*>Gp'A)@kPu55AhSuO!:g(Q-&*C!`=*;ARlgD/0l8/"jnV5fp+[:)N+e=5CsFTL/u@#G!K]ertcQ<[#*h$U#Ck[MhH<jb9QU6
%Lr(C[&0f*oTIBU2/a,r6/Lq@)MHnpO_%EaG;rle4J1V%A#mhN>`m)39K6:EW"BAu;+uG:2q(.E1Q@&i*J@CWC<'*@9>1C)KrAenC
%b3ZB09P?O7_$A48;"9'Fa7L"\cqPeLgAQ-4Khp3k>g:&[_Db-PE6.L^[/>-K2]j>S5_=qhq2]LI><!V0b753r)F!YpnAqA`RP##N
%'1r>04X.)..AQPJn3I.\$KWr:6(^[sT&kt6YBa4A,,#^/PA;Tj7tW)'YT*`HbUg"*GQqq'0o4"fROG8RW#oE5kZc6*)64k?Ch%uZ
%0S8Om`;pZ*mE9&deE)3^)`7kpB-F)c)=#Gs&K!Lu[bD%UV*M6o%>TTT3r[4S[;4JRVkjIR%u,J%34q(uqXD'b"?$hdDH84;`G$S>
%JdQDL`J5rH,Z3'#Q3'I1q&Yp"9tN#toR"9G1F!76^m)C:o_3[]dUNOf-oVq/q<%`"BU8(k]9]Zn%33*fWI`Kk2GC.cJ-rgOEZcP:
%fH=8'A5)\;D-.rm?^;55Br`JO`[e,;\:G=p;97^VgaUf?@:qjZ+n2(K4),pAO*hfh*AJu5G^?KV!=ZS3Xiq'h4(tr,p$f,b*%+&S
%bC]"%">do%JkQ:B+KLD>Q7,m`fn7Uf1^H:hbq*W`*;/6Embh,CGj,#+p'"2Y`,lVg(:*U3YSpcoK3R:UA5pSpdqW2@5$X3f`]97+
%(J"l])?[V([Y%f(^)-9&9'6c8ST&<-n+Ean#"LOkAdUl\s&d5FTA7-Rf7?F.Q!Q51,P]f!VMA+BfuSA,/3m\^Z<dqNqq_WtWlXa3
%&ujo?";Q1H3<+PMk?SE_%`rW$8tMcm_usX*'oKl>5qoYJYf4&U`1[eSe#S"*.23FHdt:I6>f8Ik=gFAZN!Pq^D"2gVl\%Y.AAlpK
%%?`7!b@4dH$,2%Z*AV7F'feWkN.a"n.$fj[=g>[U&rT:!c):]d634^UpJhUO1PRYTTFI9@.Po&il2i12Jrqi'KX=p+W-X0!TcQHG
%Poh8n7C@b=riT9n%C%D@Yu"_W2m)Y:@no>;cVtO-4g]7,!e";&*T!(HAU>b36<S7:TJm)I&sbcjX$Q)sap?0]>Pm9YA??aHMdQVe
%:(_XPd5c3I,B*Gl_Y&g$jTq\+0uR53`#lBF\ko*,0[g&_<<*t0EE9Z.8jrHYKJ'96,S6*e3<[M/UIU;OQ4P:-XgOEu0;+uTs)7AM
%HL/_U/,a?Ns+)g-e-9$81W?"G's34E:=uj7FR)M+ZO!PWX=Btl_uIHsp[&Xg`m"oI3M^2Z]:MP7`f8r9HWYWs#U7[RPSTo><MVHW
%6\^ii.g)U!OikN"N.C.N;E\l]FHB.cAs88L^?(IWPbp[5<qCEUhV%sm_tN`M8">CVmSQ)FN?]tG"OO;6HVPkLW3']dJgSZ;-r8=Y
%kDZ0JEXBfn6[*^I.-0IPcPO_ZFKqJ4'fL)%*&s0rbs5>B5I)'_o\nhd>&af<aIBj2_[G#V<bcGObg"m<2X2M7h)d"<j(9b\nNoQT
%!]\7d\juj0Js'?>S!<?3X_4N:Hl3!0^YA:%`9Gh#!sE^)!a%'HZDpJE=<W"?X;^]T*iu7UVgH>;qsFpnAnHM^<fMVDOSEeB/7%M;
%(RID'.f=`rTXr7mMpu`rF55?.^O4Z_O-m8ccGmmXD!:[6`U6hDlF#?]i]u3sPg;2JJG#mjLES\o[^$7rWc,k0.ae$H5OSt!<%\H`
%kEV,OkC`)($/l=,^Maq3l&Q4rPL_MYCruZ@s+"_ub3D^P;]VPNo@(:"A6iQ<>98bJUS\NKX*)IAgiR(GVEn>c&MXRqcS\(6eDXX*
%%`.fn`#OnNZP\d&Z&G\D[(R\t93>WE4p7jR5,K=hE$TMIJm%8)I:Gf/gIAt[Z0hkcpZU!bK+Hj'F\Q9o'WC"V]CrY_h6N<jMVO'm
%LG!^;a/Lf]DK13Y@niZFUQA'bP&>P,qfQ7DD/`E97s6[T<m5CG<@R\sBF59jl*Ik(bn0Tc`r>o7TA=oi"LM8.obM"i5:rkTNlmiJ
%ok/7I0q&faYG>[Z+IafN5pCL_-[V@R!BXK%l@bYa\j"^ZV)dUGl7tVr[XtUcl@nT#lhfa?5<^MYM%[cB]PHgSMud2B8_IoY!<oe<
%<#$:L$&DRbMO^#a3>*k!bu#ue>0-<",-=0rIQ`j9J0-u=8O):":l8(+#G'2h_R',S+!ZHue1JU/L=E5-5H#V5))q94>#JJ`74IF7
%cAsqkSOmG2>/mf(J'cYrc,A,8QMTY\OH!PS=h%RsCP3H#7N1t4^IiGTXo,=K]OB9RW.e&$.QmlKFab76/]#B]1.Y8FJc_FH99B;^
%7qG;1!5.Kp%"+M<asR4V2mMYE!!U:cOM80'8N>!r"3O+Z@fYUd^?]d?!.EHidl`CCU>+&j)%1PgTAZb5B1_aIm8pRJ!W-q$Ef<O&
%&3k]4Kge5Kh'h>,b\'HZY&>Me"d]YQ&J\"NIo!Osa&U9[c'bk*>e`M;Ot4<Vl^bA$[%0CpNY5:q;7H)e%sWKT9J6s(TN%]sUsNVL
%d!GkQruX@WhEB[92to4^DO.+R)FgYl)\Icr58C?%;6OQ2#NCu$R$3)]Zc2RK&brrHo^:SE8ft.thl19R#?6&&_EUDnLDn&72A.@%
%.!>b_.fiU_#lk[Dg6L=q'8ZQ>ef:6/l0nW$IMgTi[6AAHOAl"Bj%sb.V7`f3?UDCMYt#1YdUl2(nPX0G8i/!dr:'F`=@guJ12@S/
%DW)'Oicq;D+N57:$)^S&T`O9()jTWZJ&'MJ`f)CP6KjguTqC\k-Z[1LAtQ&Ll:I2D)@"3C9K:?!g4uL:@rs@;cB'$1_/_g-SHP3G
%)]C0R*"Xq:"C)D$?E[T_MNds(WE8^Jq\%HH+9XhWmXS%+?NUS0O:-SB'V\+>V@6O6F=K`@QK\%Nm8B"bXto;;gb@A*H<V?]ZLV[G
%$@S_`ee]M^GCXqL0KttA&1[C?T7RA)&b2&pkj6cj1dkWI2X$Y6n.W2:KpaC2dLsJMC7f`^<!X_I.tl;rI.g=hVFqdaKoCH?U-OD`
%TES=16'ICc2^Knq)eJV<H38nAK&FeDUT>iJ"A]j2&68^M"Md.PUaDSpj[)Za(%>Zhp8:EKDP(mA*$ut$A^u.,Caga(rkr*s2u;2?
%2PGki$JMs>L&Dj%BhjdIN\`uX77rW=-/=/>Ya6ckYqjM+>J#g*;.Q9lqDIAa?s<6G@(;`F@]jM%;)k)\VYZ8nn_q3GQc:IGoj_rQ
%65SX@H<W0t\Na:!VhFJ]E265a)\djAF-&SWIJM?8D+_;FNRtL+AIcG]1jJ(,<+qa*3Q#]ASu@:JV5?O/+MWc3>%pd*MCS<DYm/LB
%9)\2]Ko_Qm,ZUhX&gQT\`T"k_9@QN/E%0MRFJ_QSgCi.UD^ci>6@IGka8Y]g-V7ADd_'&e7T$$L^"nBiG4OaEJs99C#WG1,;hgQL
%*fPXr3[Vr2Y^>48Z:T2ooPWk:b&aek4BST,dKsB0XJV9FfVL)TQGFe.X[*Y>Ols@[k:sMq1T543?0Vhj&8*=fHY9PX\6jkXgoR2@
%Raem1Bf&NROX<up@UauGA6l.XcbNN$2^EuRO:D@.Vquo7ZeX+Cm>\%_g+JC;'o<#\o&.R7(Z\BZU$!/`R1tPr.4qkQ!P$=L7NV3g
%d;'H^5lba=mIU(%G-0Dj@Tt:m"UY!g5P(g<o8[PYW6KFmd(VPJQ?Vmff&4YB;#1N&liX^,n[3X=Fb<fq/C5H%*$AIi]p`?'i1N;m
%(i/Zi'&8WV-Ck?p>\.-oaL&`Q'$4TA0!\p%4:1%k$_#0W+n?)")^'D17Khn*doTFiVl:]9bpA83cT_:>#NpB0fTG/`l@Ad1q@Y#k
%c!LG?Obuc0@"u]9TFp?=%YWsC5d_d-mY4FU`Pbh/HAs=ASjBg5OU2\tA;nk3^P8"fMWFYU]%5f25me_eX8IAZ$,(ZYA2XNF)*D&-
%NR-M^ak]s&?,b/56(7G0Zh)giI`DloF%"7L3_<2b&q&!W*5RAg:)$s$XOfQE8l@(g>>s?-_sX![nL3KZgnQV:gPYS(aX1ZKS:VLO
%_6_u9CAr8i`-3/ps*0.4Mor)sNI?r[%l3""9&.TD)"Nb6?GLrT&[]e-V$@cG&&VcLDC$.=2EuK6,FqZ9N^&3q1C(</_pMOrN<)K.
%K[$l.V4W;fK>Z1%90\di([>d(_I,'\?q^C#/ZX;@g,X(HTCg(/%\GksM#[NM]7QhTEEG3a5k,^:1TdB%Nfn3!V!"UOqA'oa1>U?g
%0S1FQ/KIV3_c"\!-9\m-e(3a?6G3ph:cs"m_ug7i]Z<-E`$mU.,Ih8WrOPi:/u.D2WaDk5hUq+7Lan($1+TXSAPIuKE$QS0NutC\
%2OoD_ot0]Za=i2,36>pMqH4(d.nSHN[/4MNY:YKBr;b+Hat^ku_(mro_$:q:anOUSC44E,?eo[.K9M$[:fR#X$/s"he2NNC,O<sr
%N<#dp\)eK_,GZN;Jt93!>==B/n"md56-=At>#OfTVW#@p/,BP(:!Zb:]%3!<J.[4I>afZSM:8%YG_pg0[6m>;5(ES;>Jqho*OTMh
%4T%u&oqR99>A)T\+]R]h-r>K@o%(:4g<RE5[;a2J`I\)c0sk*;*QenMd,k6DC6Y$KL'W!lJpL%h>emYL='*hK>c/G].d"jM25G<l
%.E;E94cc`3#"@3_fWW4=ZO=;k>&Q3@]4".g@=N)Pb**YRP?A'L?$PS)_%9-`_9(:mBeZ9Sp0aHq<_^1Q<6\VM*MYH?;3JWtIWpO0
%c'h0`W*97UGJ`Tr`qW$EAX<1Gia>mF'nM`p6)[mN,CTi&@!Qr68ENU-c!h>/bnP#A+_JVYgmJ!Kb;UVYck*B<,*KW^:j>pg,u=mA
%.8kd+5oua$-XZbh]a5'e5C43HS[UaT&*BEZ1T3dLoU0QUHC+lt,0-*N^-:V`F'--pfm#ZjV$,eW\"j!d/97'2+i*Zi].EgsiD1Dt
%ME.9^i/oY&m;LU;F->qCTR@ohl,o\Q>#An>`I]3SZ%h`Sf?Mjn^]19/glmC\qJ;KU%<S7+=m*S_5olhKOk3%p!&0X3L:BFeceob3
%J1::[29":Gk#h?TK$>ZIVo?\n[:or9ogQ9bI84gA0Zt8jh<[#"moGllPW]`o(E+2-5ddl6"/X(<"U/hX,i1dFs1M/FnqUTKQc<YC
%A"/`mL7bA0"PM^l1OP0iQR(s:7cC;M!!8DhOU'Qi\i"3:P?V$@l-8IPT:!p'mkCfm)`)6LF.=Z316.&Tk-1I8OpSm__e,&X/_G.7
%n.DBC-0UQ#OV%q)N!6$tFcci*\>@?:]V\ORoC2?XLrEL$Grk<2@>PVW(bB(M&QVVPX<M]iY@Y<[cP'hoCK=3NA58OMAY?/5;o-[?
%)1u=;cZ+L-fc8tCdcN,d)]1;8rXZd=S`Id4c8A$W)!]Y9d(.lV)p2.>h-*Vr^)8Tj&i&a\!&8OI5n1-@ra/#in]glhhnbG],jguM
%H]$7dmZ`kP!"I>+&:M3bN+\22$%%@/@e3t=OS+\p1$SijM84pM0=[M&rOP;W36`(,0q%J0H5$'K!VGtXapo\a1mC5e_4SLBK1g4!
%"Jq*!e^r@JPG.ma6huiNp>0u`Vc1RoF:+1(!&[K\]AgoVb;'pEH.RMfZ+HC"Cr)2k"XMi5VLg33jA/^MXBfZLgK>H_OJW,bA*C92
%6rh^[/Pp>%RBY:gVdNkPaMS]3CP=KqIi[_)ST^f"3?1](4FALFT+Fh]gTn;j!V/p'0'g9EIJM@G.*Wn5S4B;mS&`WQQ>lgJ+):=$
%"oFLeJq_Ome!hIk&E/:Q!f:I&Na!fJ8o0Wo8oGs>A-+`Ui$P0.%I\qH,m5$-IWUcL523`!Ja.W;T\g`%<!,&>EH/W(r0<`"naL*T
%/uY:[M#)J\IS0os2dSX,*e*nuG:i`kpg&_E[pcj--T4tYHKu7HX^7t-R&g<e$\RJMkWo3Pn*_9(=,/Go-7d\&A"0moM@O_ah*bOe
%@kGfu"F3+s\Q<9GNT59'WsDoP6l:f2b5*5ActXSkO!YR=+HZ<]CNc>(XVW4\&F32mYd[>argeK5'6e;C;<p</1UJ"NY!k(XL$HPu
%beZIT#D_0W/GL=Rm;.60H+^a<I7#3)?NXO\kDob-5r)/"7sL*gL?CNA;c/Y<c`]YLA80]9]eijeJ`p7-<B-r^lO^D/%YbLc*X%mA
%c#i%:p*0%eV0;ahLHfddn0dEA&Qr$D''e)_o$Uq)6rci7B#H0b^'QpndS3jKkf\U"V9Y8j1MK=<aG8b?$c&QkW?0rFJlBJ=]Q@Zg
%[9eK(*Cg!M*o%:i)!Dm;87Qd_DlZ5Z0;13PND`2I/W2]*LU^tSP:]0+H.'k%Y0a`_0f%kQCOUI#j\IuiT>6'9#T]lr!W't0pjF5f
%`*'L(EP$%`qGmPD]!]@6Vf6<Qa2Epr?tb0>U$O0Ea-Isb'^&Q%T=6QU/W!$kAP`[N=!^SL_7/^odR:?PGn>tbUQ*'),VgF\#NF\Z
%8umcL2;AjhTd^\M?t=$?TF\d68I+@W*!Y8<$&bsgOj_=)L#8eOg4EWjhbuEf>_b".e4,[Ji3:Ref\0[$h8TI%9hE&uFY6(9R;GSK
%6g&!KLH'4@<VTnd&/M3ZGYBu09e@*VkXfaofN.)i[V>jlUg"4MZEr5i)OFuaAfq<Sj\+*i-IODmiXJnNLX!CegCgT;8R:mYRjQ0N
%S.H1Pnmc*%aTml@fcN$dDa-6G,>-WZIL/"*S]*EsnA)4C]gd6a*b8tWOsZA3&,PoirP23c7l^E*3?Tk:EJp.ZX=;At!dlgT8HWE-
%Ws9D!--Z5*3@]HZ3NalE(qu3P<,WZ<]2'O4Nuh.C#J`Bjd5)2rr;+^.[\5V.,i5!G;emXgW&="d(RsffS"=^n5FK\M3Uk'$XsaUU
%%lC=p4ik%3I4I0'E%_n14J)\n8l-h.^8N90?l@!\.mrj+&@8-X.`"b*!MNB>n2Mn+jp6F5TaN>i@+t9'k"rWbd,[U;eDaQXIu/8,
%B08ij$C,]D,Y.&[inVHdJXsTOY?,<&X%#,Vp)M4C%mTrJ@tV8$<5IFa1TgTW&fj9i--U,9alYN,[].Vg!kYm/rY(ZCNq/i?[]f[$
%8E3[bh4/Y3*t7SAq'i.N]p+f!grgk[UK7j.:W2YTBeR'$[uFCQaGWr'*;u=l#[8P[Bl*KCjg\1TMF$o(F&WJn..'^4)X-"@KN6Qq
%Qm=+KW"VuQ,>:rj=beY<RTLKOhLWSu67tnoX0Y!<7nl3FK.!TDd8?gCO/t6o!_;M/Il&%gLK+@>0.B=iC=Lc;;Ng+,r)?LNpG^_#
%\Gu0`$be,"H5)jr=*YLCI+4?EJ,^l4[![eSL[b-YgO,&9eDEID:nIXQYPS=tr8j9[pr./Y^\[rkf7/&:qA6pAp"*Q"s5hE_s7F4P
%0>;l1p%Mtlr;7YNq=^kUD[stWhToMUoBk/5^\sN!r:g3bl+cTdX9uG.6)b)Rpa(EK$POA_okddMXaf(QbR`T:DuN%@<'KG7l!o1,
%pJ6,/\"A0Ac,n#=q<$6-q2[2DgHYZ"^\m!HIIlTVmpEj.p:pRgLTeJVs)Hf(0P@J?qTh7jmpCS?LHg7fYn'DJqnme$dH/%GF<?up
%b9aNXhX[_]?+g11Isp[QPn/AN]bf$8C#.iqbE)YcQX>.?`t,r^hGkg_6T+gJhu10&ba/:DqsqeZs89p(I+W@DIf&]:n+LY0q=2/4
%3W/+0?[hsmS(HQs6f3j[Eo[+Qs$):Fhn'lq.AGAs<3oS:U%UJLcH6ngK*:*,W7o:!:*P=PE&1f-+^t^/jt4gM36Lisro[O1F9S7C
%S45K2G_87B6G!QP`&o6=H.`Wo.-un_$S[C2F[-0mY9*IICFk-@bAbJdi(m*%UR>=>lF5*eQ9kcAm'E<F(;ei6egBVS;%V9o"uAeR
%FBA*;%Q^pb#Po<A@:?K&'PmG/&9LRp8d#-pF;q,b`;%j@5!'PF?oU?M+hej!<;>FRprG=CIT[!Q@FUF%&i^P>Ao\3=3[-XL/GE;@
%XX(o@c<0Eo!`OW][(]4N0gP=AW>0iZE=+u/ZUsR2OH&Di^!uVFLYr'KA+Ae?+1Rn_W2Ee#Jg_i.+,Bnj948'`Ja%#=5WSpG$?]X1
%Ot7tO!GWO:Q"j&<NP#[m>CMP[*LaKE\\SU4i$`6$W,.UglIEZ[c!'TP_E"h;L6R2]f;t+lG-%eg"?e#DdV%_]$mg<9V\/B.h5]`+
%V5?B$55^6Bk7\DA<+N"8V2_O!P)bc6e8f@u&`_p"c!?%/>%6D5oOUfs-r!#pIqd_.PS@gU-)7[W74@m\Vf6DZ\MIqaP.6&$1+K@;
%"a00QdWuTAg7eoWC@6%-#sJQ](5m;UBG;O@b8P:1C9AkWO*S6C67C/Dr%F%j;ok0V<IJGTO<tFXE#V+Kbu1/ZQeO-b:(BtC!!>J`
%W!.6W?$=:'nACO4%Z*2g2n?Ohc(Qm8<=W_NZP'Lfe/bPXDD\Xa%9=L6RiIul7@;a1c1rNb*g<ER*]<0`TJZRZ-]A2l$A"W_9s_5V
%LA;m>pg:hi!fFQ`Ghl*@p,8"=9-*]I%0?iF,mBg$L!HWVLW%;bJ$E'06o>E-?uE6O-VF+_(s>6;oXJDf,"to@eb^g&fS^$*IC31=
%Q/G4>0FnbCiPDKbD](o)#;%Ep[&elLn/2Ob&hA+;-GWOKN9Y9'pN?2kIrXWZ(%KFGp9/?79DiP++fj')S4Y=2\-VnJ,gkdl(f5ri
%XFoa^eh.h!(Q2Kr,"YY:!pn*5mRSrfm`',W6pFN"[s?YN_A\q+M0r\rc4bt`3iY^SLc?e^VH78GXIs8ZQdKNhj(TE#g\iY#d-0h5
%/_H-0^AOr@QqY?1Bb"!Jf=sG+E]?GFp]#9m'YZ$YaRJbH'XSl9n^[D:WI>MkcUckZZYEg>/TVo4p=(;SK6["!m1Xa`kBA+9)aS"l
%@OuJ<BrL'0k>-*R'(h2=9M5qMTfXuZ^e$NnAQb[?%2G-l?m=:ZQKGL-gXs:+XYM6X/>1VaSqm;%8fc6lr(4rn.$m,K4d`*;+"j5f
%=kAK;5j\_%,n]'Tr65&Xf6`PI0gfRtpm/"K*3L6=,c/*ZQNl>:g5(K_M*l13B-]HXJsi%bBFo8^na0Xpk;2U<;A6o\k#i&4P=QXn
%/Q^H5##=/![,JjfaE0D0/8jbA1_"F)Bqd#9<b]1>6lKh-_L&^HW`Snl6T%:''$4`#_*bqYK1];1ilS+uai<b(S"/NZ)gD$ck49:k
%%F5R%29M_^$h"$;<P&=%/neatOS8_l0eHU/:LLkWkaThjmh>bt"p(+O>1fFn3tO88qI(+i]_J*4S9CZ^^u)"-aksN_Gnd@Q#qA#[
%g4aZV=?Fu(S^EN?2(_L6Wh8+ABbk\G>76d`m9FJi_iK4gecS^*iB:,L59&1'r'Z`s2QF/]M,Zg+>4H)4%Xe%D\,l')%nI.g4hs#c
%&P16IkAS<_X+Q6ri=$A)+BcPg5S$4VA5#[J!=D3XMONc[4"G[PD`rh?jB3"f7\Qt9q$-U[Ht<?gQ$SBO!Y(M5_$*'j>6IZlDL@lU
%>UNnUlEh*$X@%:2HfPgA>QBH-U2gpc8Gr)Io$?a2qTl\Fp0[]nJ,Iu,om;/dn_&Kc6.pfrJ,SEN2d_%(Ja%a[a:,`KR^_>\53P/P
%8,Xoce?AH9HepD-nEA]SZNArpIp88qAct<erpTm;kP9Z&)okT$!8PqJAH>!aFijs&cMl3V9]%)gs*coOn,&+E<>#89GQ$"<$M:RM
%RB"W#K4%%@/s<ZdNZouTE*ig@?tF))GZW"O?nj<3^m9kh5#%!XL=e/+IR4os&`h=Mod(.V$//s+a6q5kI-7*7-.V#@jX0qO89(_]
%W&*'K6l!B=@]:b1jU0r\Y0m6aO@J:bd`&p^\a;JYOn61_#,tf[h/6S$gR])(=+9f<NYUj21e8*hoGMM\^&30M9NG*nQbs>-7B_;<
%kPP"o*#8p+\GRBA^NRN^m2sG/?h0c&q;oBhrU577cbKK%^\l>pIeijWs8(K"qpbd-Yb/A8Jads2Bh6Ms4c!qc?pWYMF>JR^F1R\0
%+)K?R+fDOMecls%!7a0n\l;>YkiMelh*FgY39G.e$Jtg+]@lm:=,Zu1<RQ_pSLCMGjA$9/<(!t`d(Ccg*g!<g*eIM@D/2QJ>*S?L
%3PgY:$2RaZ%R37hWZ!&-Sg=i_0kM-Tou[f5%g[!EHM2n&1d=D!im<Fs_&V%VYo3%a+UD+R[jpPHdfhA47XTUn-TB<1iGBLS(4nu+
%#d2)W;cD%bMlNH<m,rVh@EbQa(7ca2]Vk0T*4jH;6#Af^qosg8#_K(*P87J51ukaPV=F6`%nA,s9mZMWLYiZ0&bl7SBO',E",uAq
%`m0mu#_M1_Qu=U.MRSRs#Wo!/FjDF/41M:=69ajTM<GT#!Que?A",\ie*s+CQNHq:VG!k$?9i[d)iXQIe.Tq[#+#]#m?:_4U:"`9
%a&2uJjE>Q[UDfd.A`0gr=sop+/XKK>r+1G7:KL63r25*l?[aeoaJD/W"*]"gTPYTeha;n[D(gpeYrCO1NDU,Bhu)fSC`,dL3?pl"
%&??3"jft5*PCR_V.!O+Ab)=B(`J5=3!m2TXK$V8]<bB(L`+`IA(KM]A25B?*A"`[ubL\(ibiC;U2qp!m)Pm.q3fRCLg;JS,.:-9^
%QY3*XR?@`4)&.[^YXpX*<mV`h;13*kGSi=%LM!h>P:qBu-#(fi@_Y$QR<%B^rUo80fnujf5((UAn0bF$pt_8pHOUDY#)N(o.AFHd
%B-2<+coQ"iSmKK)q/b5WL!GghM\OTN*9mIDFIs!;X2E@4*h;:_,N:+%pfFrLnd&+Xb,2"SX8O@_6iU#-;6)e)7#=VZj0B.Q51Q"M
%iA)sb7$*n-OHJRff\?<^CT^b?LJ,J8GSj\($0kuhN%?'C5*LI1;L3c==j]q;hTH-Eg@fHGTC:#QrC$#U[nLZfF).CBRf`cN;130j
%#1Ej%qk?E-*MTOq8H2AG;W$3da1m*"V9PTi!ep;l.D<8oQG=O&/@=H65k<n"&DiC$nqCMG?0\c68G^&;]4j?Upk.B(mJr.tDU7ff
%o?CtYhcB+=\'8U5=&-'e+hjZr5&Xm_G.dl,T/MPD5kfKhPXI\;S2'DVAd$,CRV$B-'2b*+S+S8[q";$t0m!Mnn5<4D"cd^ur1HH%
%CJQ&jV:O6Bh524!b&>?J-8a]XX6dZ@fkT"DKlSE3Gp@p3>oN[B4a'"U[0[uX;6Gr:.c=Ms\L"?iTm+-+h`]%V)^.KXOc<'*[c_)Q
%1uG_^da*\\C,-b-Jl1aEBgn/?&IbdRTgqd&#TE67rpDRTRC6+QMYTGt,uDM2g!DsuOsSlnD(j0^cI&.Is%qI)Fg5"Vp/Wr$iZ57D
%M@L@:i9Z;lk)ld?)EPr^D+e`)<^2%g4i-P`_u>@tWJmHRp"J0AgX#Jbc(D>l_b@RFWMZ<RgTW\B#-@)9jiH"kK]N)O9:'-A#IZ`D
%!c*W"JQun:Y>),%a<Q/H[usB2rPe/UHl2hG:gK`=Hu)65*KU%<Lnad8&d,hM@p<.<&suu0mUSqYN\CW_D$uto)8=m4MF*&qRVha4
%_[rdMg(]s3/t],q)4++6q&RF.O<Np&hK'_*^$3N#,T'J@nfO*?W3j(\%e"aYNQ7NY8'#;CC_OJG>"L@tDNi)3bXVgO5L$O"b^=fR
%a)0!O\g[qMg7)uW`q?oNJakd3HE/i3q(+)\/Vh(_K?J'T/S*?I"GHY@=[`ilLuU8'[ZLo(a(o$dO[HIPf/qQ^*ndS>GkSdblF1PF
%g"4Gf9[?A]%/Vcq@S-WIT&'EGHSt]7\)!"iV=j7uGYS[l/-BX)pC,;Vo585R$4Bh2]c*?PoOlq0mMVHRm=fO]6ShN"W5d0oq_:H]
%/u-qDd*,Fc)CMrQKuDamNkQF#RtjVIB4u1)!Aj[hB5X%%QuKdlR>85GSU#(dg6n9h?Hp^;UQ9$Li?^-hk2BMs[c?>IO(N!YMgRkX
%qJ[m2gK$7>c--TaGO1ql1UE-;)eH]!1\3;X(GkZ!^^k$hVG9*C993]IZ$Eh$12N1pVHg2]atWZ0\_JtsZ_Y3+4dqcV*oF\o*DO]:
%KK,?eR5.+05)tt%<aBT]M,>AV>rPQ7%mFgel\imiTA%Np?/#k?etMnKB#ZF#j_/9&oW/(91c'KbWVLQl1]<n!$8/dIiR<j"VS+f+
%e*Ej_B5S=u1G_tQ]m5n`XNVNU\fAr<_an+Xbd0T"0f-.4X9dl,bfiHG$t:'h'JV7sS\'S^hV*@a4u7^e=Y/F\HufrT_cmicHes-,
%B?oB2\eUe_cRog:Iln+3,oJA,&1^[4E,LLF8Agg]f"9>`9!`XJTm5=X9bWB%iM+--Tl$']mD\k.X][.>;4*_s++[$hD]dO(`ZXQY
%D']6MI^\-,`9MO#I!OTIf)<kCpK<jUp]Zs5,Wr^;;(kn\R96!R?>D<YcA'7*QUOIgLthJYT!JHE]P5"O^nio`F4"W8MAIk[n0!b+
%D+9%B^s%PD$pMO?.s?!JGBMbBeDJ]%dl#1srKVGC]A7kg_o_H.Ago$`9r1!GK]FZR[')rtWSb*'RdW^e<*eMFK]Q:Z+t)Qr*o+-h
%eId?s[ik!S"A6+OgrlhGN]Q>8`W[eXE;EnIgI4<_,anb+3s2Y3_tp@?hRo3/&SjFTJs.$mRI]*Z?\\._SP7>&9\!L96I"A0Q^3iL
%\d<Ram4$+g6a_?'?,L6ZGT]6[]o@jS:><A/ld^4B2`Zl=_+15<#IKW9"p8nq.]5l4Y3n8efO[/]EC,X8i#-DG#LhND5qtu6o6e%Z
%j0NZM>BlfV#f;-cOG.1Sf'`VF8g1g-N2,4Oi!67n[5\p@S3_!U[Ug.gJ5D5t?^eHpn-1S$=r8,Rd;TL;)DZ466WO5sik#k[#2bg>
%:>DA.lG.gKp$pdb'C8u'3j3B4G=(A2=c\n=TOlhd3R1@oB7^o0>B*f!miK%(<X*nLL?,<%pVU=\!:r2f]*Vrr$0sh%>_hX^0YQu/
%;g<02k.BA[%S!fhmPPX_/.juI=][<(@&22s"nYlIkiIn5*g$no7>3mZ]ufUC2Z?so,Fi8-G=7+pEKFP]r&%\>_1CXCrAA1"TNSB4
%;jZ)oUk\.WNBB*4h_qnCpI,^@]nlm;>D,][b\tY0XX!%el!BaB>K(p<n"=2OMk2G97q!(XL'I8'k0H=k<VMmHV9<8c9Q5[*@\i$b
%IAa3tn=<mFIZM0b;\mVh[)0IA>_I;3R]JjqM)_FaA!!n=A%g`iY2\3DhE<^T_I`(Bh40Il`ra];U?YDCh.RR8lN&+AY&1;\8R@&(
%jecl&6D#(Sk;N'?_"^LVP_(@Ir+W4@BQ-PuDm"^pJi7mph4&JgF0r'26!QX)2iuC*=;$DXU00;An6HX_%bkCkY%-5F].V?-QUgZ'
%9f!@[&ImEcP[R*3&V]%Jl?Y(t(n^(@g`G(6YOrCF$*QM5js8UNg2qV:(Unfebb.&0QZ4#JF5@=/GMZ&HCU96X)YUQ"[:u:5$+LXJ
%V,$j@caq?1gWs&I>kaq%BU]9kg4<l"%W.PVg@&eJF_'q.2=H0BH.$-*:R8g[1M.lq$F'&DTm/s3V7i9nY`kfnFaQY4QJNO2a0r#\
%G\OkYpM9B.4"_%)FPGoJDEIjg"h,MeWN_e/mf8+[E;S[Z/o<NfIqcX%*fmFM^L&%(=JdIZHJ@m+8A/hQf=1`o1tO0W6-M9W/:M\E
%E`sI;W%qOGU@R#c[+o`VVGY9Odort>qjP[+[-/C_1`sL0VKFj43=,,sd3Z(mJsW7_XI$U<?Tl+'9/9+'0339J;dn@G\TH;DR7l/_
%Ro)CteSVW1*K8LI6BN&,kg4^IOGDuA7UTFn.3A`uElECnaG]YP]fhm+0\ht?]B6]Z98;un*j.;h<dR#5o4^jf^=_u<6uL_uZ1;B%
%f]MMT\\$JKN<c,e[TQCf+d3c/%,*aERBqd)>EJ4FpRe2dle6`1dk#VZ@J"4[DJ:3$2:*$T]o74hF0lehlYTS=mB:@hX;e8R%(J4Q
%h)#e,FE[Ja4LD6Jg5Ks7jp*h*D=6Q2o\!V1aqY:c=6ZRsJX:Cnc-X.7o2mh$PkuJU>ZI%'kLS<[GVl5d_[WRAPDGskWt`@3nX`E$
%.Tr7-csb+J,h>uD@++\THPa42gFkjq=(e49#+i]eAF+)@BWM0JQCoCd-dOe./]qYuL\1P/[ZlC5q3>:K@(=OmOn%c>]*YKXK!_9#
%[?rM^+:%L8f9(e<9(ZT,<ua5q7ED^#?hW`:S-l5U@--4tfRbG6ILasD?\r<O)gL4o[TEb1T)j/9jP9Nf*3=<0:*LA`qMd8-Yl'df
%oc]8e\55M2&LRbW*1Uma?`W]7iAJMWO+M(iMfKlc'`_u#Al\;CW3I`pLBaH%qD=Rh$Hf5gg7jM&;.u[PI/g_UE8`:Pg&]2`qAI)n
%-sFm4S/='A&'Hf8OqHa?*e>`LDY^J'CjN?8%q^@A,)ks6TPcB2%"9Qajp4>Ud_3eDcL*7Z>*@gP.5Kq6f?enjiA;2'f:k8<3OGnC
%%D)@FAk4;O0T0VfBd?)B-MG&:Gs?f(]'-3cPHan9h^_;Nk#/VsAE&h*IGb,VNf:d+_5OjH"SMnSNNhK\5SK[m>-npU0eOnf;!hU^
%*EV;.WPQbVEQVjVa[oJ7k&5mp22YIsA0Z*;I'#K2'Q^cN[@E^;QM;LP[*#=X$4>nIH8Pao;Bf`E=tin^Vj/#U.h3g4.M=!)>Xep<
%.M4<&k@?Oa0]e&fBZ*;-NM9cdB\S82grY>dHInej3gna2^4/T112d/!&W.,N>'n.4O^^QNJlsgA'-X5Zg!Qae^=;.7jI\u6k#lD]
%3lfSi"XR=d5XKE@+CbskIN@GcXu:mQ]cV<75.heb2:mo]]>XX7T"G[+TMfKVD)O]3-egA`.T*biK*1WDB+/LlX[NARoh82\@BSi/
%PgoPTke!%bSO[?[+W'/_F3Z#(NIV;IGdN_A=.ap;P7GkK/t/n:%Ki#fX/FHY9i6WQ;]mZYK.LpX)]#qnOul"S[5\ruQ6+/;YJsYh
%9`#7ZFPc`D,t]#M>9o?9(b(nhe6-C>c;a,D42:N"S''=>H#"KK76rZVe1<W*h5ZbcGNp7;(1g\DpC&h2L[US>Kh4$=k1doMB@65W
%c%DEE,/Q#[E0AR!S&$-oDUf8gCBWYccL:_=hsYP2RNn#VF"[@`Bi%N9q"Lo;npNb:_T@r%5"XerWG8#qW7:9uMRtsboi&Uf*#%6G
%15(EUn#b"1'Rk'4$JVZ:[4`+IbnM;OD9T4Hi2_l.SVGaAEp'?LGF6"?Ie76KQ2mHMmV!L=T??Z;p8L:5#>.9!UGFAnQK[4cX68+n
%LmIIml/Ab:r8i!!`qQrI$,;L\a,28/J8RmD?$jk-baR3O_>Q6jrU]-E\BXV&]5d;r:HiXBD/psG@(#?B^'q'n2$d@'jaF5`[olb!
%Qm#Z^ojotf<1gfb^\8DVrD%'1$V$N41jPhhm4*;KDP#.+XLNTum999P+a>4XGhKSO^Zda8j;'n9PULUDBH>m!2nu&3)nbh2:pY$q
%Zpu%p=lD.MWuM@BF(XLV[_Y#i*[12UL=jXNoc'CPLhGn=C2I]ih0VO&a[BaZk3NafSU]<+*uh"Pl_Lf6\q)ZIIs7IkWRHGpI6%(O
%"i_#"+Ke@S1$;iOA]300%T_Q/S;.ih=0-V&YY-!fq+R0"9-[ZVekfl(/PCm`p.M=1K'g9X*oSnNhA2"-p#*Pmm3M%AYbi$-0.fW,
%gGWu+k$3(,!_+)M%/PF)3ATOm<cf#0.)k[(=-_n6bMR$VI.TF*3PV-J33QggJid8\n??D'pdN>Z\[eh$AN`^TnpeBg^sK8S%TIgN
%VQ<6qU<&7Q5(Q#Bc6VjK;iAP3mpg#tUNrG)"09IH`heRpiO%k'g1E(Q:2Xp2MN4<aD96!/m>0Vr7+g6apgc.M:7CeM,p'F20bo=t
%$/[\iSP7]gj5i&9&5ctW1`J`:(LqJq>Xbt=oV4Lb#0\=WJ(!XY4$t'TEo/P51,XpSNNSm!pPaG&%(Ol:F[AY'.tj@M)>ta8PC1$_
%D"egj7>at9m5[Kmb7]]UM#a+M(#>-[,$#FF2U#F^P^*aBIFV@4.Ej&OX&&$4_q<L$WXmh!3l=S=h*GB'N5WA6!]q8l*<I<R-K:p'
%QE'^/C'^$M48J@^mgsT3Xu2Hi<@H&g\P`CAs#HMK=d>Q!I)F<orb8</WT?H/#&2Wi_rO:kVa(-*<ZBN)ROQl81,r1`PKHi4#RG+'
%=)\M$0Md.h&T:bPc_2bP")Jaq<-_TT:sW(6n@"+afJ8ZrF77/qhuD@9>"I>61W1-SQM8k*lGn/llq\u"r2?=b09pOJ5(LrM>,<[<
%-&u<r_b=7NitVD04+GaTo9CdPd5[.djj]8;,X7'qH@dYD-5n't+X;7kQLZj6O?(0aROOtKLe1>cgp-n5R+LP%NM;]4qs($$19^jL
%$/!B@+nf9a)%na,X&`89iHMpO+\B$%3FEkQLH(Efo2s7ai0UlioPl<BA#cQU[\:L64X>BKGFbFHigsq=Nk?`YM;lVWh-RAOOIE;[
%0&[76M-r)G'K_oMhR;h&8.Brls)LI&,c6/pOXF#c;W`dhXWc]hVN[>Y74a=tEi,T&WQ0'=_S!`hClZ^X"eA;DQ?eC]Fc%X`gX]pY
%\K"H>:*6m@;/cr7>F@I)AChMGKjn=P4)#pKj$JJc?GW^*.lTQ4'&[i3'\;AKE>>1'BoCe+;o)j=%m3lr^n,<SO%$,b9@&A\adT@T
%4PdCRrMm\&1,(;$-nj7>>XG=-_A_/aS#>.XGdo;EXS-3H5,*?WpuImrdP_Po(a@DXrPWg%Pl#dR2.>sK7#90];1Yu%57<p2-I03T
%$j8Q,_HGMj>@Q:D?9=b*V'Bm4f9js9&K-sfYf>7*1D&9d\hsRq?o=**4'S@2T%IfU4%F;u_Z`<;`QMVJDKGUl6<1*f-(B$5>WUW)
%ZkW[mc3"V5>J7t)qo^t2M#V5H;4a9B'!k5mTLN!e_cQ$4]U',7?T;Y6gkL+]1J`@N;3lOG7MLN[gE?2NSrLfF:GhcM7F)Pc[>H2-
%;dhBXjMRV@j<CAm[X01_f\O7.K?-gnR9?/he"@tR<&-R4d`m.4XUbn1.:M8o(jb8!<Ko?$mWS6Q=F?:QAjCBs7#:K'pQ:^WU`Xot
%Jd4)Ha#^$nG^!p7H3V75@n@AE17DA^HSGW@T51A?Qqgqtl_&0N8@F#+iHg)80I6A#_:/'847CZE9S9K^R#Yq,^W"@NEa\o'WdG/P
%-+&;;bs\@4,1jV7H5pNRA,7oA[b!FUQMW/nQ&,J`Y[N6jff"\jcFWsgVqVa6i5eEdK'rF;&-56I&_G-^&Z5s>-btO\M7+k4Voq9'
%(JiD;8^jRO1_oWOnZ:?%4C&EUKIhDQ,pc,I.?002s"T+l98fpE*OUk@+n33H4U^KuILXdl3+bWuHZ$bk18U)#6\!41bLMH<[dYh(
%9G.ALA*[34b<n@U$VrtbM-]gNc4.$IRp5RlL,U>HB2R,(1(8a)'L?InC"^Zf9oMh.S5f1kWH^5cBa\F%FHWqKaGC:9=CB0`V%#Rb
%OI=e%Mf&JSOQ`MNpM.O)9(GmfmTl(-NWGo`Op-G!;+hd0_djZNP*[ag+s"^S`k_,<dcAN*s66'8+.e/G=RZ?25'!",!2B%Z`GF)-
%SVYs7`[&Jl2)YQjKWpL`ND@JU"FCb2p*;iB?u<F*)@[hZ?!NR#F;Uj&8#RZ.4RIuSdLsO265M3c3UmGLd7c)\Pq;"VRg:bE8[k?]
%2"XpCR/_<Y=cshl^cI,8D9j8Pp:CQ%DVA\!Et[bQiCRN$C$n.[%<5m#O2K&W[KqL/p&mbuCD[ghKm"XWN$3_>i2J?8+YV)Ym@VLh
%;VRQb]#dq7eSPHFo?`FjYf."JnG%mH:edbl,%BboqC<Jd]Ho>+4+"A]coIS[T7JnI-4tm[gR?`U0gGL)V]MCiTV#!K7jAcDbacDR
%g&Vf8Q%ff^<<MegMBhk4C5^Spa76`9UI34J)3;t/Z]J0A=ud$P`^m\dAb^!UTprD&XUoC+[&;$!'<NM@?,R327*M[S!kmjq_rss,
%,;C02:_RC/s3&o>cV4ot6PCUAjm9mWGW\_LSaOl@$]3M4g<*Au3&U+%5*$n%O0_#nAiPWZqfK\ue8SUR?q^m9@2h4VoF(hW7od7M
%<q+X\j=&0t3WolN2Um5H"+g&YA6i->o;B6VO-;\CFQlDsDc5o)m._3DSjO`)1K68B+Y/*i!G88iSIhd9I%>Z\]=S#^MTQmP]jJHu
%oB!`:#<CY-YCH6<(IntWC9B7]?@>1u\271Vi28`MoTkaQ-ASFh?FWdk)hk<pS`]%NF#(uGdc](`+6a!g=q4l:\%h=UPPE_3qWI<S
%If')W(VLG\?LN&uT(7:h$-/+!6A+KS=5nW1A&Rq%*a!^6E(?g0C6?/ZW2%X/G/ImP:+atGRI'4Q>.@gc9ha!fV?q4ZZo?6V=jMb'
%&#g22-`LekP#fArhf00G;_k^h0&X:*a@U9,rt,O1E'h+F%H`SCTo')p`^am*P/r2O=@6;i].tNpR+8*MXRumKoE`2T>O;_e#s"J'
%qaA&6*u!n6`SG`*UB"/+&=?T7gIfn`]$H4t]lim_*l?/#R^<N%`<HgHKQ10$h?,iW72>S;5G&AK,ds"I@aVab1g'n9fjC0u)jkY"
%CBX<!i:aUQ9[TEP+Y",.5(JI&Gn&=HC2pjWCeuMjade3nIgS(*<^j(-YERZSR7]RtoSGoKaDjL]iT]!e>si!Y;\-'Q(pC*X?_hD5
%`IWa37MH&c1W@f78TmYaV6DW-k-&pXM+(V&2`j4M<s/#2D="J)fB^Mq+WR/pH$&loBogWF&KJ@p5mG_E)E3M9[4Q`Uk8K,k5#3d"
%pTQR-hWN&p`&jCph;q]TI>W]D&-aJ9^SWK#(:Ze(:\(1cVIqFX(\'8(L@`\:<jiC<%Pm1`m/#e`r5iHim"+!t6$:C:\0#jD&/d'P
%UW+@0Ot@mj*!rsI>_l6SC_*N('0Wj",:MkMJ$k&3F`+H<K>8j#B\:1GfEPn'eW3$rrOIh2]Jm_&7Sp'29a4K<P&eg"O::AhC@R,J
%p-FdgB6]Fc3!p4:%U,6Q8uq&U$\1UHVN[S8h*Fb_pR8#A$0fPr*QC8T@:%S;W.oHlN;]$H'FRZ^gF?AbL=g;"&.m^f,F@D;@7Knr
%aAcPqJGOfJY;^<L!HKi[SfUN2ESVc-B1`?K!)=oZgHU]5hc?4tHRb+-kC^CTo"!QgnYRi]9-9Vo]as+WT8n!]c8)0-nfo)tNX[aq
%d+rr@Jhl=sb-0rP9kl7k[I4Jea-k>Gk2<LaRr!0'o=6#U9[+puRG/#?:^]Q*A2n'7n0IOa/OXo<WCC!EPo0K1AdGY&^Uk>O>Jfc4
%aJSUDfES,cBc9>I?HR5'b5fCTC7DKYWLi%.XFV+AkWGmCfp&PkJ!N4Wde&SB0VBN4<5XgUBS*"eL)[\ohK'*<?gJCW`a'0-[PhMB
%6XSqc3rSj!7A2\gpI%4Olh]kKZ3O+p:tR;,Sb?_*:I[f&/te[br9)S2GoY[Re,+h$;F:3#9;TJ_I$J6X&qi,hE]rb5IuW)c/L@?Y
%>9'MV/3)Wi>(dLpD=[:0QiYt[?]B3@$&W85Nq8@GWl3M><$o2%o&5WuSGMKZbiQNHD/\0+Lius=5]_U"VCdd5^5ATf5g<i/9H:&b
%::eG-S$Gp-:Dio$$lj")b>0m09T+!\*6kd93N`2(*+9-8C1'N=5Dht>B4ZuiU"/+jMP;H"QYk).d+hEVEG;*8l.f:q)1q8H=D8?.
%Xh#c:,]SS+7*[di2MeiJ_l0$3lQ9<!adKtl9X.;C+cG=.&`bFL7?S.;';d'D%UllT_2e,+mtkCaC0J&"qdefUcnN]081PS-B?T'=
%o>BCmN!E.2\BbD`C!fUL+Tl3I]Lj(s=lWo0OSrV$=P5A?Xs9sD3DM7V110C#GfnZTmXCR-HY_i_AfGJp=`lPIlPM9B%W9M,Te_<*
%,d9WHc1bPn^tX&@HUJN75!#%O<,/i7[XO1RJ[X[=R#J#QL+H&R$mKOgX_H&rf66&<"hQfo7E%R(&;c#;l++<.@U4b?p2Eb(gQSeO
%PG@Ip>$3]7nrRV-jh;lT@MobL*gIRVWohK.pI2OH<tW<Z3EBjuIkl!PHY4`@qE\9A1@$jl^!5DgP_'h.:$\nk4'M@%PF$_L/c9%j
%ndm;5;HAZ4f6+=@KgPPM`Ir+TM))O/UXh1q86HO-i7g.fgEm)oXD3pKQu7VNFJ;aCs/Ldb["1]ue>X`'$rjk*ggpe(#tH6@JFXD2
%oOHfAr*;E3Mk-u9]=f-FQXpAM:oL!^dTCj^X<k="ZO_P%j'QQ9q0OK4h^5i',Z0,1J1&m^XE`OsXG^N)%rNH6.8C["O1qIY<H`<o
%KXHJ[n"kFFY@.K@6'9%g.^S*@C=`"`&Gb#])K[$t;VFTu5R'q/;AE,Fd4?`+V4N]jG=lm8_PSE3I>\^=g)8,.WMk]mcUkF*'_/?a
%V"GS(`X&D+mM_A1";X/#]IU.ONkUkiCLJM\ak.q0E4>UgWY#>D8t!UC5BN>c2NoX:IF?iR<KSl?a<qXuYNe?6-B5*$KTH"XqU)+b
%pm)<i8u`,GhWG>JPLOK$SW4L76(H'B\7`'4`5!q\LEoA1gOJXo?XDooC2W#,_,+LUomj&[2c_YFMWRppZ__L'JZ421elko=g5h14
%A[Fk]2m^(+k1%"[<Co6<oDsfr:H)5bCfPj:(CC*He=9KKPgk=48^0&k[nS&b!M'@g[b?GpTF+nDQnufXpAKAq_Tt-0#$hH15T_*U
%,I+(9N<Y-<>*CoN:*=f`\s%s3gficM(N??@oO1=BDHan>K4]F8G1W<eg+;UI#!$i6<#oK"8B%Emo2aN;[X*X?,_GR)7r/[<8UV@/
%mBm-Vl"h-J(uC6%\\/kY5mqJW*gG^:8ZTdbVl@[YhC'QMD+%?:Nd?Ke?sk`j2tE?hF0J>@A\@[<FC<)M5cr]Z!:3*RJ4*[NOo$3G
%EpoK@JbQ1*O6D>GEA6o1bIcqGS=85oh&g%>A/8gY2+Bam[X7=&!2IbuW%DXd.Pbb19Xr-gM%<f*iuk5V1thcMlt5Bb#?n1qq'j8s
%`3YZM?``HBkd=m:_Gr>!\Rdbt!MD^uE"onhPC15,KukeLO.9<7-u\78l?1jt*#R+4UKM\u7@n%<,2bndHibkcr%0UANuP6gJ5u4o
%Kbfi@YYM.9gu!)hZfU%F5Afl'm1_b`r=7KN07Vf,s/W?<\9n%DYJ5Mb]Joc]DdNG%otPnOo#itq^\uhmrSbAT5JDU?o'<K)b3OQG
%s7P^hhnK*Xqes2srTq-\Ie+Ygn>"/;rq`gJooK.OB7KT(!QfXG)Z~>
%AI9_PrivateDataEnd
